
getgenv().DRAGONBLOXULTIMATE = true 
getgenv().MHM = true
getgenv().REAPER2 = true 
getgenv().DBZFINALSTAND = true 
getgenv().RPGCHAMPIONS = true 
getgenv().PROJECTSLAYERS = true 
getgenv().FRUITBATTLEGROUNDS = true 
getgenv().ARCANEODYSSEY = true 
getgenv().PROJECTMUGETSU = true 
getgenv().VOXLBLADE = true 
getgenv().MIDNIGHTSUN = true 
getgenv().KINGLEGACY = true 
getgenv().PROJECTXXL = true 
getgenv().DRAGONBALLRAGE = true 
getgenv().ROADMANODYSSEY = true 
getgenv().RIDERWORLD = true 
getgenv().WEAKLEGACY = true 
getgenv().AVATAR = true 
getgenv().HUNTERXUNLEASHED = true 
getgenv().TYPESOUL = true 
getgenv().FIREFORCE = true 
getgenv().FIGHTERSERA2 = true 
getgenv().ASURA = true 
getgenv().MURIMCULTIVATION = true 

--UI LIB TOGGLE
local toggle = false 


function onKeyPress(actionName, userInputState, inputObject)
    if userInputState == Enum.UserInputState.Begin then
        if toggle == false then
             toggle = true
                game:service'CoreGui':FindFirstChild("Library").Enabled = true 
        else
            toggle = false
        game:service'CoreGui':FindFirstChild("Library").Enabled = false 
        end
    end
end

game.ContextActionService:BindAction("keyPress", onKeyPress, false, Enum.KeyCode.RightControl)

--DESTROY GUI----THANK YOU 10X FOR THIS 
function removegui()
    if game:service'CoreGui':FindFirstChild("Library") then game:service'CoreGui':FindFirstChild("Library"):Destroy()
   end;
end;

removegui()
--INBUILT ANTI AFK 
local VirtualUser=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
warn("anti-afk")
VirtualUser:CaptureController()
VirtualUser:ClickButton2(Vector2.new())
end)

local Lib = {RainbowColorValue = 0, HueSelectionPosition = 0}
local Accent = Color3.fromRGB(138, 80, 255)
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()

coroutine.wrap(
    function()
        while wait() do
            Lib.RainbowColorValue = Lib.RainbowColorValue + 1 / 255
            Lib.HueSelectionPosition = Lib.HueSelectionPosition + 1

            if Lib.RainbowColorValue >= 1 then
                Lib.RainbowColorValue = 0
            end

            if Lib.HueSelectionPosition == 80 then
                Lib.HueSelectionPosition = 0
            end
        end
    end
)()

function Ripple(obj)
    spawn(
        function()
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local Circle = Instance.new("ImageLabel")
            Circle.Name = "Circle"
            Circle.Parent = obj
            Circle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Circle.BackgroundTransparency = 1.000
            Circle.ZIndex = 10
            Circle.Image = "rbxassetid://266543268"
            Circle.ImageColor3 = Color3.fromRGB(211, 211, 211)
            Circle.ImageTransparency = 0.6
            local NewX, NewY = Mouse.X - Circle.AbsolutePosition.X, Mouse.Y - Circle.AbsolutePosition.Y
            Circle.Position = UDim2.new(0, NewX, 0, NewY)
            local Size = 0
            if obj.AbsoluteSize.X > obj.AbsoluteSize.Y then
                Size = obj.AbsoluteSize.X * 1
            elseif obj.AbsoluteSize.X < obj.AbsoluteSize.Y then
                Size = obj.AbsoluteSize.Y * 1
            elseif obj.AbsoluteSize.X == obj.AbsoluteSize.Y then
                Size = obj.AbsoluteSize.X * 1
            end
            Circle:TweenSizeAndPosition(
                UDim2.new(0, Size, 0, Size),
                UDim2.new(0.5, -Size / 2, 0.5, -Size / 2),
                "Out",
                "Quad",
                0.2,
                false
            )
            for i = 1, 15 do
                Circle.ImageTransparency = Circle.ImageTransparency + 0.05
                wait()
            end
            Circle:Destroy()
        end
    )
end

local function MakeDraggable(topbarobject, object)
    local Dragging = nil
    local DragInput = nil
    local DragStart = nil
    local StartPosition = nil

    local function Update(input)
        local Delta = input.Position - DragStart
        local pos =
            UDim2.new(
            StartPosition.X.Scale,
            StartPosition.X.Offset + Delta.X,
            StartPosition.Y.Scale,
            StartPosition.Y.Offset + Delta.Y
        )
        local Tween = TweenService:Create(object, TweenInfo.new(0.2), {Position = pos})
        Tween:Play()
    end

    topbarobject.InputBegan:Connect(
        function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                Dragging = true
                DragStart = input.Position
                StartPosition = object.Position

                input.Changed:Connect(
                    function()
                        if input.UserInputState == Enum.UserInputState.End then
                            Dragging = false
                        end
                    end
                )
            end
        end
    )

    topbarobject.InputChanged:Connect(
        function(input)
            if
                input.UserInputType == Enum.UserInputType.MouseMovement or
                    input.UserInputType == Enum.UserInputType.Touch
             then
                DragInput = input
            end
        end
    )

    UserInputService.InputChanged:Connect(
        function(input)
            if input == DragInput and Dragging then
                Update(input)
            end
        end
    )
end

function Lib:Window(text, accent)
    local FirstTab = false
    Accent = accent
    local Library = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local MainCorner = Instance.new("UICorner")
    local GlowMain = Instance.new("ImageLabel")
    local LeftFrame = Instance.new("Frame")
    local Title = Instance.new("TextLabel")
    local Line = Instance.new("Frame")
    local LineCorner = Instance.new("UICorner")
    local TabFrame = Instance.new("Frame")
    local TabList = Instance.new("UIListLayout")
    local ContainersFolder = Instance.new("Folder")
    local DraggableFrame = Instance.new("Frame")

    Library.Name = "Library"
    Library.Parent = game.CoreGui
    Library.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    MainFrame.Name = "MainFrame"
    MainFrame.Parent = Library
    MainFrame.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
    MainFrame.Position = UDim2.new(0.330208331, 0, 0.304824561, 0)
    MainFrame.Size = UDim2.new(0, 652, 0, 355)

    MainCorner.CornerRadius = UDim.new(0, 9)
    MainCorner.Name = "MainCorner"
    MainCorner.Parent = MainFrame

    GlowMain.Name = "GlowMain"
    GlowMain.Parent = MainFrame
    GlowMain.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    GlowMain.BackgroundTransparency = 1.000
    GlowMain.BorderSizePixel = 0
    GlowMain.Position = UDim2.new(0, -15, 0, -15)
    GlowMain.Size = UDim2.new(1, 30, 1, 30)
    GlowMain.ZIndex = 0
    GlowMain.Image = "rbxassetid://4996891970"
    GlowMain.ImageColor3 = Color3.fromRGB(15, 15, 15)
    GlowMain.ScaleType = Enum.ScaleType.Slice
    GlowMain.SliceCenter = Rect.new(20, 20, 280, 280)

    LeftFrame.Name = "LeftFrame"
    LeftFrame.Parent = MainFrame
    LeftFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    LeftFrame.BackgroundTransparency = 1.000
    LeftFrame.Position = UDim2.new(0.0230061356, 0, 0.0366197191, 0)
    LeftFrame.Size = UDim2.new(0, 139, 0, 328)

    Title.Name = "Title"
    Title.Parent = LeftFrame
    Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Title.BackgroundTransparency = 1.000
    Title.Size = UDim2.new(0, 139, 0, 50)
    Title.Font = Enum.Font.Gotham
    Title.Text = text
    Title.TextColor3 = Accent
    Title.TextSize = 21.000

    Line.Name = "Line"
    Line.Parent = LeftFrame
    Line.BackgroundColor3 = Accent
    Line.Position = UDim2.new(0, 0, 0.14199996, 0)
    Line.Size = UDim2.new(0, 139, 0, 2)

    LineCorner.CornerRadius = UDim.new(0, 9)
    LineCorner.Name = "LineCorner"
    LineCorner.Parent = Line

    TabFrame.Name = "TabFrame"
    TabFrame.Parent = LeftFrame
    TabFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabFrame.BackgroundTransparency = 1.000
    TabFrame.Position = UDim2.new(0, 0, 0.189024389, 0)
    TabFrame.Size = UDim2.new(0, 139, 0, 266)

    TabList.Name = "TabList"
    TabList.Parent = TabFrame
    TabList.SortOrder = Enum.SortOrder.LayoutOrder
    TabList.Padding = UDim.new(0, 8)

    ContainersFolder.Name = "ContainersFolder"
    ContainersFolder.Parent = MainFrame

    DraggableFrame.Name = "DraggableFrame"
    DraggableFrame.Parent = MainFrame
    DraggableFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    DraggableFrame.BackgroundTransparency = 1.000
    DraggableFrame.Position = UDim2.new(0.259202451, 0, 0.00563380262, 0)
    DraggableFrame.Size = UDim2.new(0, 483, 0, 57)

    MakeDraggable(DraggableFrame, MainFrame)

    local WindowTabs = {}
    function WindowTabs:Tab(title)
        local Tab = Instance.new("TextButton")
        local UICorner = Instance.new("UICorner")
        local GlowTab = Instance.new("ImageLabel")
        local LabelAccent = Instance.new("TextLabel")
        local Container = Instance.new("Frame")
        local ContainerGlow = Instance.new("ImageLabel")
        local ContainerCorner = Instance.new("UICorner")
        local ContainerItemHolder = Instance.new("ScrollingFrame")
        local ItemHolderList = Instance.new("UIListLayout")

        Tab.Name = "Tab"
        Tab.Parent = TabFrame
        Tab.BackgroundColor3 = Accent
        Tab.BorderSizePixel = 0
        Tab.Size = UDim2.new(0, 139, 0, 27)
        Tab.AutoButtonColor = false
        Tab.Font = Enum.Font.Gotham
        Tab.Text = title
        Tab.TextColor3 = Color3.fromRGB(255, 255, 255)
        Tab.TextSize = 14.000
        Tab.BackgroundTransparency = 1

        UICorner.CornerRadius = UDim.new(0, 6)
        UICorner.Parent = Tab

        GlowTab.Name = "GlowTab"
        GlowTab.Parent = Tab
        GlowTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        GlowTab.BackgroundTransparency = 1.000
        GlowTab.BorderSizePixel = 0
        GlowTab.Position = UDim2.new(0, -15, 0, -15)
        GlowTab.Size = UDim2.new(1, 30, 1, 30)
        GlowTab.ZIndex = 0
        GlowTab.Image = "rbxassetid://4996891970"
        GlowTab.ImageColor3 = Accent
        GlowTab.ScaleType = Enum.ScaleType.Slice
        GlowTab.SliceCenter = Rect.new(20, 20, 280, 280)
        GlowTab.ImageTransparency = 1

        LabelAccent.Name = "LabelAccent"
        LabelAccent.Parent = Tab
        LabelAccent.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        LabelAccent.BackgroundTransparency = 1.000
        LabelAccent.Size = UDim2.new(0, 139, 0, 27)
        LabelAccent.Font = Enum.Font.Gotham
        LabelAccent.Text = title
        LabelAccent.TextColor3 = Accent
        LabelAccent.TextSize = 14.000
        LabelAccent.TextTransparency = 0

        Container.Name = "Container"
        Container.Parent = ContainersFolder
        Container.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
        Container.Position = UDim2.new(0.259, 0, 0.169, 0)
        Container.Size = UDim2.new(0, 471, 0, 281)
        Container.Visible = false

        ContainerGlow.Name = "ContainerGlow"
        ContainerGlow.Parent = Container
        ContainerGlow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ContainerGlow.BackgroundTransparency = 1.000
        ContainerGlow.BorderSizePixel = 0
        ContainerGlow.Position = UDim2.new(0, -15, 0, -15)
        ContainerGlow.Size = UDim2.new(1, 30, 1, 30)
        ContainerGlow.ZIndex = 0
        ContainerGlow.Image = "rbxassetid://4996891970"
        ContainerGlow.ImageColor3 = Color3.fromRGB(15, 15, 15)
        ContainerGlow.ScaleType = Enum.ScaleType.Slice
        ContainerGlow.SliceCenter = Rect.new(20, 20, 280, 280)

        ContainerCorner.CornerRadius = UDim.new(0, 9)
        ContainerCorner.Name = "ContainerCorner"
        ContainerCorner.Parent = Container

        ContainerItemHolder.Name = "ContainerItemHolder"
        ContainerItemHolder.Parent = Container
        ContainerItemHolder.Active = true
        ContainerItemHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ContainerItemHolder.BackgroundTransparency = 1.000
        ContainerItemHolder.BorderSizePixel = 0
        ContainerItemHolder.Position = UDim2.new(0.0254777074, 0, 0.0365853645, 0)
        ContainerItemHolder.Size = UDim2.new(0, 455, 0, 262)
        ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
        ContainerItemHolder.ScrollBarThickness = 2

        ItemHolderList.Name = "ItemHolderList"
        ItemHolderList.Parent = ContainerItemHolder
        ItemHolderList.SortOrder = Enum.SortOrder.LayoutOrder
        ItemHolderList.Padding = UDim.new(0, 5)

        if FirstTab == false then
            FirstTab = true
            LabelAccent.TextTransparency = 1.000
            GlowTab.ImageTransparency = 0
            Tab.BackgroundTransparency = 0
            Container.Visible = true
        end

        Tab.MouseButton1Click:Connect(
            function()
                for i, v in next, ContainersFolder:GetChildren() do
                    if v.Name == "Container" then
                        v.Visible = false
                    end
                end

                for i, v in next, TabFrame:GetChildren() do
                    if v.ClassName == "TextButton" then
                        TweenService:Create(
                            v,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundTransparency = 1}
                        ):Play()
                        TweenService:Create(
                            v.GlowTab,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {ImageTransparency = 1}
                        ):Play()
                        TweenService:Create(
                            v.LabelAccent,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {TextTransparency = 0}
                        ):Play()
                        TweenService:Create(
                            Tab,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundTransparency = 0}
                        ):Play()
                        TweenService:Create(
                            GlowTab,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {ImageTransparency = 0}
                        ):Play()
                        TweenService:Create(
                            LabelAccent,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {TextTransparency = 1}
                        ):Play()
                    end
                end
                Container.Visible = true
            end
        )
        local TabItems = {}
        function TabItems:Button(text, callback)
            local Button = Instance.new("TextButton")
            local ButtonCorner = Instance.new("UICorner")

            Button.Name = "Button"
            Button.Parent = ContainerItemHolder
            Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Button.Size = UDim2.new(0, 448, 0, 28)
            Button.AutoButtonColor = false
            Button.Font = Enum.Font.Gotham
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.TextSize = 14.000
            Button.Text = text
            Button.ClipsDescendants = true

            ButtonCorner.CornerRadius = UDim.new(0, 6)
            ButtonCorner.Name = "ButtonCorner"
            ButtonCorner.Parent = Button

            Button.MouseEnter:Connect(
                function()
                    TweenService:Create(
                        Button,
                        TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}
                    ):Play()
                end
            )

            Button.MouseLeave:Connect(
                function()
                    TweenService:Create(
                        Button,
                        TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}
                    ):Play()
                end
            )

            Button.MouseButton1Click:Connect(
                function()
                    Ripple(Button)
                    pcall(callback)
                end
            )

            ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, ItemHolderList.AbsoluteContentSize.Y)
        end
        function TabItems:Toggle(text, callback)
            local Toggled = false
            local Toggle = Instance.new("TextButton")
            local ToggleCorner = Instance.new("UICorner")
            local Title = Instance.new("TextLabel")
            local BoxStatus = Instance.new("Frame")
            local BoxCorner = Instance.new("UICorner")
            local Dot = Instance.new("Frame")
            local DotCorner = Instance.new("UICorner")

            Toggle.Name = "Toggle"
            Toggle.Parent = ContainerItemHolder
            Toggle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Toggle.Position = UDim2.new(0.245398775, 0, 0.630985916, 0)
            Toggle.Size = UDim2.new(0, 448, 0, 28)
            Toggle.AutoButtonColor = false
            Toggle.Font = Enum.Font.Gotham
            Toggle.Text = ""
            Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
            Toggle.TextSize = 14.000
            Toggle.ClipsDescendants = true

            ToggleCorner.CornerRadius = UDim.new(0, 6)
            ToggleCorner.Name = "ToggleCorner"
            ToggleCorner.Parent = Toggle

            Title.Name = "Title"
            Title.Parent = Toggle
            Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0.0200892854, 0, 0, 0)
            Title.Size = UDim2.new(0, 0, 0, 28)
            Title.Font = Enum.Font.Gotham
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 14.000
            Title.TextXAlignment = Enum.TextXAlignment.Left
            Title.Text = text

            BoxStatus.Name = "BoxStatus"
            BoxStatus.Parent = Toggle
            BoxStatus.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
            BoxStatus.Position = UDim2.new(0.908482134, 0, 0.142857149, 0)
            BoxStatus.Size = UDim2.new(0, 35, 0, 19)

            BoxCorner.CornerRadius = UDim.new(1, 0)
            BoxCorner.Name = "BoxCorner"
            BoxCorner.Parent = BoxStatus

            Dot.Name = "Dot"
            Dot.Parent = BoxStatus
            Dot.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Dot.Position = UDim2.new(0.0799999982, 0, 0.126000002, 0)
            Dot.Size = UDim2.new(0, 14, 0, 14)

            DotCorner.CornerRadius = UDim.new(1, 0)
            DotCorner.Name = "DotCorner"
            DotCorner.Parent = Dot

            Toggle.MouseEnter:Connect(
                function()
                    TweenService:Create(
                        Toggle,
                        TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}
                    ):Play()
                end
            )

            Toggle.MouseLeave:Connect(
                function()
                    TweenService:Create(
                        Toggle,
                        TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}
                    ):Play()
                end
            )

            Toggle.MouseButton1Click:Connect(
                function()
                    if Toggled == false then
                        Toggled = not Toggled
                        TweenService:Create(
                            Dot,
                            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Accent}
                        ):Play()
                        TweenService:Create(
                            Dot,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {Position = UDim2.new(0.48, 0, 0.126, 0)}
                        ):Play()
                    else
                        Toggled = not Toggled
                        TweenService:Create(
                            Dot,
                            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}
                        ):Play()
                        TweenService:Create(
                            Dot,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {Position = UDim2.new(0.0799999982, 0, 0.126000002, 0)}
                        ):Play()
                    end
                    pcall(callback, Toggled)
                    Ripple(Toggle)
                end
            )
            ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, ItemHolderList.AbsoluteContentSize.Y)
        end
        function TabItems:Slider(text, min, max, start, callback)
            local dragging = false
            local Slider = Instance.new("TextButton")
            local SliderCorner = Instance.new("UICorner")
            local Title = Instance.new("TextLabel")
            local SliderFrame = Instance.new("Frame")
            local SliderFrameCorner = Instance.new("UICorner")
            local Indicator = Instance.new("Frame")
            local IndicatorCorner = Instance.new("UICorner")
            local Value = Instance.new("TextLabel")

            Slider.Name = "Slider"
            Slider.Parent = ContainerItemHolder
            Slider.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Slider.Position = UDim2.new(0.245398775, 0, 0.630985916, 0)
            Slider.Size = UDim2.new(0, 448, 0, 28)
            Slider.AutoButtonColor = false
            Slider.Font = Enum.Font.Gotham
            Slider.Text = ""
            Slider.TextColor3 = Color3.fromRGB(255, 255, 255)
            Slider.TextSize = 14.000

            SliderCorner.CornerRadius = UDim.new(0, 6)
            SliderCorner.Name = "SliderCorner"
            SliderCorner.Parent = Slider

            Title.Name = "Title"
            Title.Parent = Slider
            Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0.0200892854, 0, 0, 0)
            Title.Size = UDim2.new(0, 0, 0, 28)
            Title.Font = Enum.Font.Gotham
            Title.Text = text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 14.000
            Title.TextXAlignment = Enum.TextXAlignment.Left

            Value.Name = "Value"
            Value.Parent = Slider
            Value.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Value.BackgroundTransparency = 1.000
            Value.Position = UDim2.new(0.392857134, 0, 0, 0)
            Value.Size = UDim2.new(0, 38, 0, 28)
            Value.Font = Enum.Font.Gotham
            Value.Text = tostring(start and math.floor((start / max) * (max - min) + min) or 0)
            Value.TextColor3 = Color3.fromRGB(255, 255, 255)
            Value.TextSize = 13.000
            Value.TextXAlignment = Enum.TextXAlignment.Right

            SliderFrame.Name = "SliderFrame"
            SliderFrame.Parent = Slider
            SliderFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
            SliderFrame.Position = UDim2.new(0.495535702, 0, 0.285714298, 0)
            SliderFrame.Size = UDim2.new(0, 217, 0, 12)

            SliderFrameCorner.CornerRadius = UDim.new(1, 0)
            SliderFrameCorner.Name = "SliderFrameCorner"
            SliderFrameCorner.Parent = SliderFrame

            Indicator.Name = "Indicator"
            Indicator.Parent = SliderFrame
            Indicator.BackgroundColor3 = Accent
            Indicator.BorderSizePixel = 0
            Indicator.Position = UDim2.new(-0.00216013822, 0, -0.0476175956, 0)
            Indicator.Size = UDim2.new((start or 0) / max, 0, 0, 12)

            IndicatorCorner.CornerRadius = UDim.new(1, 0)
            IndicatorCorner.Name = "IndicatorCorner"
            IndicatorCorner.Parent = Indicator

            local function slide(input)
                local pos =
                    UDim2.new(
                    math.clamp((input.Position.X - SliderFrame.AbsolutePosition.X) / SliderFrame.AbsoluteSize.X, 0, 1),
                    0,
                    0,
                    12
                )
                Indicator:TweenSize(pos, Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.3, true)
                local s = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
                Value.Text = tostring(s)
                pcall(callback, s)
            end

            SliderFrame.InputBegan:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        slide(input)
                        dragging = true
                    end
                end
            )

            SliderFrame.InputEnded:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end
            )

            UserInputService.InputChanged:Connect(
                function(input)
                    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                        slide(input)
                    end
                end
            )
            ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, ItemHolderList.AbsoluteContentSize.Y)
        end

        function TabItems:Dropdown(text, list, callback)
            local ItemCount = 0
            local FrameSize = 9
            local DropToggled = false

            local Dropdown = Instance.new("TextButton")
            local DropdownCorner = Instance.new("UICorner")
            local Title = Instance.new("TextLabel")
            local Icon = Instance.new("ImageButton")

            Dropdown.Name = "Dropdown"
            Dropdown.Parent = ContainerItemHolder
            Dropdown.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Dropdown.Position = UDim2.new(0.259202451, 0, 0.594366193, 0)
            Dropdown.Size = UDim2.new(0, 448, 0, 28)
            Dropdown.AutoButtonColor = false
            Dropdown.Font = Enum.Font.Gotham
            Dropdown.Text = ""
            Dropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
            Dropdown.TextSize = 14.000
            Dropdown.BorderSizePixel = 0
            Dropdown.ClipsDescendants = true

            DropdownCorner.CornerRadius = UDim.new(0, 6)
            DropdownCorner.Name = "DropdownCorner"
            DropdownCorner.Parent = Dropdown

            Title.Name = "Title"
            Title.Parent = Dropdown
            Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0.0200892854, 0, 0, 0)
            Title.Size = UDim2.new(0, 0, 0, 28)
            Title.Font = Enum.Font.Gotham
            Title.Text = text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 14.000
            Title.TextXAlignment = Enum.TextXAlignment.Left

            Icon.Name = "Icon"
            Icon.Parent = Dropdown
            Icon.BackgroundTransparency = 1.000
            Icon.Position = UDim2.new(0.930803597, 0, 0.0357142873, 0)
            Icon.Size = UDim2.new(0, 25, 0, 25)
            Icon.ZIndex = 2
            Icon.Image = "rbxassetid://3926305904"
            Icon.ImageRectOffset = Vector2.new(44, 404)
            Icon.ImageRectSize = Vector2.new(36, 36)

            local DropdownFrame = Instance.new("Frame")
            local DropdownFrameCorner = Instance.new("UICorner")
            local DropdownItemHolder = Instance.new("ScrollingFrame")
            local DropdownItemHolderList = Instance.new("UIListLayout")
            local DropdownFramePadding = Instance.new("UIPadding")

            DropdownFrame.Name = "DropdownFrame"
            DropdownFrame.Parent = ContainerItemHolder
            DropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            DropdownFrame.Position = UDim2.new(0.0828220844, 0, 1.04184508, 0)
            DropdownFrame.Size = UDim2.new(0, 448, 0, 0)
            DropdownFrame.ClipsDescendants = true
            DropdownFrame.BorderSizePixel = 0
            DropdownFrame.Visible = false

            DropdownFrameCorner.CornerRadius = UDim.new(0, 6)
            DropdownFrameCorner.Name = "DropdownFrameCorner"
            DropdownFrameCorner.Parent = DropdownFrame

            DropdownItemHolder.Name = "DropdownItemHolder"
            DropdownItemHolder.Parent = DropdownFrame
            DropdownItemHolder.Active = true
            DropdownItemHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropdownItemHolder.BackgroundTransparency = 1.000
            DropdownItemHolder.BorderSizePixel = 0
            DropdownItemHolder.Position = UDim2.new(0.0254776813, 0, 0, 0)
            DropdownItemHolder.Size = UDim2.new(0, 431, 0, 0)
            DropdownItemHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
            DropdownItemHolder.ScrollBarThickness = 2

            DropdownItemHolderList.Name = "DropdownItemHolderList"
            DropdownItemHolderList.Parent = DropdownItemHolder
            DropdownItemHolderList.SortOrder = Enum.SortOrder.LayoutOrder
            DropdownItemHolderList.Padding = UDim.new(0, 5)

            DropdownFramePadding.Name = "DropdownFramePadding"
            DropdownFramePadding.Parent = DropdownItemHolder
            DropdownFramePadding.PaddingBottom = UDim.new(0, 8)
            DropdownFramePadding.PaddingTop = UDim.new(0, 8)

            Dropdown.MouseEnter:Connect(
                function()
                    TweenService:Create(
                        Dropdown,
                        TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}
                    ):Play()
                end
            )

            Dropdown.MouseLeave:Connect(
                function()
                    TweenService:Create(
                        Dropdown,
                        TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}
                    ):Play()
                end
            )

            Dropdown.MouseButton1Click:Connect(
                function()
                    Ripple(Dropdown)
                    if DropToggled == false then
                        DropdownFrame.Visible = true
                        DropdownFrame:TweenSize(
                            UDim2.new(0, 448, 0, FrameSize),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            0.1,
                            true
                        )
                        DropdownItemHolder:TweenSize(
                            UDim2.new(0, 431, 0, FrameSize),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            0.1,
                            true
                        )
                        TweenService:Create(
                            Icon,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {Rotation = 180}
                        ):Play()
                        repeat
                            wait()
                        until DropdownFrame.Size == UDim2.new(0, 448, 0, FrameSize)
                        ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, ItemHolderList.AbsoluteContentSize.Y)
                    else
                        DropdownFrame:TweenSize(
                            UDim2.new(0, 448, 0, 0),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            0.1,
                            true
                        )
                        DropdownItemHolder:TweenSize(
                            UDim2.new(0, 431, 0, 0),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            0.1,
                            true
                        )
                        TweenService:Create(
                            Icon,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {Rotation = 0}
                        ):Play()
                        repeat
                            wait()
                        until DropdownFrame.Size == UDim2.new(0, 448, 0, 0)
                        DropdownFrame.Visible = false
                        ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, ItemHolderList.AbsoluteContentSize.Y)
                    end
                    DropToggled = not DropToggled
                end
            )

            for i, v in next, list do
                ItemCount = ItemCount + 1

                if ItemCount <= 2 then
                    FrameSize = FrameSize + 30
                elseif ItemCount >= 3 then
                    FrameSize = 100
                end

                local Item = Instance.new("TextButton")
                local ItemCorner = Instance.new("UICorner")
                Item.Name = "Item"
                Item.Parent = DropdownItemHolder
                Item.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                Item.Position = UDim2.new(0.0255220421, 0, -0.0595238097, 0)
                Item.Size = UDim2.new(0, 425, 0, 24)
                Item.AutoButtonColor = false
                Item.Font = Enum.Font.Gotham
                Item.TextColor3 = Color3.fromRGB(255, 255, 255)
                Item.TextSize = 14.000
                Item.Text = v

                ItemCorner.CornerRadius = UDim.new(0, 6)
                ItemCorner.Name = "ItemCorner"
                ItemCorner.Parent = Item

                Item.MouseEnter:Connect(
                    function()
                        TweenService:Create(
                            Item,
                            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}
                        ):Play()
                    end
                )

                Item.MouseLeave:Connect(
                    function()
                        TweenService:Create(
                            Item,
                            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}
                        ):Play()
                    end
                )

                Item.MouseButton1Click:Connect(
                    function()
                        pcall(callback, v)
                        Title.Text = text .. " : " .. v
                        DropdownFrame:TweenSize(
                            UDim2.new(0, 448, 0, 0),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            0.1,
                            true
                        )
                        DropdownItemHolder:TweenSize(
                            UDim2.new(0, 431, 0, 0),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            0.1,
                            true
                        )
                        TweenService:Create(
                            Icon,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {Rotation = 0}
                        ):Play()
                        repeat
                            wait()
                        until DropdownFrame.Size == UDim2.new(0, 448, 0, 0)
                        DropdownFrame.Visible = false
                        ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, ItemHolderList.AbsoluteContentSize.Y)
                        DropToggled = not DropToggled
                    end
                )
                DropdownItemHolder.CanvasSize = UDim2.new(0, 0, 0, DropdownItemHolderList.AbsoluteContentSize.Y + 15)
            end
            ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, ItemHolderList.AbsoluteContentSize.Y)
        end
        function TabItems:Colorpicker(text, preset, callback)
            local ColorPickerToggled = false
            local OldToggleColor = Color3.fromRGB(0, 0, 0)
            local OldColor = Color3.fromRGB(0, 0, 0)
            local OldColorSelectionPosition = nil
            local OldHueSelectionPosition = nil
            local ColorH, ColorS, ColorV = 1, 1, 1
            local RainbowColorPicker = false
            local ColorPickerInput = nil
            local ColorInput = nil
            local HueInput = nil

            local Colorpicker = Instance.new("TextButton")
            local ColorpickerCorner = Instance.new("UICorner")
            local Title = Instance.new("TextLabel")
            local BoxColor = Instance.new("Frame")
            local BoxCorner = Instance.new("UICorner")

            Colorpicker.Name = "Colorpicker"
            Colorpicker.Parent = ContainerItemHolder
            Colorpicker.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Colorpicker.Position = UDim2.new(0.245398775, 0, 0.630985916, 0)
            Colorpicker.Size = UDim2.new(0, 448, 0, 28)
            Colorpicker.AutoButtonColor = false
            Colorpicker.Font = Enum.Font.Gotham
            Colorpicker.Text = ""
            Colorpicker.TextColor3 = Color3.fromRGB(255, 255, 255)
            Colorpicker.TextSize = 14.000
            Colorpicker.ClipsDescendants = true

            ColorpickerCorner.CornerRadius = UDim.new(0, 6)
            ColorpickerCorner.Name = "ColorpickerCorner"
            ColorpickerCorner.Parent = Colorpicker

            Title.Name = "Title"
            Title.Parent = Colorpicker
            Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0.0200892854, 0, 0, 0)
            Title.Size = UDim2.new(0, 0, 0, 28)
            Title.Font = Enum.Font.Gotham
            Title.Text = text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 14.000
            Title.TextXAlignment = Enum.TextXAlignment.Left

            BoxColor.Name = "BoxColor"
            BoxColor.Parent = Colorpicker
            BoxColor.BackgroundColor3 = preset
            BoxColor.Position = UDim2.new(0.866071403, 0, 0.142857149, 0)
            BoxColor.Size = UDim2.new(0, 54, 0, 19)

            BoxCorner.CornerRadius = UDim.new(0, 6)
            BoxCorner.Name = "BoxCorner"
            BoxCorner.Parent = BoxColor

            local ColorpickerFrame = Instance.new("Frame")
            local ColorpickerFrameCorner = Instance.new("UICorner")
            local Color = Instance.new("ImageLabel")
            local ColorCorner = Instance.new("UICorner")
            local ColorSelection = Instance.new("ImageLabel")
            local Hue = Instance.new("ImageLabel")
            local HueCorner = Instance.new("UICorner")
            local HueGradient = Instance.new("UIGradient")
            local HueSelection = Instance.new("ImageLabel")
            local Confirm = Instance.new("TextButton")
            local ConfirmCorner = Instance.new("UICorner")
            local RainbowToggle = Instance.new("TextButton")
            local RainbowToggleCorner = Instance.new("UICorner")
            local RainbowTitle = Instance.new("TextLabel")
            local RainbowBoxStatus = Instance.new("Frame")
            local RainbowBoxCorner = Instance.new("UICorner")
            local RainbowDot = Instance.new("Frame")
            local RainbowDotCorner = Instance.new("UICorner")

            ColorpickerFrame.Name = "ColorpickerFrame"
            ColorpickerFrame.Parent = ContainerItemHolder
            ColorpickerFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            ColorpickerFrame.Position = UDim2.new(-0.345092028, 0, 0.816492796, 0)
            ColorpickerFrame.Size = UDim2.new(0, 448, 0, 0)
            ColorpickerFrame.Visible = false
            ColorpickerFrame.ClipsDescendants = true
            ColorpickerFrame.BorderSizePixel = 0

            ColorpickerFrameCorner.CornerRadius = UDim.new(0, 6)
            ColorpickerFrameCorner.Name = "ColorpickerFrameCorner"
            ColorpickerFrameCorner.Parent = ColorpickerFrame

            Color.Name = "Color"
            Color.Parent = ColorpickerFrame
            Color.BackgroundColor3 = preset
            Color.Position = UDim2.new(0, 9, 0, 9)
            Color.Size = UDim2.new(0, 212, 0, 80)
            Color.ZIndex = 10
            Color.Image = "rbxassetid://4155801252"

            ColorCorner.CornerRadius = UDim.new(0, 3)
            ColorCorner.Name = "ColorCorner"
            ColorCorner.Parent = Color

            ColorSelection.Name = "ColorSelection"
            ColorSelection.Parent = Color
            ColorSelection.AnchorPoint = Vector2.new(0.5, 0.5)
            ColorSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ColorSelection.BackgroundTransparency = 1.000
            ColorSelection.Position = UDim2.new(preset and select(3, Color3.toHSV(preset)))
            ColorSelection.Size = UDim2.new(0, 18, 0, 18)
            ColorSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
            ColorSelection.ScaleType = Enum.ScaleType.Fit

            Hue.Name = "Hue"
            Hue.Parent = ColorpickerFrame
            Hue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Hue.Position = UDim2.new(0, 233, 0, 9)
            Hue.Size = UDim2.new(0, 25, 0, 80)

            HueCorner.CornerRadius = UDim.new(0, 3)
            HueCorner.Name = "HueCorner"
            HueCorner.Parent = Hue

            HueGradient.Color =
                ColorSequence.new {
                ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)),
                ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)),
                ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)),
                ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)),
                ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)),
                ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)),
                ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))
            }
            HueGradient.Rotation = 270
            HueGradient.Name = "HueGradient"
            HueGradient.Parent = Hue

            HueSelection.Name = "HueSelection"
            HueSelection.Parent = Hue
            HueSelection.AnchorPoint = Vector2.new(0.5, 0.5)
            HueSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            HueSelection.BackgroundTransparency = 1.000
            HueSelection.Position = UDim2.new(0.48, 0, 1 - select(1, Color3.toHSV(preset)))
            HueSelection.Size = UDim2.new(0, 18, 0, 18)
            HueSelection.Image = "http://www.roblox.com/asset/?id=4805639000"

            Confirm.Name = "Confirm"
            Confirm.Parent = ColorpickerFrame
            Confirm.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Confirm.Position = UDim2.new(0.611607134, 0, 0.183673471, 0)
            Confirm.Size = UDim2.new(0, 162, 0, 28)
            Confirm.AutoButtonColor = false
            Confirm.Font = Enum.Font.Gotham
            Confirm.Text = "Confirm"
            Confirm.TextColor3 = Color3.fromRGB(255, 255, 255)
            Confirm.TextSize = 14.000

            ConfirmCorner.CornerRadius = UDim.new(0, 6)
            ConfirmCorner.Name = "ConfirmCorner"
            ConfirmCorner.Parent = Confirm

            RainbowToggle.Name = "RainbowToggle"
            RainbowToggle.Parent = ColorpickerFrame
            RainbowToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            RainbowToggle.Position = UDim2.new(0.611607134, 0, 0.528944969, 0)
            RainbowToggle.Size = UDim2.new(0, 162, 0, 28)
            RainbowToggle.AutoButtonColor = false
            RainbowToggle.Font = Enum.Font.Gotham
            RainbowToggle.Text = ""
            RainbowToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
            RainbowToggle.TextSize = 14.000

            RainbowToggleCorner.CornerRadius = UDim.new(0, 6)
            RainbowToggleCorner.Name = "RainbowToggleCorner"
            RainbowToggleCorner.Parent = RainbowToggle

            RainbowTitle.Name = "RainbowTitle"
            RainbowTitle.Parent = RainbowToggle
            RainbowTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            RainbowTitle.BackgroundTransparency = 1.000
            RainbowTitle.Position = UDim2.new(0.0400892854, 0, 0, 0)
            RainbowTitle.Size = UDim2.new(0, 0, 0, 28)
            RainbowTitle.Font = Enum.Font.Gotham
            RainbowTitle.Text = "Rainbow"
            RainbowTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            RainbowTitle.TextSize = 14.000
            RainbowTitle.TextXAlignment = Enum.TextXAlignment.Left

            RainbowBoxStatus.Name = "RainbowBoxStatus"
            RainbowBoxStatus.Parent = RainbowToggle
            RainbowBoxStatus.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
            RainbowBoxStatus.Position = UDim2.new(0.749000013, 0, 0.143000007, 0)
            RainbowBoxStatus.Size = UDim2.new(0, 35, 0, 19)

            RainbowBoxCorner.CornerRadius = UDim.new(1, 0)
            RainbowBoxCorner.Name = "RainbowBoxCorner"
            RainbowBoxCorner.Parent = RainbowBoxStatus

            RainbowDot.Name = "RainbowDot"
            RainbowDot.Parent = RainbowBoxStatus
            RainbowDot.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            RainbowDot.Position = UDim2.new(0.0799999982, 0, 0.126000002, 0)
            RainbowDot.Size = UDim2.new(0, 14, 0, 14)

            RainbowDotCorner.CornerRadius = UDim.new(1, 0)
            RainbowDotCorner.Name = "RainbowDotCorner"
            RainbowDotCorner.Parent = RainbowDot

            Colorpicker.MouseEnter:Connect(
                function()
                    TweenService:Create(
                        Colorpicker,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(44, 44, 44)}
                    ):Play()
                end
            )

            Colorpicker.MouseLeave:Connect(
                function()
                    TweenService:Create(
                        Colorpicker,
                        TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(39, 39, 39)}
                    ):Play()
                end
            )

            local function UpdateColorPicker(nope)
                BoxColor.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
                Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)

                pcall(callback, BoxColor.BackgroundColor3)
            end

            ColorH =
                1 -
                (math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
                    Hue.AbsoluteSize.Y)
            ColorS =
                (math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
                Color.AbsoluteSize.X)
            ColorV =
                1 -
                (math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
                    Color.AbsoluteSize.Y)

            BoxColor.BackgroundColor3 = preset
            Color.BackgroundColor3 = preset
            pcall(callback, BoxColor.BackgroundColor3)

            Color.InputBegan:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if RainbowColorPicker then
                            return
                        end

                        if ColorInput then
                            ColorInput:Disconnect()
                        end

                        ColorInput =
                            RunService.RenderStepped:Connect(
                            function()
                                local ColorX =
                                    (math.clamp(Mouse.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
                                    Color.AbsoluteSize.X)
                                local ColorY =
                                    (math.clamp(Mouse.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
                                    Color.AbsoluteSize.Y)

                                ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)
                                ColorS = ColorX
                                ColorV = 1 - ColorY

                                UpdateColorPicker(true)
                            end
                        )
                    end
                end
            )

            Color.InputEnded:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if ColorInput then
                            ColorInput:Disconnect()
                        end
                    end
                end
            )

            Hue.InputBegan:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if RainbowColorPicker then
                            return
                        end

                        if HueInput then
                            HueInput:Disconnect()
                        end

                        HueInput =
                            RunService.RenderStepped:Connect(
                            function()
                                local HueY =
                                    (math.clamp(Mouse.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
                                    Hue.AbsoluteSize.Y)

                                HueSelection.Position = UDim2.new(0.48, 0, HueY, 0)
                                ColorH = 1 - HueY

                                UpdateColorPicker(true)
                            end
                        )
                    end
                end
            )

            Hue.InputEnded:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if HueInput then
                            HueInput:Disconnect()
                        end
                    end
                end
            )

            RainbowToggle.MouseEnter:Connect(
                function()
                    TweenService:Create(
                        RainbowToggle,
                        TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}
                    ):Play()
                end
            )

            RainbowToggle.MouseLeave:Connect(
                function()
                    TweenService:Create(
                        RainbowToggle,
                        TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}
                    ):Play()
                end
            )

            Confirm.MouseEnter:Connect(
                function()
                    TweenService:Create(
                        Confirm,
                        TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}
                    ):Play()
                end
            )

            Confirm.MouseLeave:Connect(
                function()
                    TweenService:Create(
                        Confirm,
                        TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}
                    ):Play()
                end
            )

            RainbowToggle.MouseButton1Down:Connect(
                function()
                    RainbowColorPicker = not RainbowColorPicker

                    if ColorInput then
                        ColorInput:Disconnect()
                    end

                    if HueInput then
                        HueInput:Disconnect()
                    end

                    if RainbowColorPicker then
                        TweenService:Create(
                            RainbowDot,
                            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Accent}
                        ):Play()
                        TweenService:Create(
                            RainbowDot,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {Position = UDim2.new(0.48, 0, 0.126, 0)}
                        ):Play()

                        OldToggleColor = BoxColor.BackgroundColor3
                        OldColor = Color.BackgroundColor3
                        OldColorSelectionPosition = ColorSelection.Position
                        OldHueSelectionPosition = HueSelection.Position

                        while RainbowColorPicker do
                            BoxColor.BackgroundColor3 = Color3.fromHSV(Lib.RainbowColorValue, 1, 1)
                            Color.BackgroundColor3 = Color3.fromHSV(Lib.RainbowColorValue, 1, 1)

                            ColorSelection.Position = UDim2.new(1, 0, 0, 0)
                            HueSelection.Position = UDim2.new(0.48, 0, 0, Lib.HueSelectionPosition)

                            pcall(callback, BoxColor.BackgroundColor3)
                            wait()
                        end
                    elseif not RainbowColorPicker then
                        TweenService:Create(
                            RainbowDot,
                            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}
                        ):Play()
                        TweenService:Create(
                            RainbowDot,
                            TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {Position = UDim2.new(0.0799999982, 0, 0.126000002, 0)}
                        ):Play()
                        BoxColor.BackgroundColor3 = OldToggleColor
                        Color.BackgroundColor3 = OldColor

                        ColorSelection.Position = OldColorSelectionPosition
                        HueSelection.Position = OldHueSelectionPosition

                        pcall(callback, BoxColor.BackgroundColor3)
                    end
                end
            )

            Colorpicker.MouseButton1Click:Connect(
                function()
                    Ripple(Colorpicker)
                    if ColorPickerToggled == false then
                        ColorPickerToggled = not ColorPickerToggled
                        ColorpickerFrame.Visible = true
                        ColorpickerFrame:TweenSize(
                            UDim2.new(0, 448, 0, 98),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            0.1,
                            true
                        )
                        repeat
                            wait()
                        until ColorpickerFrame.Size == UDim2.new(0, 448, 0, 98)
                        ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, ItemHolderList.AbsoluteContentSize.Y)
                    else
                        ColorPickerToggled = not ColorPickerToggled
                        ColorpickerFrame:TweenSize(
                            UDim2.new(0, 448, 0, 0),
                            Enum.EasingDirection.Out,
                            Enum.EasingStyle.Quart,
                            0.1,
                            true
                        )
                        repeat
                            wait()
                        until ColorpickerFrame.Size == UDim2.new(0, 448, 0, 0)
                        ColorpickerFrame.Visible = false
                        ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, ItemHolderList.AbsoluteContentSize.Y)
                    end
                end
            )

            Confirm.MouseButton1Click:Connect(
                function()
                    ColorPickerToggled = not ColorPickerToggled
                    ColorpickerFrame:TweenSize(
                        UDim2.new(0, 448, 0, 0),
                        Enum.EasingDirection.Out,
                        Enum.EasingStyle.Quart,
                        0.1,
                        true
                    )
                    repeat
                        wait()
                    until ColorpickerFrame.Size == UDim2.new(0, 491, 0, 0)
                    ColorpickerFrame.Visible = false
                    ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, ItemHolderList.AbsoluteContentSize.Y)
                end
            )
            ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, ItemHolderList.AbsoluteContentSize.Y)
        end

        function TabItems:Textbox(text, disapper, callback)
            local Textbox = Instance.new("TextButton")
            local TextboxCorner = Instance.new("UICorner")
            local TextBox = Instance.new("TextBox")
            local TextBoxCorner = Instance.new("UICorner")

            Textbox.Name = "Textbox"
            Textbox.Parent = ContainerItemHolder
            Textbox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Textbox.Position = UDim2.new(-0.230061352, 0, 0.856338024, 0)
            Textbox.Size = UDim2.new(0, 448, 0, 28)
            Textbox.AutoButtonColor = false
            Textbox.Font = Enum.Font.Gotham
            Textbox.Text = ""
            Textbox.TextColor3 = Color3.fromRGB(255, 255, 255)
            Textbox.TextSize = 14.000

            TextboxCorner.CornerRadius = UDim.new(0, 6)
            TextboxCorner.Name = "TextboxCorner"
            TextboxCorner.Parent = Textbox

            TextBox.Parent = Textbox
            TextBox.AnchorPoint = Vector2.new(0.5, 0.5)
            TextBox.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
            TextBox.Position = UDim2.new(0.5, 0, 0.5, 0)
            TextBox.Size = UDim2.new(0, 349, 0, 20)
            TextBox.Font = Enum.Font.Gotham
            TextBox.PlaceholderColor3 = Color3.fromRGB(216, 216, 216)
            TextBox.PlaceholderText = text
            TextBox.Text = ""
            TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextBox.TextSize = 14.000

            TextBoxCorner.CornerRadius = UDim.new(0, 6)
            TextBoxCorner.Name = "TextBoxCorner"
            TextBoxCorner.Parent = TextBox

            TextBox.Focused:Connect(
                function()
                    TextBox:TweenSize(
                        UDim2.new(0, 399, 0, 20),
                        Enum.EasingDirection.Out,
                        Enum.EasingStyle.Quart,
                        0.2,
                        true
                    )
                end
            )

            TextBox.FocusLost:Connect(
                function(ep)
                    if ep then
                        if #TextBox.Text > 0 then
                            pcall(callback, TextBox.Text)
                            TextBox:TweenSize(
                                UDim2.new(0, 349, 0, 20),
                                Enum.EasingDirection.Out,
                                Enum.EasingStyle.Quart,
                                0.2,
                                true
                            )
                            if disapper then
                                TextBox.Text = ""
                            end
                        end
                    end
                end
            )
            ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, ItemHolderList.AbsoluteContentSize.Y)
        end
        function TabItems:Label(text)
            local Label = Instance.new("TextButton")
            local LabelCorner = Instance.new("UICorner")

            Label.Name = "Button"
            Label.Parent = ContainerItemHolder
            Label.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Label.Size = UDim2.new(0, 448, 0, 28)
            Label.AutoButtonColor = false
            Label.Font = Enum.Font.Gotham
            Label.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label.TextSize = 14.000
            Label.Text = text
            Label.ClipsDescendants = true

            LabelCorner.CornerRadius = UDim.new(0, 6)
            LabelCorner.Name = "ButtonCorner"
            LabelCorner.Parent = Label

            ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, ItemHolderList.AbsoluteContentSize.Y)
        end

        function TabItems:Keybind(text, presetbind, callback)
            local Key = presetbind.Name
            local KeyBind = Instance.new("TextButton")
            local KeyBindCorner = Instance.new("UICorner")
            local Title = Instance.new("TextLabel")
            local BoxBind = Instance.new("Frame")
            local BoxCorner = Instance.new("UICorner")
            local CurrentBind = Instance.new("TextLabel")

            KeyBind.Name = "KeyBind"
            KeyBind.Parent = ContainerItemHolder
            KeyBind.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            KeyBind.Position = UDim2.new(0.156441718, 0, 0.816901445, 0)
            KeyBind.Size = UDim2.new(0, 448, 0, 28)
            KeyBind.AutoButtonColor = false
            KeyBind.Font = Enum.Font.Gotham
            KeyBind.Text = ""
            KeyBind.TextColor3 = Color3.fromRGB(255, 255, 255)
            KeyBind.TextSize = 14.000
            KeyBind.ClipsDescendants = true

            KeyBindCorner.CornerRadius = UDim.new(0, 6)
            KeyBindCorner.Name = "KeyBindCorner"
            KeyBindCorner.Parent = KeyBind

            Title.Name = "Title"
            Title.Parent = KeyBind
            Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0.0200892854, 0, 0, 0)
            Title.Size = UDim2.new(0, 0, 0, 28)
            Title.Font = Enum.Font.Gotham
            Title.Text = text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 14.000
            Title.TextXAlignment = Enum.TextXAlignment.Left

            BoxBind.Name = "BoxBind"
            BoxBind.Parent = KeyBind
            BoxBind.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
            BoxBind.Position = UDim2.new(0.770089269, 0, 0.142857149, 0)
            BoxBind.Size = UDim2.new(0, 97, 0, 19)

            BoxCorner.CornerRadius = UDim.new(0, 6)
            BoxCorner.Name = "BoxCorner"
            BoxCorner.Parent = BoxBind

            CurrentBind.Name = "CurrentBind"
            CurrentBind.Parent = BoxBind
            CurrentBind.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            CurrentBind.BackgroundTransparency = 1.000
            CurrentBind.Position = UDim2.new(0.247, 0, -0.210526317, 0)
            CurrentBind.Size = UDim2.new(0, 49, 0, 28)
            CurrentBind.Font = Enum.Font.Gotham
            CurrentBind.Text = Key
            CurrentBind.TextColor3 = Color3.fromRGB(255, 255, 255)
            CurrentBind.TextSize = 14.000

            KeyBind.MouseEnter:Connect(
                function()
                    TweenService:Create(
                        KeyBind,
                        TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}
                    ):Play()
                end
            )

            KeyBind.MouseLeave:Connect(
                function()
                    TweenService:Create(
                        KeyBind,
                        TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}
                    ):Play()
                end
            )

            KeyBind.MouseButton1Click:connect(
                function(e)
                    Ripple(KeyBind)
                    CurrentBind.Text = "..."
                    local a, b = game:GetService("UserInputService").InputBegan:wait()
                    if a.KeyCode.Name ~= "Unknown" then
                        CurrentBind.Text = a.KeyCode.Name
                        Key = a.KeyCode.Name
                    end
                end
            )

            game:GetService("UserInputService").InputBegan:connect(
                function(current, pressed)
                    if not pressed then
                        if current.KeyCode.Name == Key then
                            pcall(callback)
                        end
                    end
                end
            )

            ContainerItemHolder.CanvasSize = UDim2.new(0, 0, 0, ItemHolderList.AbsoluteContentSize.Y)
        end
        return TabItems
    end
    return WindowTabs
end
--SCRIPTS FOR GAMES


-- ROYAL PURPLE 98, 37, 209 
-- LIME GREEN 0, 255, 0
-- GOLD 239, 184, 56 
-- BABY BLUE 152, 194, 219 
-- EGGPLANT 123, 0, 123 
-- ELECTRIC BLUE 9, 137, 207 




 if game.PlaceId == 3311165597  and getgenv().DRAGONBLOXULTIMATE == true  then -- Dragon Blox Ultimate

local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))

local ss = Window:Tab("MAIN")
    
        getgenv().mobs = nil
        local HRT = game.Players.LocalPlayer.Character.HumanoidRootPart
    
        local Character_Table = {}
    
        for i, v in pairs(game:GetService("Workspace").Living:GetChildren()) do
            if v:IsA("Model") then
                table.insert(Character_Table, v.Name)
            end
        end
        
        local Quest_Table = {} 
for i,v in pairs(game:GetService("Workspace").Others.NPCs:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("Quest") and not table.find(Quest_Table,v.Name) then 
        table.insert(Quest_Table,v.Name)
    end 
end 

ss:Dropdown("Quest Select",Quest_Table,function(t)
qt = t     
end) 


ss:Toggle("Auto Quest",function(t)
autoqu = t 
while autoqu do wait() 
    pcall(function()
if game.Players.LocalPlayer.PlayerGui.Main.MainFrame.Frames.Quest.Visible == false then 
local args = {
    [1] = workspace.Others.NPCs[qt]
}

game:GetService("ReplicatedStorage").Package.Events.Qaction:InvokeServer(unpack(args))
      end 
    end) 
 end 
end) 
    
        ss:Dropdown(
            "Mobs To Farm",
            Character_Table,
            function(mb)
                getgenv().mobs = mb
            end
        )
        
        
      ss:Toggle(
        "Autofarm Start Mobs",
        function(state)
            farm = state
            game:GetService("RunService").Heartbeat:Connect(
                function()
                    if farm then
                        pcall(
                            function()
                                game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
                            end
                        )
                    end
                end
            )

            while farm do
                wait()

        for i, v in pairs(game:GetService("Workspace").Living:GetChildren()) do
                    if v.Name == mobs and v:FindFirstChild("HumanoidRootPart") then
                        repeat
                            wait()
                            pcall(
                                function()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(
                                        v.HumanoidRootPart.Position + Vector3.new(0, Distance, 0),
                                        v.HumanoidRootPart.Position
                                   
                                    )
                                    if isnetworkowner(v.PrimaryPart) then
                                        v.Humanoid.Health = 0 
                                        v.Head:Destroy()
                                        end
                                end
                            )
                            wait()
                        until v.Humanoid.Health <= 0 or farm == false
                    end
                end
            end
        end
    )

    Distance = 5

    ss:Slider(
        "Distance",
        -9,
        10,
        3,
        function(t)
            Distance = t
        end
    )
    
    
        ss:Toggle(
            "AutoHit",
            function(state)
                    getgenv().farmer = state
                    while wait() do
                        if getgenv().farmer == true then
                            game:GetService("ReplicatedStorage").Package.Events.p:FireServer("Blacknwhite27", 1)
                            wait(.5)
                            game:GetService("ReplicatedStorage").Package.Events.p:FireServer("Blacknwhite27", 2)
                            wait(.5)
                            game:GetService("ReplicatedStorage").Package.Events.p:FireServer("Blacknwhite27", 3)
                            wait(.5)
                            game:GetService("ReplicatedStorage").Package.Events.p:FireServer("Blacknwhite27", 4)
                    end
                end
            end
        )
    
       
    
        ss:Toggle(
            "Anti Afk",
            
            function(state)
                for i, v in next, getconnections(game.Players.LocalPlayer.Idled) do
                    v:Disable()
                end
            end
        )
        
        ss:Button(
            "No Drain",
            function()
                metatable = getrawmetatable(game)
                namecall = metatable.__namecall
                setreadonly(metatable, false)
    
                metatable.__namecall =
                    newcclosure(
                    function(self, ...)
                        local method = getnamecallmethod()
                        if method == "FireServer" and self.Name == "drain" then
                            return wait(9e9)
                        end
                        return namecall(self, ...)
                    end
                )
            end
        )
    
        local misc = Window:Tab("TRAIN")
        local sss = misc:NewSection("Trainings")
        sss:Button(
            "Auto Situps",
            function()
                while wait() do
                    game:GetService("ReplicatedStorage").Package.Events.def:InvokeServer("Blacknwhite27")
                end
            end
        )
    end


if game.PlaceId == 4934471106 or game.PlaceId == 6406566811 and getgenv().MHM == true  then



local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))



local ss = Window:Tab("MAIN")
local misc = Window:Tab("MISC")
local sss = Window:Tab("PLAYER")
local tp = Window:Tab("TELEPORTS")
 

Distance = 5 




function bypasstp()
    pcall(
        function()
            game.Players.LocalPlayer.Character.Stats.Speed:Destroy()
        end
    )
    wait(0.5)
    local bypass = Instance.new("IntValue", game.Players.LocalPlayer.Character.Stats)
    bypass.Name = "Speed"
end
bypasstp()
pcall(
    function()
        game:GetService("Workspace").Living.ChildAdded:Connect(
            function(bs)
                if bs.Name == game:GetService("Players").LocalPlayer.Name then
                    wait(1)
                    bypasstp()
                end
            end
        )
    end
)
 


function hidename()
    for _, m in pairs(game:GetService("Workspace"):GetDescendants()) do
        if m.ClassName == "TextLabel" then
            if m.Text == game:GetService("Players").LocalPlayer.Name then
                m:Destroy()
                for j, m in pairs(game:GetService("Players").LocalPlayer:GetDescendants()) do
                    if m.ClassName == "TextLabel" then
                        if m.Text == game:GetService("Players").LocalPlayer.Name then
                            m:Destroy()
                            for h, v in pairs(workspace[game.Players.LocalPlayer.Name].Head:GetChildren()) do
                                if v:IsA("BillboardGui") then
                                    v:Remove()
                                end
                            end
                        end
                    end
                end
            end
        end
    end

    while true do
        for i, s in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if s:IsA("Accessory") then
                s.Parent = workspace
            end
        end

        for i, f in pairs(game.Workspace[game.Players.LocalPlayer.Name].Head:GetChildren()) do
            if f:IsA("Decal") and f.Name == "face" then
                f.Parent = nil
            end
        end

        if game.Players.LocalPlayer.Character.Shirt then
            game.Players.LocalPlayer.Character.Shirt:Remove()
        else
        end
        if game.Players.LocalPlayer.Character.Pants then
            game.Players.LocalPlayer.Character.Pants:Remove()
        else
        end
        if game.Players.LocalPlayer.Character["Shirt Graphic"] then
            game.Players.LocalPlayer.Character["Shirt Graphic"]:Remove()
        else
        end
        if game.Players.LocalPlayer.Character.Torso.roblox then
            game.Players.LocalPlayer.Character.Torso.roblox:Remove()
        else
        end
        game:GetService("RunService").Stepped:wait()
    end
end

    Npc_Table = {} 
   for i,v in pairs(game:GetService("Workspace").Living:GetChildren()) do 
if v:IsA("Model") and v:FindFirstChild("NPC") then 
    if not table.find(Npc_Table,v.Name) then 
        table.insert(Npc_Table,v.Name)
      end 
   end 
end 

Quest_Table = {} 
for i,v in pairs(game:GetService("ReplicatedStorage").Package.Quests:GetChildren()) do 
    if v:IsA("Folder") then 
        table.insert(Quest_Table,v.Name)
    end 
end 

Tp_Table = {} 
for i,v in pairs(game:GetService("Workspace").NPCs:GetChildren()) do 
if v:IsA("Model") then 
    table.insert(Tp_Table,v.Name)
end 
end 

Spawn_Table = {} 
for i,v in pairs(game:GetService("Workspace").Others.Spawns:GetChildren()) do 
if v:IsA("Part") then 
    table.insert(Spawn_Table,v.Name)
end 
end 

Skill_Table = {"Down","Up"}

Mobs = nil 

ss:Toggle("AutoHit",function(t)
    hit = t 
while hit do wait() 
    pcall(function()
local args = {
    [1] = 1,
    [2] = CFrame.new(Vector3.new(-8540.439453125, -2908.2277832031, 3011.580078125), Vector3.new(-0.8781613111496, -0.29891297221184, 0.37347528338432))
}

game:GetService("ReplicatedStorage").Package.Events.Combat:FireServer(unpack(args))
wait(.5)

local args = {
    [1] = 2,
    [2] = CFrame.new(Vector3.new(-8540.439453125, -2908.2277832031, 3011.580078125), Vector3.new(-0.8781613111496, -0.29891297221184, 0.37347528338432))
}

game:GetService("ReplicatedStorage").Package.Events.Combat:FireServer(unpack(args))
wait(.5)
local args = {
    [1] = 3,
    [2] = CFrame.new(Vector3.new(-8540.439453125, -2908.2277832031, 3011.580078125), Vector3.new(-0.8781613111496, -0.29891297221184, 0.37347528338432))
}

game:GetService("ReplicatedStorage").Package.Events.Combat:FireServer(unpack(args))
wait(.5)
local args = {
    [1] = 4,
    [2] = CFrame.new(Vector3.new(-8540.439453125, -2908.2277832031, 3011.580078125), Vector3.new(-0.8781613111496, -0.29891297221184, 0.37347528338432))
}

game:GetService("ReplicatedStorage").Package.Events.Combat:FireServer(unpack(args))
wait(.5)
      end)
  end 
end)



ss:Dropdown("Mobs To Farm",Npc_Table,function(t)
Mobs = t 
end)

ss:Toggle("Autofarm Mobs",function(t)

    pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        if Enabled then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end)
end)

Enabled = t 
while Enabled do wait() 
    pcall(function()
    for i,v in pairs(game:GetService("Workspace").Living:GetChildren()) do 
if v.Name == Mobs and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then 
  repeat  
       wait() 
       game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.HumanoidRootPart.Position + Vector3.new(Distance,0,0),v.HumanoidRootPart.Position)
until v.Humanoid.Health <= 0 or Enabled == false 
end 
end 
end)
end 
end)

ss:Slider("Mob Distance",-9,10,9,function(t)
Distance = t 
end)

ss:Dropdown("Quests","Select Quest",Quest_Table,function(t)
    questname = t 
end)

ss:Toggle("Quest Start",function(t)
startQ = t 
while startQ do wait()
    pcall(function()
    if game.Players.LocalPlayer.PlayerGui.HUD.Frames.Quest.Visible == false then 

local args = {
    [1] = questname
}

game:GetService("ReplicatedStorage").Package.Events.GetQuest:InvokeServer(unpack(args))
game.Players.LocalPlayer.Character.Humanoid.Health = 0 
wait(2)
         end 
        end)    
    end 
end)

ss:Toggle("Autofarm Players",function(t)
   pcall(function()
    game:GetService("RunService").Heartbeat:Connect(function()
        if player then 
        game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end 
    end)
end)
        getgenv().player = t
        while player do wait()
            pcall(function()
    for i,v in pairs(game.Players:GetChildren()) do 
        if v ~= game.Players.LocalPlayer and v.Character:FindFirstChild("HumanoidRootPart") then
            repeat 
                wait()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.Character.HumanoidRootPart.Position + Vector3.new(0,DistanceP,0),v.Character.HumanoidRootPart.Position)
               until v.Character.Humanoid.Health < .1 
               end 
                 end 
            end)
         end 
    
end)

DistanceP = -5 
ss:Slider("Player Distance",-9,10,9,function(t)
    DistanceP = t 
    end)

sss:Button("HideName",function()
hidename()
end)


sss:Toggle("Spam Skill 1",function(t)
skill = t 
while skill do wait()
    pcall(function()
    local args = {
        [1] = "1",
        [2] = "Down",
        [3] = {
            ["MouseHit"] = CFrame.new(Vector3.new(-9044.6953125, -1992.3980712891, -3747.2824707031), Vector3.new(-0.92934691905975, -0.2072666734457, -0.30554038286209)),
            ["Mobile"] = false
        }
    }
    
    game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(args))
end)
end 
end)

sss:Toggle("Spam Skill 2",function(t)
    skill2 = t 
    while skill2 do wait()
        pcall(function()
        local args = {
            [1] = "2",
            [2] = "Down",
            [3] = {
                ["MouseHit"] = CFrame.new(Vector3.new(-9044.6953125, -1992.3980712891, -3747.2824707031), Vector3.new(-0.92934691905975, -0.2072666734457, -0.30554038286209)),
                ["Mobile"] = false
            }
        }
        
        game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(args))
end)
end 
end)

tp:Dropdown("Teleport Npcs",Tp_Table,function(t)
npc = t 
for i,v in pairs(game:GetService("Workspace").NPCs:GetChildren()) do 
if v.Name == npc then 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame 
end 
end 
end)

tp:Dropdown("Teleport Spawns",Spawn_Table,function(t)
Spawn = t 
for i,v in pairs(game:GetService("Workspace").Others.Spawns:GetChildren()) do 
if v.Name == Spawn then 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
end 
end 
end)

end     


     

if game.GameId == 2719512531 and getgenv().REAPER2 == true then 
    

    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))




local ss = Window:Tab("MAIN")
local tps = Window:Tab("TELEPORTS")


Npc_Table = {} 
       for i,v in pairs(game:GetService("Workspace").Living:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then 
        if not table.find(Npc_Table,v.Name) then 
            table.insert(Npc_Table,v.Name)
          end 
       end 
    end 
    
Quests_Table = {} 
for i,v in pairs(game:GetService("Workspace").NPCs:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("ClickDetector") and not table.find(Quests_Table,v.Name) then 
        table.insert(Quests_Table,v.Name)
    end 
end 

ss:Dropdown("Quests NPC",Quests_Table,function(t)
npcq = t     
end) 

ss:Toggle("AutoQuest",function(t)
autoq = t 
while autoq do wait() 
    pcall(function()
        for i2,v2 in pairs(game:GetService("Workspace").NPCs:GetChildren()) do 
          if v2.Name == npcq then 
        fireclickdetector(v2.ClickDetector)
        wait(.4)
        for i,v in pairs(game.Players.LocalPlayer.PlayerGui.Dialogue:GetDescendants()) do 
    if v:IsA("TextButton") and v.Text ~= "Bye" then 
        firesignal(v.MouseButton1Down)
    end 
end 
end 
end 
end) 
end 
end) 


    ss:Dropdown("Mobs To Farm",Npc_Table,function(t)
    Mobs = t 
    end)
    
    ss:Toggle("Autofarm Mobs",function(t)
    

        game:GetService("RunService").Stepped:Connect(function()
            if Enabled then 
                game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
             end 
    end)
    
        Enabled = t 
    while Enabled do wait()
        pcall(function()
        for i,v in pairs(game:GetService("Workspace").Living:GetChildren()) do 
    if v.Name == Mobs and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then 
      repeat  
           wait() 
           game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.HumanoidRootPart.Position + Vector3.new(Distance,0,0),v.HumanoidRootPart.Position)
    until v.Humanoid.Health <= 0 or Enabled == false 
    end 
    end 
    end)
    end 
    end)
    
    ss:Slider("Mob Distance",-9,10,9,function(t)
    Distance = t 
    end)

ss:Toggle("AutoHit",function(t)
    autohit = t 
    while autohit do wait() 
        pcall(function()
local args = {
    [1] = {
        ["inputType"] = Enum.UserInputType.MouseButton1,
        ["keyCode"] = Enum.KeyCode.Unknown
    }
}

game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
end) 
end 
end) 

local Npcs_Table = {} 
for i,v in pairs(game:GetService("Workspace").NPCs:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and not table.find(Npcs_Table,v.Name) then 
        table.insert(Npcs_Table,v.Name)
    end 
end 

local Npcs_Table1 = {} 
for i,v in pairs(game:GetService("Workspace").Ambience:GetChildren()) do 
    if v:IsA("Part")  and not table.find(Npcs_Table1,v.Name) then 
        table.insert(Npcs_Table1,v.Name)
    end 
end 


sss:Dropdown("Npc Teleports",Npcs_Table,function(t)
    npc = t 
for i,v in pairs(game:GetService("Workspace").NPCs:GetChildren()) do 
if v.Name == npc then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame 
end 
end 
end) 

sss:Dropdown("AREA TELEPORTS",Npcs_Table1,function(t)
      npc1 = t 
for i,v in pairs(game:GetService("Workspace").Ambience:GetChildren()) do 
if v.Name == npc1 then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
end 
end   
end) 


end 



   if game.PlaceId == 536102540 or game.PlaceId == 478132461 and getgenv().DBZFINALSTAND == true then --DRAGON BALL Z FINAL STAND 


    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))


local ss = Window:Tab("MAIN")
local sss = Window:Tab("STATS")

            
            local Mobs_Table = {"Snake","Scorpion","Black Scorpion","Red Ribbon Soldier","Red Ribbon Gunner","Tank","Shielded Tank","Corrupt Officer","Thug","Brute","Kung Fu Master","Android Prototype S","Android Prototype A","Android Prototype B","Chi Expert","Kick Boxer","Purple Fighter","Universal Champion","Yeti","Saibaman","Saibablue","Alien","Android 18","Android 17","Gorilla","Bear","Galactic Patrol","Mad Scientist","Imperfect Cell","Evil Majin","Saibared","Evil Crane Student","Evil Saiyan","Evil Saiyan [SSJ]","Evil Namekian"} 
           
          
        
          ss:Dropdown("Mobs To Farm",Mobs_Table,function(t)
          npc = t     
          end) 
          
          ss:Toggle("Autofarm Mobs",function(t)
          game:GetService("RunService").Heartbeat:Connect(function()
                   if Enabled then 
                       pcall(function()
                    game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
                       end) 
                    end 
 end)
         
        
        Enabled = t 
        while Enabled do wait() 
            pcall(function()
            for i,v in pairs(game:GetService("Workspace").Live:GetChildren()) do 
        if string.match(v.Name,npc) and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then 
          repeat  
               wait() 
               game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.HumanoidRootPart.Position + Vector3.new(1,db,1),v.HumanoidRootPart.Position)
        until v.Humanoid.Health <= 0 or Enabled == false 
        end 
        end 
        end)
        end 
        end)
        
        db = 5 
        
        ss:Slider("Distance Slider",-10,10,9,function(t)
        db = t     
        end) 
        
          
        ss:Toggle("AutoHit",function(t)
                hit = t 
                while hit do wait(.4)
      local vim = game:GetService('VirtualInputManager')

   game:GetService('VirtualInputManager'):SendMouseButtonEvent(0,0,0,true,game,0)
                   end 
                end)
         
          sss:Toggle("Health",function(t)
                    stat1 = t 
                    while stat1 do wait ()
                    pcall(function()
                local args = {
                    [1] = game:GetService("Players").LocalPlayer.PlayerGui.HUD.Bottom.Stats["Health-Max"]
                }
                
                game:GetService("Players").LocalPlayer.Backpack.ServerTraits.AttemptUpgrade:FireServer(unpack(args))
                          end) 
                      end 
                end)
                
                sss:Toggle("Melee Damage",function(t)
                    stat2 = t 
                    while stat2 do wait ()
                    pcall(function()
                local args = {
                    [1] = game:GetService("Players").LocalPlayer.PlayerGui.HUD.Bottom.Stats["Phys-Damage"]
                }
                
                game:GetService("Players").LocalPlayer.Backpack.ServerTraits.AttemptUpgrade:FireServer(unpack(args))
                
                          end) 
                      end 
                end)
            
                
                sss:Toggle("Ki Max",function(t)
                    stat4 = t 
                    while stat4 do wait ()
                    pcall(function()
                local args = {
                    [1] = game:GetService("Players").LocalPlayer.PlayerGui.HUD.Bottom.Stats["Ki-Max"]
                }
                
                game:GetService("Players").LocalPlayer.Backpack.ServerTraits.AttemptUpgrade:FireServer(unpack(args))
                          end) 
                      end 
                end)
                
                
                sss:Toggle("Ki Damage",function(t)
                    stat5 = t 
                    while stat5 do wait ()
                    pcall(function()
                local args = {
                    [1] = game:GetService("Players").LocalPlayer.PlayerGui.HUD.Bottom.Stats["Ki-Damage"]
                }
                
                game:GetService("Players").LocalPlayer.Backpack.ServerTraits.AttemptUpgrade:FireServer(unpack(args))
                          end) 
                      end 
                end)
                
                
                
                sss:Toggle("Melee Resistance",function(t)
                    stat6 = t 
                    while stat6 do wait ()
                    pcall(function()
                local args = {
                    [1] = game:GetService("Players").LocalPlayer.PlayerGui.HUD.Bottom.Stats["Phys-Resist"]
                }
                
                game:GetService("Players").LocalPlayer.Backpack.ServerTraits.AttemptUpgrade:FireServer(unpack(args))
                          end) 
                      end 
                end)
                
                sss:Toggle("Ki Resistance",function(t)
                    stat7 = t 
                    while stat7 do wait ()
                    pcall(function()
                 
                local args = {
                    [1] = game:GetService("Players").LocalPlayer.PlayerGui.HUD.Bottom.Stats["Ki-Resist"]
                }
                
                game:GetService("Players").LocalPlayer.Backpack.ServerTraits.AttemptUpgrade:FireServer(unpack(args))
                          end) 
                      end 
                end)
                        
                        sss:Toggle("Speed",function(t)
                    stat8 = t 
                    while stat8 do wait ()
                    pcall(function()
                 
                local args = {
                    [1] = game:GetService("Players").LocalPlayer.PlayerGui.HUD.Bottom.Stats.Speed
                }
                
                game:GetService("Players").LocalPlayer.Backpack.ServerTraits.AttemptUpgrade:FireServer(unpack(args))
                
                                  end) 
                      end 
                end)
        end 






if game.GameId == 3400380447 and getgenv().RPGCHAMPIONS == true then 
    
    plr = game.Players.LocalPlayer.Character


    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))


local ss = Window:Tab("MAIN")

    
    ss:Toggle("Auto Shards",function(t)
           pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        if autoshard then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end)
end)
       
        autoshard = t
        while autoshard do task.wait()
            pcall(function()
                for i,v in pairs(game:GetService("Workspace").Ignore.LostShards:GetChildren()) do
                    if v ~= nil then
                       repeat 
                           wait() 
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Main.CFrame*CFrame.new(0,0,2)
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.E, "", game)
                     until v == nil or autoshard == false 
                    end
                end
            end)
        end
    end)

    
 ss:Toggle("Godmode",function(t)
        godmode = t
        while godmode do task.wait()
            for i,v in pairs(Workspace.Ignore.Map:GetDescendants()) do
                if v.Name == "Model" and v:FindFirstChild("Part") then
                    if (plr.Humanoid.Health / plr.Humanoid.MaxHealth *100) < 99 and v.Part:FindFirstChild("TouchInterest") then
                        firetouchinterest(plr.HumanoidRootPart, v.Part, 0)
                        task.wait(0.1)
                        firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Part, 1)
                    end
                end
            end
        end
    end)
    
        local Mobs_Table = {} 
        for i,v in pairs(Workspace.Enemies:GetChildren()) do 
            if v:IsA("Model") and not table.find(Mobs_Table,v.Name) then 
                table.insert(Mobs_Table,v.Name)
            end
        end
    

    
    ss:Toggle("Auto Farm Nearest Mob",function(t)
    pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        if autofarms then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end)
end)

  local getclosest = function()
   local MaxDistance= math.huge --u can remove this if the variable is defined somewhere else
   local ClosestObject
for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do 
       local MinDistance = MaxDistance
       if v:IsA("Model") and  v:FindFirstChild("HumanoidRootPart") then
           local dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude
           if dist < MaxDistance then
               MaxDistance, ClosestObject = dist, v
           end
       end
   end
   return ClosestObject
end

print(getclosest())

autofarms = t 
while autofarms do wait() 
    pcall(function()
dist = 5 
    repeat 
        wait() 
    local near = getclosest()
           game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(near.HumanoidRootPart.Position + Vector3.new(0,0,-3),near.HumanoidRootPart.Position)

    until autofarms == false or near.Humanoid.Health <= 0 
end) 
end 

    end)


ss:Toggle("AutoSwing",function(t)
    autoswing = t 
    while autoswing do wait() 
        pcall(function()
game.Players.LocalPlayer.Character.WeaponEvent:FireServer("swing")
     
        end) 
    end 
    
end) 

    
end


if game.GameId == 2142948266 and getgenv().PROJECTSLAYERS == true then 
 

    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))




local ss = Window:Tab("MAIN")


local ss = ss1:NewSection("MAIN")
local sss = sss1:NewSection("PLAYER")    

local tool_table = {}
    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") then
            table.insert(tool_table, v.Name)
        end
    end
    SelectedWeapon = nil

    ss:Dropdown(
        "Select Tool",
        tool_table,
        function(SelectedOption)
            SelectedWeapon = SelectedOption
        end
    )

    ss:Toggle(
        "AutoEquip",
        function(t)
            Equip = t
            while Equip do wait() 
                pcall(function()
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v.Name == SelectedWeapon then
                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                        end
                    end
                end)
            end
        end)



local Npc_Table = {} 
for i,v in pairs(game:GetService("Workspace").Mobs:GetDescendants()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and not table.find(Npc_Table,v.Name) then 
        table.insert(Npc_Table,v.Name)
    end 
end 

 ss:Toggle("Autofarm Nearest Mob",function(t)
        pcall(function()
        game:GetService("RunService").Stepped:Connect(function()
            if autofarms1 then
                game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
            end
        end)
    end)
    
      local getclosest = function()
       local MaxDistance= math.huge --u can remove this if the variable is defined somewhere else
       local ClosestObject
for i,v in pairs(game:GetService("Workspace").Mobs:GetDescendants()) do 
           local MinDistance = MaxDistance
           if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart")then
               local dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude
               if dist < MaxDistance then
                   MaxDistance, ClosestObject = dist, v
               end
           end
       end
       return ClosestObject
    end
    

    autofarms1 = t 
    while autofarms1 do wait() 
    dist = 5 
        repeat 
            wait() 
        local near = getclosest()
        moveto(near.HumanoidRootPart.CFrame,50)    
        until autofarms1 == false or near.Humanoid.Health <= 0 
    end 
    
    end) 


ss:Dropdown("Mobs To Farm",Npc_Table,function(t)
npc = t     
end) 

   ss:Toggle(
        "Autofarm Selected Mobs",
        function(state)
            farm = state
            game:GetService("RunService").Heartbeat:Connect(
                function()
                    if farm then
                        pcall(
                            function()
                                game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
                            end
                        )
                    end
                end
            )

            while farm do
                wait()

for i,v in pairs(game:GetService("Workspace").Mobs:GetDescendants()) do 
                    if v.Name == npc and v:FindFirstChild("HumanoidRootPart") then
                        repeat
                            wait()
                            pcall(
                                function()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(
                                        v.HumanoidRootPart.Position + Vector3.new(0, Distance, 0),
                                        v.HumanoidRootPart.Position
                                    )
                                end
                            )
                            wait()
                        until v.Humanoid.Health <= 0 or farm == false
                    end
                end
            end
        end
    )

   
    Distance = -7
  
  ss:Slider("Mob Farm Distance",-10,9,10,function(t)
      Distance = t 
  end) 
  
  
  Boss_Table = {} 
  for i,v in pairs(game:GetService("Workspace").Mobs.Bosses:GetDescendants()) do 
      if v:IsA("Model") and  v:FindFirstChild("Damage_Log") and  not table.find(Boss_Table,v.Name) then 
          table.insert(Boss_Table,v.Name)
      end 
  end 
  
  ss:Dropdown("Bosses To Farm",Boss_Table,function(t)
      bss = t 
  end) 
  
     ss:Toggle(
        "Autofarm Selected Boss",
        function(state)
            farm2 = state
            game:GetService("RunService").Heartbeat:Connect(
                function()
                    if farm2 then
                        pcall(
                            function()
                                game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
                            end
                        )
                    end
                end
            )

            while farm2 do
                wait()

  for i,v in pairs(game:GetService("Workspace").Mobs.Bosses:GetDescendants()) do 
                    if v.Name == bss and v:FindFirstChild("HumanoidRootPart") then
                        repeat
                            wait()
                            pcall(
                                function()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(
                                        v.HumanoidRootPart.Position + Vector3.new(0,Distance1, 0),
                                        v.HumanoidRootPart.Position
                                    )
                                end
                            )
                            wait()
                        until v.Humanoid.Health <= 0 or farm == false
                    end
                end
            end
        end
    )
    
         ss:Toggle(
        "Autofarm ALL Bosses",
        function(state)
            farm3 = state
            game:GetService("RunService").Heartbeat:Connect(
                function()
                    if farm3 then
                        pcall(
                            function()
                                game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
                            end
                        )
                    end
                end
            )

            while farm3 do
                wait()

  for i,v in pairs(game:GetService("Workspace").Mobs.Bosses:GetDescendants()) do 
                    if  v:FindFirstChild("HumanoidRootPart") then
                        repeat
                            wait()
                            pcall(
                                function()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(
                                        v.HumanoidRootPart.Position + Vector3.new(0,Distance1, 0),
                                        v.HumanoidRootPart.Position
                                    )
                                end
                            )
                            wait()
                        until v.Humanoid.Health <= 0 or farm3 == false
                    end
                end
            end
        end
    )
    
      ss:Slider("Boss Farm Distance",-10,9,10,function(t)
      Distance1 = t 
  end) 

ss:Toggle("Grandpa's Wagon Farm",function(t)
local TweenService  = game:GetService("TweenService")
local noclipE       = true
local antifall      = true

local function noclip()
    for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("BasePart") and v.CanCollide == true then
            v.CanCollide = false
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
        end
    end
end

local function moveto(obj, speed)
    local info = TweenInfo.new(((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude)/ speed,Enum.EasingStyle.Linear)
    local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj})

    if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
        antifall = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
        antifall.Velocity = Vector3.new(0,0,0)
        noclipE = game:GetService("RunService").Stepped:Connect(noclip)
        tween:Play()
    end
        
    tween.Completed:Connect(function()
        antifall:Destroy()
        noclipE:Disconnect()
    end)
end
     game:GetService("RunService").Heartbeat:Connect(
                function()
                    if wagonfarm then
                        pcall(
                            function()
                                game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
                            end
                        )
                    end
                end
            )
       wagonfarm = t 
       while wagonfarm do wait() 
           pcall(function()
         if game.Players.LocalPlayer.PlayerGui.Menu.Quest.Excess.Visible == false then 

repeat 
    wait() 
moveto(CFrame.new(226.86367797851562, 273.2576904296875, -1605.0296630859375),50)
local args = {
    [1] = "AddQuest",
    [2] = "game.Players.LocalPlayer.PlayerGui.Npc_Dialogue.LocalScript.Functions",
    [3] = 675123.7688094999,
    [4] = game:GetService("ReplicatedStorage"):WaitForChild("Player_Data"):WaitForChild(game.Players.LocalPlayer.Name):WaitForChild("Quest"),
    [5] = {
        ["Current"] = "Deliver grandpa Wagwon's wagon",
        ["List"] = {
            [1] = {
                ["Name"] = "Deliver wagon",
                ["Progress"] = {
                    [1] = 0,
                    [2] = 1
                }
            }
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))


until wagonfarm == false or game.Players.LocalPlayer.PlayerGui.Menu.Quest.Excess.Visible == true 
end 
if game.Players.LocalPlayer.PlayerGui.Menu.Quest.Excess.Visible == true then 
  
   moveto(game:GetService("Workspace")["Wagon_Deposit_Part"].CFrame,50)
end 
end) 
       end 
       
    end) 

sss:Toggle("Auto Eat Souls",function(t)
 autoeat = t 
 while autoeat do wait() 
     pcall(function()

workspace.Debree.Soul.Handle.Eatthedamnsoul:FireServer()
        
     end) 
 end 
 
end) 

sss:Toggle("Fist-Kill-Aura", function(x)
    getgenv().kill_aura = x
    while kill_aura do wait() 
     pcall(function()
if game.Players.LocalPlayer.combotangasd123.Value == 0 then 
for i = 1,4 do wait(.3) 

local args = {
    [1] = "fist_combat",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = game:GetService("Players").LocalPlayer.Character,
    [4] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart,
    [5] = game:GetService("Players").LocalPlayer.Character.Humanoid,
    [6] = i
}

game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S_:InvokeServer(unpack(args))

end 


    
                   
               
              end 
            
         end)
        end
end)

sss:Toggle("Sword-Kill-Aura", function(x)
    getgenv().kill_aura1 = x
    while kill_aura1 do wait() 
     pcall(function()
if game.Players.LocalPlayer.combotangasd123.Value == 0 then 
for i = 1,4 do wait(.3) 

local args = {
    [1] = "Sword_Combat_Slash",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = game:GetService("Players").LocalPlayer.Character,
    [4] = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart,
    [5] = game:GetService("Players").LocalPlayer.Character.Humanoid,
    [6] = i
}

game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S_:InvokeServer(unpack(args))

end 


    
                   
               
              end 
            
         end)
        end
end)
end 


if game.GameId == 3457700596 and getgenv().FRUITBATTLEGROUNDS == true then 


    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))



local ss = Window:Tab("MAIN")

local baseplate = Instance.new("Part")

baseplate.Name = "baseplate Draco Hub" 

baseplate.Parent = game:GetService("Workspace")

baseplate.CFrame = CFrame.new(-425.6152038574219, 20000.9319458007812, 437.5860595703125)

baseplate.Anchored = true 

baseplate.CanCollide = true 

baseplate.Size = Vector3.new(100000,.5,100000)


Codes_Table = {"SORRY4SHUTDOWN","MAGMALETSGOO","50KINSANE","40KDAMN","35KWOWBRO","30KLOVEYOU"}

    ss:Button("SafeSpot Tp",function(t)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =  CFrame.new(-425.6152038574219, 20005.9319458007812, 437.5860595703125)
    end) 
    
ss:Button("Redeem All Codes",function(t)
for i = 1,6 do wait()
local args = {
    [1] = "Codes",
    [2] = "Redeem",
    [3] = {
        ["Code"] = Codes_Table[i]
    }
}

game:GetService("ReplicatedStorage").Replicator:InvokeServer(unpack(args))
   end 
end) 

Fruits_Table = {"Barrier","Chop","Sand","Smoke","Rubber","Falcon","Gas","Bomb","Ice","Darkness","Dragon","Dough","Lightning","Quake","Gravity","Phoenix","Tsrubber","Light","Flame","Magma","Paw"} 

ss:Dropdown("Fruit To Stop Spin At 1",Fruits_Table,function(t)
stopat1 = t     
end) 

ss:Dropdown("Fruit To Stop Spin At 2",Fruits_Table,function(t)
stopat2 = t     
end) 

ss:Dropdown("Fruit To Stop Spin At 3",Fruits_Table,function(t)
stopat3 = t     
end) 

ss:Dropdown("Fruit To Stop Spin At 4",Fruits_Table,function(t)
stopat4 = t     
end) 

ss:Toggle("Auto Spin",function(t)
    autospin1 = t 
    while autospin1 do wait() 
        pcall(function()
if game.Players.LocalPlayer.PlayerGui.UI.Spin.Topbar.TxT.Text ~= "Fruit : "..stopat1 and game.Players.LocalPlayer.PlayerGui.UI.Spin.Topbar.TxT.Text ~= "Fruit : "..stopat2 and game.Players.LocalPlayer.PlayerGui.UI.Spin.Topbar.TxT.Text ~= "Fruit : "..stopat3  and game.Players.LocalPlayer.PlayerGui.UI.Spin.Topbar.TxT.Text ~= "Fruit : "..stopat4  then 
local args = {
    [1] = "FruitsHandler",
    [2] = "Spin",
    [3] = {
        ["Type"] = "Fast"
    }
}

game:GetService("ReplicatedStorage").Replicator:InvokeServer(unpack(args))

wait(4)
end 
end) 
end 
end) 

 


end 





if game.GameId == 1180269832 and getgenv().ARCANEODYSSEY == true then 


    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))




local ss = Window:Tab("MAIN")
local sss = Window:Tab("TELEPORTS")


local tool_table = {}
    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") then
            table.insert(tool_table, v.Name)
        end
    end
    
    local Npc_Table = {} 
    for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do 
        if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and not table.find(Npc_Table,v.Name) then 
            table.insert(Npc_Table,v.Name)
        end 
    end 
    
    SelectedWeapon = nil

    ss:Dropdown(
        "Select Tool",
        tool_table,
        function(SelectedOption)
            SelectedWeapon = SelectedOption
        end
    )

    ss:Toggle(
        "AutoEquip",
        function(t)
            Equip = t
            while Equip do wait() 
                pcall(function()
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v.Name == SelectedWeapon then
                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                        end
                    end
                end)
            end
        end)


ss:Toggle("Autofarm Fruits",function(t)
autofruits = t 
while autofruits do task.wait() 
    pcall(function()
for i,v in pairs(game:GetService("Workspace").Map:GetDescendants()) do 
if v.Name == "Fruit" and v:IsA("Part") then 
    repeat 
        wait() 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
    wait(.5)
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.E, "", game)
    wait(1)
    until autofruits == false 
end 
end 
end) 
end 
end) 

ss:Toggle("Autofarm Herbs",function(t)
autofruits1 = t 
while autofruits1 do task.wait() 
    pcall(function()
for i,v in pairs(game:GetService("Workspace").Map:GetDescendants()) do 
if v.Name == "Herb" and v:IsA("Part") then 
    repeat 
        wait() 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
    wait(.5)
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.E, "", game)
    wait(1)
    until autofruits1 == false 
end 
end 
end) 
end 
end) 

ss:Button("Inf Stamina",function()
    local metatable = getrawmetatable(game)
          local namecall = metatable.__namecall
          setreadonly(metatable, false)

          metatable.__namecall =
              newcclosure(
              function(self, ...)
                  if self.Name == "StaminaCost" then
                      return wait(9e9)
                  end
                  return namecall(self, ...)
              end
          )  
end) 


sss:Button("Tp To Treasure Chest",function(t)
for i,v in pairs(game:GetService("Workspace").Map:GetDescendants()) do 
if v.Name == "Treasure Chest" then 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Base.CFrame 
end 
end 
end) 

sss:Button("Tp To Weapon Chest",function(t)
for i,v in pairs(game:GetService("Workspace").Map:GetDescendants()) do 
if v.Name == "Weapon Chest" then 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Base.CFrame 
end 
end 
end) 

sss:Button("Tp To Armor Chest",function(t)
for i,v in pairs(game:GetService("Workspace").Map:GetDescendants()) do 
if v.Name == "Armor Chest" then 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Base.CFrame 
    
end 
end 
end) 
sss:Button("Tp To FoodCrates",function(t)
for i,v in pairs(game:GetService("Workspace").Map:GetDescendants()) do 
if v.Name == "Treasure Chest" then 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Base.CFrame 
end 
end 
end) 


end 





if game.GameId == 1451439645 and getgenv().KINGLEGACY == true then 


    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))



local ss = Window:Tab("MAIN")
local sss = Window:Tab("PLAYER")



local tool_table = {}
    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") then
            table.insert(tool_table, v.Name)
        end
    end
    
local Islands_Table = {} 
for i,v in pairs(game:GetService("Workspace").Areas:GetChildren()) do 
    if v:IsA("Part") and not table.find(Islands_Table,v.Name) then 
        table.insert(Islands_Table,v.Name)
    end 
end 

local Mobs_Table = {} 
for i,v in pairs(game:GetService("Workspace").Monster.Mon:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and not table.find(Mobs_Table,v.Name) then 
        table.insert(Mobs_Table,v.Name)
    end 
end 

local Quest_Table = {} 
for i,v in pairs(game:GetService("Workspace").AllNPC:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("Idle") and v:FindFirstChild("KenHaki") then 
        table.insert(Quest_Table,v.Name)
    end 
end 

    SelectedWeapon = nil

    ss:Dropdown(
        "Select Tool",
        tool_table,
        function(SelectedOption)
            SelectedWeapon = SelectedOption
        end
    )

    ss:Toggle(
        "AutoEquip",
        function(t)
            Equip = t
            while Equip do wait() 
                pcall(function()
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v.Name == SelectedWeapon then
                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                        end
                    end
                end)
            end
        end)




ss:Dropdown("Quest To Do",Quest_Table,function(t)
qt = t     
end) 

ss:Toggle("Auto Quest",function(t)
autoq = t 
while autoq do task.wait() 
    pcall(function()
    for i,v in pairs(game:GetService("Workspace").AllNPC:GetChildren()) do 
    if v.Name == qt and  game.Players.LocalPlayer.PlayerGui.Quest.QuestBoard.Visible == false then 
    repeat 
        wait() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame 
        
local args = {
    [1] = workspace.AllNPC[v.Name]
}

game:GetService("ReplicatedStorage").Remotes.Functions.CheckQuest:InvokeServer(unpack(args))
    function click_button1(button)
    button = game.Players.LocalPlayer.PlayerGui[v.Name].Dialogue.Accept
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, "",button, 1)
end
click_button1()
until game.Players.LocalPlayer.PlayerGui.Quest.QuestBoard.Visible == true or autoq == false 
    end 
    end 
    end) 
    end 
end) 

ss:Dropdown("Mobs To Farm",Mobs_Table,function(t)
npc = t 
end) 



ss:Toggle("Autofarm Mobs [USE WITH AUTO QUEST]",function(t)

    pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        if Enabled then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end)
end)

Enabled = t 
while Enabled do wait() 
    pcall(function()
for i,v in pairs(game:GetService("Workspace").Monster.Mon:GetChildren()) do 
if v.Name == npc and game.Players.LocalPlayer.PlayerGui.Quest.QuestBoard.Visible == true and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then 
  repeat  
       wait() 
       game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.HumanoidRootPart.Position + Vector3.new(Distance,0,0),v.HumanoidRootPart.Position)
until v.Humanoid.Health <= 0 or Enabled == false 
end 
end 
end)
end 
end)

Distance = 6 

ss:Slider("Mob Distance",-10,10,10,function(t)
Distance = t 
end)

ss:Toggle("Auto Hit",function(t)
autohit =t 
while autohit do wait() 
    pcall(function()

local args = {
    [1] = "FS_None_M1"
}

game:GetService("ReplicatedStorage").Remotes.Functions.SkillAction:InvokeServer(unpack(args))
        
    end) 
end 

end) 

Stats_Table = {"Defense","Melee","Sword","Power Fruit"} 

sss:Dropdown("Stat To Upgrade",Stats_Table,function(t)
    stat = t 
end) 

sss:Toggle("Auto Upgrade Stat",function(t)
autoupg = t 
while autoupg do task.wait() 
    pcall(function()

local args = {
    [1] = stat,
    [2] = 1
}

game:GetService("Players").LocalPlayer.PlayerGui.Stats.Button.StatsFrame.RemoteEvent:FireServer(unpack(args))
        
    end) 
end 

end) 

sss:Dropdown("Island Teleports",Islands_Table,function(t)
isl = t 
end) 

sss:Button("Teleport To Island",function(t)
    for i,v in pairs(game:GetService("Workspace").Areas:GetChildren()) do 
    if v.Name == isl then 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame + Vector3.new(0,20,0)
    end 
    end 
    
end) 

sss:Toggle("Fruit Farm",function(t)
fruit = t 
while fruit do wait() 
pcall(function()
for i,v in pairs(workspace:GetChildren()) do 
    if v:IsA("Tool") then 
        v.Handle.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame 
           end 
        end 
     end) 
   end 
end) 


end 




if game.GameId == 3525075510 and getgenv().PROJECTMUGETSU == true then 


    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))



local ss = Window:Tab("MAIN")
local s1 = Window:Tab("MEDITATION")
local sss = Window:Tab("SAFE")
local s4 = Window:Tab("Progress")
local s2 = Window:Tab("Soul City Farms")
local s3 = Window:Tab("Hueco Mundo Farms")



local tool_table = {}
    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") then
            table.insert(tool_table, v.Name)
        end
    end
    SelectedWeapon = nil

    ss:Dropdown(
        "Select Tool",
        tool_table,
        function(SelectedOption)
            SelectedWeapon = SelectedOption
        end
    )

    ss:Toggle(
        "AutoEquip",
        function(t)
            Equip = t
            while Equip do wait() 
                pcall(function()
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v.Name == SelectedWeapon then
                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                        end
                    end
                end)
            end
        end)


ss:Toggle("Auto Eat",function(t)
autoeat = t
end) 

local Npc_Table = {} 
for i,v in pairs(game:GetService("Workspace").World.Live.Mobs:GetDescendants()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and not table.find(Npc_Table,v.Name) then 
        table.insert(Npc_Table,v.Name)
    end 
end 

pcall(function()
Quest_Table = {} 
for i,v in pairs(game:GetService("Workspace").World.Quests.Indications:GetChildren()) do 
    if v:IsA("Part") and not table.find(Quest_Table,v.Name) then 
        table.insert(Quest_Table,v.Name)
    end 
end 
end) 

ss:Dropdown("Quest To Start",Quest_Table,function(t)
questn = t     
end) 

ss:Toggle("Auto Get Quest",function(t)
autoq = t 
while autoq do task.wait() 
    pcall(function()
if game.Players.LocalPlayer.PlayerGui.HUD.QuestProgress.Visible == false then
for i,v in pairs(game:GetService("Workspace").World.Quests.Indications:GetChildren()) do 
if v.Name == questn then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
local args = {
    [1] = questn,
    [2] = "Add"
}

game:GetService("ReplicatedStorage").Remotes.Quest_Remote:FireServer(unpack(args))
wait(1)
end 
end 
end 
        
    end) 
end 

end) 

Zones_Table = {"Zone1","Zone2","Zone3","Zone4","Zone5"}

Folder_Table = {} 
for i,v in pairs(game:GetService("Workspace").World.Live.Mobs:GetChildren()) do 
    if v:IsA("Folder") then 
        table.insert(Folder_Table,v.Name)
    end 
end 



ss:Dropdown("Mob To Farm",Folder_Table,function(t)
mob = t     
end) 


ss:Dropdown("Zone To Farm In",Zones_Table,function(t)
zone = t     
end) 


   ss:Toggle(
        "Autofarm Selected Mobs With Zone",
        function(state)
            farm = state
           while farm do
                wait()
   
    game:GetService("RunService").Stepped:Connect(function()
        if farm then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end)


 

for i,v in pairs(game:GetService("Workspace").World.Live.Mobs[mob][zone]:GetDescendants()) do 
                    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and farm then
                        repeat
                            wait()
                            if v:FindFirstChild("HumanoidRootPart") then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(
                                        v.HumanoidRootPart.Position + Vector3.new(0, Distance21, 0),
                                        v.HumanoidRootPart.Position
                                    )
                                    end
                        until not v or not v:FindFirstChild("Humanoid") or v.Humanoid.Health <= 0 or farm == false or not v:FindFirstChild("HumanoidRootPart")
                  wait(1.7)
                   if  autoeat then 
                 for i2,v2 in pairs(game.Workspace.World.Visuals:GetChildren()) do
                    if v2:FindFirstChild("Eat_Part") and  game.Players.LocalPlayer:DistanceFromCharacter(v2.Position) < 15 then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v2.CFrame
                   wait()   repeat wait()
                       if v2:FindFirstChild("Eat_Part") then
                        fireproximityprompt(v2.Eat_Part)
                       
                       end
                     print(not v2 , v2:FindFirstChild("Eat_Part") )
                        until not v2  or not v2:FindFirstChild("Eat_Part")
                        end
                     end
                     end
                    
end
            end 
            end
        end
    )

   
    ss:Toggle(
        "Autofarm Selected Mobs Without Zone",
        function(state)
            farm2 = state
while farm2 do
                wait()
    pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        pcall(function()
        if farm2 then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end ) end)


for i,v in pairs(game:GetService("Workspace").World.Live.Mobs[mob]:GetDescendants()) do 
                    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and farm2 then
                        repeat
                            wait()
                            if v:FindFirstChild("HumanoidRootPart") then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(
                                        v.HumanoidRootPart.Position + Vector3.new(0, Distance, 0),
                                        v.HumanoidRootPart.Position
                                    )
                                    end
                        until not v or not v:FindFirstChild("Humanoid") or v.Humanoid.Health <= 0 or farm2 == false or not v:FindFirstChild("HumanoidRootPart")
                  wait(1.7)
                   if  autoeat then 
                 for i2,v2 in pairs(game.Workspace.World.Visuals:GetChildren()) do
                    if v2:FindFirstChild("Eat_Part") and  game.Players.LocalPlayer:DistanceFromCharacter(v2.Position) < 15 then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v2.CFrame
                   wait()   repeat wait()
                       if v2:FindFirstChild("Eat_Part") then
                        fireproximityprompt(v2.Eat_Part)
                       
                       end
                     print(not v2 , v2:FindFirstChild("Eat_Part") )
                        until not v2  or not v2:FindFirstChild("Eat_Part")
                        end
                     end
                     end
                    end
                end
            end) 
            end
        end
    )

    ss:Toggle(
        "Autofarm Event Mobs",
        function(state)
            farm23 = state
while farm23 do
                wait()
    pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        if farm23 then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end)



for i,v in pairs(game:GetService("Workspace").World.Live.Mobs.Event:GetDescendants()) do 
                    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and farm23 then
                        repeat
                            wait()
                            if v:FindFirstChild("HumanoidRootPart") then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(
                                        v.HumanoidRootPart.Position + Vector3.new(0, Distance, 0),
                                        v.HumanoidRootPart.Position
                                    )
                                    end
                        until not v or not v:FindFirstChild("Humanoid") or v.Humanoid.Health <= 0 or farm23 == false or not v:FindFirstChild("HumanoidRootPart")
                  wait(1.7)
                   if  autoeat then 
                 for i2,v2 in pairs(game.Workspace.World.Visuals:GetChildren()) do
                    if v2:FindFirstChild("Eat_Part") and  game.Players.LocalPlayer:DistanceFromCharacter(v2.Position) < 15 then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v2.CFrame
                   wait()   repeat wait()
                       if v2:FindFirstChild("Eat_Part") then
                        fireproximityprompt(v2.Eat_Part)
                       
                       end
                        until not v2  or not v2:FindFirstChild("Eat_Part")
                        end
                     end
                     end
                    end
end
            end) 
            end
        end
    )
    

Distance = -7
  
  ss:Slider("Mob Farm Distance",-15,15,function(t)
      Distance = t 
  end) 
  
  Weapons = {"Sword","Fist"}
  
  ss:Dropdown("Tool To Use",Weapons,function(t)
  wep =t     
  end) 
  
  ss:Toggle("AutoHit",function(t)
  autohit = t 
  while autohit do task.wait() 
      pcall(function()
for i = 1,5 do wait(.3) 
local args = {
    [1] = "Swing",
    [2] = i,
    [3] = wep 
}

game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer(unpack(args))
if i == 5 then  
    wait(.4)
end 

end 
      end) 
  end 
  
  end) 


  
s1:Toggle("Auto Meditate",function(t)
automed = t 
while automed do task.wait() 
    pcall(function()
local args = {
    [1] = "Meditating",
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer(unpack(args))

local args = {
    [1] = "Apply_Meditation",
    [2] = 1,
    [3] = true
}

game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer(unpack(args))
end) 
end 
end) 
  

Teleport_Table = {} 
for i,v in pairs(game:GetService("Workspace").World.Interactables:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and  not table.find(Teleport_Table,v.Name) then 
        table.insert(Teleport_Table,v.Name)
    end 
end 


sss:Dropdown("Npc Teleports",Teleport_Table,function(t)
    teleporter = t 
end) 

sss:Button("Teleport To Npc",function()
  for i,v in pairs(game:GetService("Workspace").World.Interactables:GetChildren()) do 
  if v.Name == teleporter then 
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame 
  end 
  end 
  
end) 


local Players_Table = {} 
for i,v in pairs(game.Players:GetChildren()) do 
    if v ~= game.Players.LocalPlayer then 
        table.insert(Players_Table,v.Name) 
    end 
end 

sss:Dropdown("Farm Player",Players_Table,function(t)
plr = t     
end) 

Distance1 = 6 

sss:Slider('Player Farm Distance',-15,15,function(t)
Distance1 = t     
end) 


sss:Toggle("Autofarm Players",function(t)
    pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        if player then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end)
end)
        getgenv().player = t
        while player do wait()
            pcall(function()
    for i,v in pairs(game.Players:GetChildren()) do 
        if v.Name == plr then
            repeat 
                            wait()
              game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(v.Character.HumanoidRootPart.Position + Vector3.new(0, Distance1, 0),v.Character.HumanoidRootPart.Position)
               until v.Character.Humanoid.Health <= 0 or player == false 
               end 
                 end 
            end)
         end 
    
end)


sss:Button("TP TO WORLD OF LIVING",function()

placeid = 9474703390
tp = game:GetService('TeleportService')

for i,v in pairs (game.Players:GetChildren()) do
    tp:Teleport(placeid, v)
end
end) 

sss:Button("TP TO SOUL SOCIETY",function()
placeid = 11420877323
tp = game:GetService('TeleportService')

for i,v in pairs (game.Players:GetChildren()) do
    tp:Teleport(placeid, v)
end    
end) 

sss:Button("TP TO HUECO MUNDO",function()
placeid = 10202329527
tp = game:GetService('TeleportService')

for i,v in pairs (game.Players:GetChildren()) do
    tp:Teleport(placeid, v)
end    
end) 


Soul_Mobs = {"Yamamoto","Gin","Byakuya","Toshiro","Ichigo"}

s2:Dropdown("Mobs To Farm [SOUL CITY]",Soul_Mobs,function(t)
soulmob = t     
end) 

Distance2 = 10 


 s2:Toggle(
        "Autofarm Selected Mob",
        function(state)
            farm21 = state
while farm21 do
                wait()
    pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        if farm21 then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end)



for i,v in pairs(game:GetService("Workspace").World.Live.Mobs[soulmob]:GetDescendants()) do 
                    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and farm21 then
                        repeat
                            wait()
                            if v:FindFirstChild("HumanoidRootPart") then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(
                                        v.HumanoidRootPart.Position + Vector3.new(0, Distance21, 0),
                                        v.HumanoidRootPart.Position
                                    )
                                    end
                        until not v or not v:FindFirstChild("Humanoid") or v.Humanoid.Health <= 0 or farm21 == false or not v:FindFirstChild("HumanoidRootPart")
                  wait(1.7)
                   if  autoeat then 
                 for i2,v2 in pairs(game.Workspace.World.Visuals:GetChildren()) do
                    if v2:FindFirstChild("Eat_Part") and  game.Players.LocalPlayer:DistanceFromCharacter(v2.Position) < 15 then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v2.CFrame
                   wait()   repeat wait()
                       if v2:FindFirstChild("Eat_Part") then
                        fireproximityprompt(v2.Eat_Part)
                       
                       end
                        until not v2  or not v2:FindFirstChild("Eat_Part")
                        end
                     end
                     end
                    end
end
            end) 
            end
        end
    )

 s2:Toggle(
        "Autofarm Zanpakuto",
        function(state)
            farm212 = state
while farm212 do
                wait()
    pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        if farm212 then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end)



for i,v in pairs(game:GetService("Workspace").World.Live.Mobs.Zanpakuto:GetDescendants()) do 
                    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and farm212 then
                        repeat
                            wait()
                            if v:FindFirstChild("HumanoidRootPart") then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(
                                        v.HumanoidRootPart.Position + Vector3.new(0, Distance21, 0),
                                        v.HumanoidRootPart.Position
                                    )
                                    end
                        until not v or not v:FindFirstChild("Humanoid") or v.Humanoid.Health <= 0 or farm212 == false or not v:FindFirstChild("HumanoidRootPart")
                  wait(1.7)
                   if  autoeat then 
                 for i2,v2 in pairs(game.Workspace.World.Visuals:GetChildren()) do
                    if v2:FindFirstChild("Eat_Part") and  game.Players.LocalPlayer:DistanceFromCharacter(v2.Position) < 15 then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v2.CFrame
                   wait()   repeat wait()
                       if v2:FindFirstChild("Eat_Part") then
                        fireproximityprompt(v2.Eat_Part)
                       
                       end
                        until not v2  or not v2:FindFirstChild("Eat_Part")
                        end
                     end
                     end
                    end
end
            end) 
            end
        end
    )
    
s2:Slider("Mob Distance",-15,15,function(t)
Distance2 = t     
end) 



Hueco_Mobs = {"Hollows","MENOS","Arrancars","Vasto Lorde","Adjuchas","Arrogante","Starrk"}

s3:Dropdown("Mobs To Farm",Hueco_Mobs,function(t)
soulmob1 = t     
end) 

Distance21 = 10 

 s3:Toggle(
        "Autofarm Selected Mob",
        function(state)
            farm211 = state
while farm211 do
                wait()
   pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        if farm211 and   game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end) 



for i,v in pairs(game:GetService("Workspace").World.Live.Mobs[soulmob1]:GetDescendants()) do 
                    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and farm211 then
                        repeat
                            wait()
                            if v:FindFirstChild("HumanoidRootPart") then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(
                                        v.HumanoidRootPart.Position + Vector3.new(0, Distance21, 0),
                                        v.HumanoidRootPart.Position
                                    )
                                    end
                        until not v or not v:FindFirstChild("Humanoid") or v.Humanoid.Health <= 0 or farm211 == false or not v:FindFirstChild("HumanoidRootPart")
                  wait(1.7)
                   if  autoeat then 
                 for i2,v2 in pairs(game.Workspace.World.Visuals:GetChildren()) do
                    if v2:FindFirstChild("Eat_Part") and  game.Players.LocalPlayer:DistanceFromCharacter(v2.Position) < 15 then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v2.CFrame
                   wait()   repeat wait()
                       if v2:FindFirstChild("Eat_Part") then
                        fireproximityprompt(v2.Eat_Part)
                       
                       end
                        until not v2  or not v2:FindFirstChild("Eat_Part")
                        end
                     end
                     end
                    end
              end  

            end)
            end
        end
    )

s3:Slider("Mob Distance",-15,15,function(t)
Distance21 = t     
end) 

s3:Toggle("Auto Pick Up Drops",function(t)
autopickdrops = t 
while autopickdrops do task.wait() 
    pcall(function()
for i,v in pairs(game:GetService("Workspace").World.Drops:GetDescendants()) do 
    if v.Name == "Handle" or v.Name == "handle" then 
        repeat 
            wait() 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
    local args = {
    [1] = "Pickup_Item",
    [2] = workspace.World.Drops[v.Parent.Name]
    }

    game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer(unpack(args))
    until v.Parent == nil or autopickdrops == false 
    end 
    end 
    end) 
end 

end) 

skills_Table = {"Sword Jabs","Sheathed Slashses","Blade Swirl","Blade Thrust","Blade Smash","Triple Crescents"}

s3:Toggle("Auto Sword Skills",function(t)
autoskills = t 
while autoskills do task.wait() 
    pcall(function()
    for i = 1,7 do wait(.5)
    local args = {
    [1] = skills_Table[i]
    }

    game:GetService("ReplicatedStorage").Remotes.Server.Initiate_Server:FireServer(unpack(args))
    end 
    end) 
    end 
end) 
s4:Button("Hollow Progression",function()
    local Data = game:GetService("ReplicatedStorage")["Player_Datas"][game.Players.LocalPlayer.Name]
    local currentSlot = Data["Slot_"..Data["Current_Slot"].Value]
    print("Hollow progression: "..currentSlot["HollowProgression"].Exp.Value.."/"..currentSlot["HollowProgression"].MaxExp.Value)
    end)
 
s4:Button("Meditation Progression",function()
    local Data = game:GetService("ReplicatedStorage")["Player_Datas"][game.Players.LocalPlayer.Name]
    local currentSlot = Data["Slot_"..Data["Current_Slot"].Value]
    print("Meditation progression: "..currentSlot["MeditationProgression"].Exp.Value.."/"..currentSlot["MeditationProgression"].MaxExp.Value)
    end)
 
s4:Button("Zanpakuto Progression",function()
    local Data = game:GetService("ReplicatedStorage")["Player_Datas"][game.Players.LocalPlayer.Name]
    local currentSlot = Data["Slot_"..Data["Current_Slot"].Value]
    print("Zanpakuto progression: "..currentSlot["ZanpakutoProgression"].Exp.Value.."/"..currentSlot["ZanpakutoProgression"].MaxExp.Value)
    end)
end 

if game.GameId == 3291589472 and getgenv().VOXLBLADE == true then 


    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))


local Player = game.Players.LocalPlayer.Character 
function toTarget(pos, targetPos,Y)
    local tween_s = game:service"TweenService"
    local info = TweenInfo.new((targetPos - pos).Magnitude/50, Enum.EasingStyle.Linear)
    local tic_k = tick()
    local tween, err = pcall(function()
        tween = tween_s:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], info, {CFrame = CFrame.new(targetPos + Vector3.new(0, Y, 0), targetPos)})
        tween:Play()
    end)
    if not tween then return err end
end

for i,v in pairs(getgc(true)) do
    if type(v) =="table" and rawget(v,"RollKeybind") then
       if type(v["RollKeybind"]) == "function"then
          fu = v.RollKeybind
        end
    end
end
local _,mobs = pcall(function()
    local mobs = {"None","Random"}
    for i,v in pairs(game:GetService("ReplicatedStorage").NPCs:GetChildren()) do
      local name = string.gsub(v.name, "%d", "")
        if not table.find(mobs,name) and (not v:FindFirstChildOfClass("Accessory") or  v:FindFirstChildOfClass("Clothing") )   then
            table.insert(mobs,name)
            end
    end
    return mobs
end)

local _,npcs = pcall(function()
    local mobs = {}
    for i,v in pairs(game:GetService("ReplicatedStorage").NPCs:GetChildren()) do
      local name = string.gsub(v.name, "%d", "")
        if not table.find(mobs,name) and ( v:FindFirstChildOfClass("Accessory") or  v:FindFirstChildOfClass("Clothing") )   then
            table.insert(mobs,name)
            end
    end
    return mobs
end)
local _,Shrines = pcall(function()
    local Shrines = {}
      for i,v in pairs(game:GetService("Workspace").Shrines:GetChildren()) do
         table.insert(Shrines,v.Name) 
      end
      return Shrines
    end)
local _,Areas = pcall(function()
    local Areas = {}
      for i,v in pairs(game:GetService("ReplicatedStorage").MusicZone:GetChildren()) do
         table.insert(Areas,v.Name) 
      end
      return Areas
end)
local Hotels = {}
for i,v in pairs(getgc(true)) do
    if type(v)=="table" and rawget(v,"Tifa") and rawget(v,"Leo") then
      for i2,v2 in pairs(v) do
           for i3,v3 in pairs(getconstants(v2.Text)) do
               if string.find(tostring(v3),"Heal ") then
                 table.insert(Hotels,tostring(i2))
                   end
             end
          end
    end
    
end
function getItem(name)
for i,v in pairs(getgc(true)) do
    if type(v)=="table" and rawget(v,"Inventory")then
   for i2,v2 in pairs(v.Inventory) do
        if v2.ItemName == name then
            return i2
        end
   end
end   end   end
   local getClosestHotel = function()
   local MaxDistance= math.huge --u can remove this if the variable is defined somewhere else
   local ClosestObject
for i,v in pairs(game:GetService("Workspace").Interactables:GetChildren()) do 
       local MinDistance = MaxDistance
       if table.find(Hotels,v.Name) and v:IsA("MeshPart") and v:FindFirstChild("LinkedModel") then
           local dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.LinkedModel.HumanoidRootPart.Position).Magnitude
           if dist < MaxDistance then
               MaxDistance, ClosestObject = dist, v
           end
       end
   end
   return ClosestObject
end
local getClosest = function(mob)
   local MaxDistance= math.huge --u can remove this if the variable is defined somewhere else
   local ClosestObject
for i,v in pairs(game:GetService("Workspace").NPCS:GetChildren()) do 
       local MinDistance = MaxDistance
       if  string.find(v.Name,mob) or (mob2 and string.find(v.Name,mob2)) or ( mob3 and string.find(v.Name,mob3) ) or mob == "Random" then
           local dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).Magnitude
           if dist < MaxDistance then
               MaxDistance, ClosestObject = dist, v
           end
       end
   end
   return ClosestObject
end
local Heal = function(heal)
    if heal and game.Players.LocalPlayer.Character.Humanoid.Health <40 then
        local closest = getClosestHotel()
    repeat task.wait()
   toTarget(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,closest.Position,2)
    until game.Players.LocalPlayer:DistanceFromCharacter(closest.Position)<5
    wait(.3)
game:GetService("ReplicatedStorage").Events.DialogEffect:FireServer(closest,"Heal")
    end
    end





local AF = Window:Tab("AUTOFARMS")
local ss = Window:Tab("AUTOMATION")
local TP = Window:Tab("TELEPORTS")



 defaultHeight = 6
ss:Button("No Roll CD",function()
 hook = hookfunction(task.wait,newcclosure(function(s)
                   if getfenv(hook) == getfenv(fu) then
                     return wait(.3)
                   end
    return wait(s)
    end))
end) 

AF:Toggle("Autofarm",function(t)
    farmEnabled = t
end) 
ss:Toggle("Auto Equip",function(t)
    equipEnabled = t
end) 
ss:Toggle("NoClip",function(t)
    noclip = t
end) 
ss:Toggle("Auto Weapon Art",function(t)
    weaponArtEnabled = t
end) 
ss:Toggle("Auto Rune",function(t)
    rune = t
end) 
ss:Toggle("Auto Heal",function(t)
    autoHeal = t
end) 
ss:Toggle("Auto Use Potion",function(t)
    autoPotion = t
end) 
ss:Toggle("Fast Speed",function(t)
    speedEnabled = t
end)
ss:Toggle("Anti KnockBack",function(t)
    knockBack = t
end)
AF:Dropdown("MOBS",mobs,function(t)
  mob = t
end) 
AF:Dropdown("MOBS 2#",mobs,function(t)
  mob2 = t
end) 
AF:Dropdown("MOBS 3#",mobs,function(t)
  mob3 = t
end) 
TP:Dropdown("NPCS","Npcs",npcs,function(t)
 toTarget(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,game:GetService("Workspace").Interactables[t].Position,defaultHeight)
end) 
TP:Dropdown("Shrines",Shrines,function(t)
 toTarget(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,game:GetService("Workspace").Shrines[t][t].Position,defaultHeight)
end) 
TP:Dropdown("Areas",Areas,function(t)
 toTarget(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,game:GetService("ReplicatedStorage").MusicZone[t].Position,defaultHeight)
end) 
ss:Slider("Jump Power",-10,500,function(t)
   game.Players.LocalPlayer.Character.Humanoid.JumpPower = t
end) 
ss:Slider("Auto Farm Distance",0,20,function(t)
   defaultHeight = t
end) 
ss:Button("No Fog",function()
 local lol = game:GetService("Lighting"):FindFirstChild("Atmosphere") and game:GetService("Lighting"):FindFirstChild("Atmosphere"):Remove()
end) 
spawn(function()
while wait() do
   if farmEnabled and mob then
   pcall(function()
      local v = getClosest(mob)
            repeat
               wait()
               if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Character.Humanoid.Health > 0 then
                  toTarget(game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position,v.Position,defaultHeight)
                  game:GetService("ReplicatedStorage").Events.SwingSword:FireServer("L")
                  if game.Players.LocalPlayer:DistanceFromCharacter(v.Position) < 20 then
                      game:GetService("ReplicatedStorage").Events.SwingSword:FireServer("L")
              if weaponArtEnabled  then
                    game:GetService("ReplicatedStorage").Events.WeaponArt:FireServer()    
              end
              if rune then
game:GetService("ReplicatedStorage").Events.Rune:FireServer()
              end
              Heal(autoHeal)
              end
                  end  until farmEnabled==false or not v:FindFirstChild("LinkedModel") or not v or not v.LinkedModel.Humanoid or  v.LinkedModel.Humanoid.Health <=0
                end) end
            end
            end)
spawn(function()
    while wait() do
        local character = game.Players.LocalPlayer.character
        if equipEnabled and character and not character:FindFirstChild("Sword") then
game:GetService("ReplicatedStorage").Events.EquipWeapon:InvokeServer()
        end
        end
end)
spawn(function()
    while wait() do
        local character = game.Players.LocalPlayer.character
        if speedEnabled and character and character:FindFirstChild("Humanoid") then
character.Humanoid.WalkSpeed = 50
        end
    end
end
)

spawn(function() 
    while task.wait() do
    if farmEnabled and game.Players.LocalPlayer.Character or noclip  then
    game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
    end
end
end)
spawn(function() 
    while task.wait() do
        pcall(function()
    if autoPotion and game.Players.LocalPlayer.Character.Humanoid.Health < 25 and getItem("HealthPotion") then
game:GetService("ReplicatedStorage").Events.EquipArmor:InvokeServer(getItem("HealthPotion"),false)
   end  
end) end
end)
spawn(function() 
    while task.wait() do
        pcall(function()
    if knockBack and game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Knockback")  then
    game.Players.LocalPlayer.Character.HumanoidRootPart.Knockback:Remove()
   end  
end) end
end)

end 


if game.GameId == 3356508893 and getgenv().MIDNIGHTSUN == true then 



local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))


local ss = Window:Tab("MAIN")
local st = Window:Tab("STATS")
local s1 = Window:Tab("GOURD TRAINING")
local sss = Window:Tab("TELEPORTS")

        


local _,tool_table = pcall(function()
local tool_table = {}
    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") then
            table.insert(tool_table, v.Name)
        end
    end return tool_table
    end)
local _,Mobs_Table = pcall(function()
local Mobs_Table = {} 
for i,v in pairs(game:GetService("Workspace").Live.Npcs:GetChildren()) do 
    if v:IsA("Model") and not table.find(Mobs_Table,v.Name) then
        table.insert(Mobs_Table,v.Name)
    end 
    
end return Mobs_Table
end)
local _,Trainers_Table = pcall(function()
local Trainers_Table = {} 
for i,v in pairs(game:GetService("Workspace").Trainers:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then 
        table.insert(Trainers_Table,v.Name)
    end 
end return Trainers_Table 
end)
local _,Npcs_Table = pcall(function()
local Npcs_Table = {} 
for i,v in pairs(game:GetService("Workspace"):GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and not table.find(Npcs_Table,v.Name) then 
        table.insert(Npcs_Table,v.Name)
    end 
    
end return Npcs_Table
end
)


    SelectedWeapon = nil
local Hit = function()
    local args = {
    [1] = "M1"
}

game:GetService("Players").LocalPlayer.Character[SelectedWeapon].RemoteEvent:FireServer(unpack(args))

local args = {
    [1] = "Hitbox",
    [2] = 1,
    [3] = "M1"
}

game:GetService("Players").LocalPlayer.Character[SelectedWeapon].RemoteEvent:FireServer(unpack(args))
    
    end
    ss:Dropdown(
        "Select Tool",
        tool_table,
        function(SelectedOption)
            SelectedWeapon = SelectedOption
        end
    )

    ss:Toggle(
        "AutoEquip",
        function(t)
            Equip = t
            while Equip do wait() 
                pcall(function()
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v.Name == SelectedWeapon then
                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                        end
                    end
                end)
            end
        end)


ss:Toggle("Supply Quest Farm",function(t)


    pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        if supplyfarm then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end)
end)


supplyfarm = t 
while supplyfarm do task.wait() 
    pcall(function()
if game.Players.LocalPlayer.PlayerGui.Main.Mission.Visible == false then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").DeliverWoeb.Torso.CFrame + Vector3.new(0,-10,0)
wait()
fireproximityprompt(game:GetService("Workspace").DeliverWoeb.Torso.ProximityPrompt)
wait()
function click_button1(button)
    button = game.Players.LocalPlayer.PlayerGui.DialogueMain.Dialogue.Answer1T
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, "",button, 1)
end
click_button1()
end 

if game.Players.LocalPlayer.PlayerGui.Main.Mission.Visible == true and game.Players.LocalPlayer.PlayerGui.Main.Mission.Title.Text == "Deliver the Supplies" then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").FunctionNpcs.DesWoeb.HumanoidRootPart.CFrame + Vector3.new(0,-8,0)
wait()
fireproximityprompt(game:GetService("Workspace").FunctionNpcs.DesWoeb.Torso.ProximityPrompt)
wait()
function click_button1(button)
    button = game.Players.LocalPlayer.PlayerGui.DialogueMain.Dialogue.Answer1T
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, "",button, 1)
end
click_button1()
wait()
end 

end) 
end 
end)


ss:Toggle("NewsGuy Quest Farm",function(t)


    pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        if supplyfarm1 then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end)
end)


supplyfarm1 = t 
while supplyfarm1 do task.wait() 
    pcall(function()
if game.Players.LocalPlayer.PlayerGui.Main.Mission.Visible == false then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").NewsGuy.Torso.CFrame + Vector3.new(0,-10,0)
wait()
fireproximityprompt(game:GetService("Workspace").NewsGuy.Torso.ProximityPrompt)
wait()
function click_button1(button)
    button = game.Players.LocalPlayer.PlayerGui.DialogueMain.Dialogue.Answer1T
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, "",button, 1)
end
click_button1()
end 

if game.Players.LocalPlayer.PlayerGui.Main.Mission.Visible == true and game.Players.LocalPlayer.PlayerGui.Main.Mission.Title.Text == "Deliver the News" then 
for i,v in pairs(game:GetService("Workspace").Posts:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("Main") and v.Main:FindFirstChild("Indicator") and v.Main.Indicator.Enabled == true then 
wait()
repeat 
    wait() 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Main.CFrame + Vector3.new(0,-8,0)
fireproximityprompt(v.Main.ProximityPrompt)
until v.Main.Indicator.Enabled == false or supplyfarm1 == false 
end 
end 
end 

end) 
end 
end) 
pcall(function()
table.insert(Mobs_Table,"Slayers")
table.insert(Mobs_Table,"Demons")
end)
pcall(function()
ss:Dropdown("Mobs To Farm",Mobs_Table,function(t)
npc = t     
end) 
end)
ss:Toggle("Autofarm Mobs",function(t)

    pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        pcall(function()
        if Enabled then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
        end)
    end)
end)

Enabled = t 
while Enabled do wait() 
    pcall(function()
    for i,v in pairs(game:GetService("Workspace").Live.Npcs:GetChildren()) do 
if (v.Name == npc or (npc == "Slayers" and v:FindFirstChild("Sheath",true)) or (npc == "Demons" and not v:FindFirstChild("Sheath",true)) and v.Name ~= "Normal") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and (not v.Torso:FindFirstChild("DemonDie") or not v.Torso.DemonDie.Enabled) then
    
      repeat  
       wait() 
       game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.HumanoidRootPart.Position + Vector3.new(Distance,0,0),v.HumanoidRootPart.Position)
       Hit()
until not v or not v:FindFirstChild("Humanoid") or v.Humanoid.Health <= 0 or Enabled == false or v:FindFirstChild("Knocked",true)
    if v:FindFirstChild("Sheath",true) then
  repeat       repeat wait()  until v:FindFirstChild("Knocked",true) 
    repeat wait()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =v.HumanoidRootPart.CFrame
    wait(.7)
    game.Players.LocalPlayer.Character.Controller.RemoteEvent:FireServer("Grip")
wait(1)
    until game.Players.LocalPlayer.Character.Status:FindFirstChild("Gripping") or not v:FindFirstChild("Knocked",true)
      repeat wait() print("waiting")  until not v or not v:FindFirstChild("HumanoidRootPart") or wait(5) 
      until not v or not v:FindFirstChild("HumanoidRootPart") 
        end
end 
end 
end)
end 
end)
ss:Toggle("Auto Crow Quests",function(t)
autoQrow = t 
end)

ss:Toggle("Autofarm Bosses",function(t)

    pcall(function()
    game:GetService("RunService").Stepped:Connect(function()
        if Enabled then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end)
end)

Enabled = t 
while Enabled do wait() 
    pcall(function()
if game:GetService("Workspace").Live.Bosses:FindFirstChild("Akaza") == nil then 
for i2,v2 in pairs(workspace:GetDescendants()) do 
    if v2.Name == "AlocButton" and v2:IsA("Part") and v2:FindFirstChild("ProximityPrompt") then 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v2.CFrame 
        fireproximityprompt(v2.ProximityPrompt)
    end 
end 


end 


if game:GetService("Workspace").Live.BossMinions:FindFirstChild("BossUltra") then 
    repeat 
        wait() 
          game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game:GetService("Workspace").Live.BossMinions:FindFirstChild("BossUltra").HumanoidRootPart.Position + Vector3.new(Distance,0,0),game:GetService("Workspace").Live.BossMinions:FindFirstChild("BossUltra").HumanoidRootPart.Position)
until v.Humanoid.Health <= 0 or Enabled == false 
end 

    for i,v in pairs(game:GetService("Workspace").Live.Bosses:GetChildren()) do 
if v:IsA("Model") and v.Status:FindFirstChild("Iframe") == nil  and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then 
  repeat  
       wait() 
       game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.HumanoidRootPart.Position + Vector3.new(Distance,0,0),v.HumanoidRootPart.Position)
until v.Status:FindFirstChild("Iframe") or Enabled == false 
end 
end 
end)
end 
end)

Distance = 10

ss:Slider("Mob Distance",-20,20,20,function(t)
Distance = t 
end)

ss:Button("GodMode",function(t)
    game.Players.LocalPlayer.Character.Dash.RemoteEvent:FireServer("Falldmg", 0/0);
end)
ss:Button("Breath preservation",function(t)
   local Breathing = game.Players.LocalPlayer.Character.Breath.RemoteEvent
local OldNameCall = nil

OldNameCall = hookmetamethod(game, "__namecall", function(Self, ...)
    local Args = {...}
    if not checkcaller() and Self == Breathing  and Args[1] == "Stop" then
       for i,v in pairs(game.Players.LocalPlayer.Character.Status:GetChildren()) do
    if v.Name == "inBreath" then
    v:Remove()
    wait()
    return OldNameCall(Self, ...)
    end
end
    end
   return OldNameCall(Self, ...)
end)

end)
ss:Button("Infinite Jump",function()
    local animation = game.Players.LocalPlayer.Character.Humanoid.Animator:LoadAnimation(game.Players.LocalPlayer.Character.Dash.DoubleJump)
animation.Priority = Enum.AnimationPriority.Action3;
     game:GetService("UserInputService").InputBegan:Connect(function(p1, p2)
if p1.KeyCode == Enum.KeyCode.Space and game.Players.LocalPlayer.Character.Humanoid.FloorMaterial == Enum.Material.Air then
animation:play()
game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping, true);
end
end)
    
    end)

    
ss:Button("No Dash CD",function(t)
for i,v in pairs(getgc()) do
    if type(v)== "function" and getfenv(v).script == game.Players.LocalPlayer.Character.Dash then
     if table.find(getconstants(v),"Q") then
         fenv = getfenv(v)
         end
        end
end
 hook = hookfunction(tick,function()
           if getfenv(hook) == fenv or getfenv(hook).script == game.Players.LocalPlayer.Character.Dash  then
              return (hook() * 100)
               end
    return hook()
 end)    end)
ss:Button("Win Lute Quest",function()
    game:GetService("ReplicatedStorage").Events.LuteEvent:FireServer("Win")
end)

ss:Button("Data Roll Back",function()
    game:GetService("ReplicatedStorage").Events.InventoryEvent:FireServer({
	[1] = "Haori",
	[2] = game.Workspace
})
wait()
game.Players.LocalPlayer:Kick("REJOIN TO GET SPINS BACK")
end)

ss:Toggle("No Stun",function(t)
    noStun = t
end)
ss:Toggle("Auto Parry",function(t)
    AP = t
   end )
ss:Toggle("Kill Aura",function(t)
    killaura = t 
    while killaura do task.wait() 
        pcall(function()
local args = {
    [1] = "M1"
}
game:GetService("Players").LocalPlayer.Character[SelectedWeapon].RemoteEvent:FireServer(unpack(args))

local args = {
    [1] = "Hitbox",
    [2] = 1,
    [3] = "M1"
}

game:GetService("Players").LocalPlayer.Character[SelectedWeapon].RemoteEvent:FireServer(unpack(args))
end) 
end 
end)      

s1:Label("Auto Gourd Settings")

Gourd_Table = {"Small Gourd","Medium Gourd","Large Gourd"}
s1:Dropdown("Gourd You Are Using",Gourd_Table,function(t)
GourdUsing =  t     
end) 

s1:Slider("Start Breathing After ? Seconds",-1,20,20,function(t)
    starter = t 
end) 

s1:Slider("Stop Breathing After ? Seconds",-1,20,20,function(t)
    stopper = t 
end) 

s1:Toggle("Auto Gourd",function(t)
autogourd = t 
while autogourd do task.wait() 
    pcall(function()
local args = {
    [1] = "Start"
}

game:GetService("Players").LocalPlayer.Character.Breath.RemoteEvent:FireServer(unpack(args))
wait(stopper)

local args = {
    [1] = "Stop"
}

game:GetService("Players").LocalPlayer.Character.Breath.RemoteEvent:FireServer(unpack(args))
wait(.4)
game.Players.LocalPlayer.Character:FindFirstChild(GourdUsing):Activate()
wait(starter)

end) 
end 
end) 



s1:Toggle("Auto Buy Gourd",function(t)
autobuyg = t 
while autobuyg do task.wait() 
    pcall(function()
    if game.Players.LocalPlayer.Character:FindFirstChild(GourdUsing) == nil and game.Players.LocalPlayer.Backpack:FindFirstChild(GourdUsing) == nil then 
    fireproximityprompt(game:GetService("Workspace").Environment[GourdUsing].Center.ProximityPrompt)
    wait(1)
    function click_button1(button)
    button = game.Players.LocalPlayer.PlayerGui.DialogueMain.Dialogue.Answer1T
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, "",button, 1)
end
click_button1()
end 

    end) 
end 

end) 
pcall(function()
sss:Dropdown("Trainers To TP To",Trainers_Table,function(t)
    trainer = t 
end) 
end)
sss:Button("Teleport To Trainer",function(t)
    for i,v in pairs(game:GetService("Workspace").Trainers:GetChildren()) do 
    if v.Name == trainer then 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame 
     end 
    end 
end) 

sss:Dropdown("Npc To TP To",Npcs_Table,function(t)
    ml = t 
end) 

sss:Button("Teleport To Npc",function(t)
for i,v in pairs(game:GetService("Workspace"):GetChildren()) do 
    if v.Name == ml then 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame 
     end 
    end 
end) 

sss:Button("Tp To Shrine 1",function(t)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(956.027283, 132.180084, 1749.83362, -0.258128524, 0, 0.966110647, 0, 1, 0, -0.966110647, 0, -0.258128524)
end)

sss:Button("Tp To Shrine 2",function(t)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(61.382988, 375.182037, -3923.38159, 0.737299204, -0, -0.675566375, 0, 1, -0, 0.675566375, 0, 0.737299204)
end)

sss:Button("Tp To Shrine 3",function(t)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1641.30334, 146.858139, -873.710938, 0.766828239, 0, 0.641852438, 0, 1, 0, -0.641852438, 0, 0.766828239)
end)

sss:Button("Tp To Akaza Spawn",function(t)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").SpawnLocations.AkazaSpawn.CFrame 
end)

for i,v in pairs({ "RankXP", "Karma", "MaxHp", "Clan", "Rank", "Name", "Race", "BreathingLevel", "ShinobiTool" }) do
    st:Button(v,function()
        end)
    
end

spawn(function()
    while task.wait() do
    if noStun then
    for i,v in pairs(game.Players.LocalPlayer.Character.Status:GetChildren()) do
        if v.Name == "Stun" or v.Name == "Disable" then
        v:Remove()
    end
    end
        end
    end
end)
spawn(function()
    while task.wait() do
        if autoQrow then
 pcall(function()   if game.Players.LocalPlayer:GetAttribute("CurrentMission") == "[]" then
game:GetService("ReplicatedStorage").Events.CrowEvent:FireServer("SpawnCrow")
wait(.5)
firesignal(game.Players.LocalPlayer.PlayerGui.Main.CrowQuest.ImageLabel.Accept.MouseButton1Down)
        end
    for i,v in pairs(game:GetService("Workspace").Live.Npcs:GetChildren()) do
   local quest = game.HttpService:JSONDecode(game.Players.LocalPlayer:GetAttribute("CurrentMission"))
   if quest and quest["QuestProgress"][1] == quest["QuestProgress"][2] then break end
        if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Name == quest["QuestProgress"][4] and v.Humanoid.Health>50 and v.Torso.DemonDie.Enabled == false  then 
  repeat  
       wait() 
       game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.HumanoidRootPart.Position + Vector3.new(Distance,0,0),v.HumanoidRootPart.Position)
    Hit()
until not v or not v:FindFirstChild("Humanoid") or v.Humanoid.Health <= 0 or autoQrow == false or v:FindFirstChild("Knocked",true)
print('ended')
end 
        end
    end) end end
    end)
spawn(function()
    while task.wait() do
    if autoQrow then
       pcall(function()
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end)       end
    end
 end  )
spawn(function()
    while wait() do
    if AP then
          pcall( function()
Live = {}
   for i,v in pairs(game.Players:GetChildren()) do
       table.insert(Live,v.Character)
   end
  if (game:GetService("Workspace").Live:FindFirstChild("Npcs")) then
   for i,v in pairs(game:GetService("Workspace").Live.Npcs:GetChildren()) do
       table.insert(Live,v)
   end
   for i,v in pairs(game:GetService("Workspace").Live.EventNpcs:GetChildren()) do
       table.insert(Live,v)
   end
   for i,v in pairs(game:GetService("Workspace").Live.Bosses:GetChildren()) do
       table.insert(Live,v)
   end
   for i,v in pairs(game:GetService("Workspace").Live.BossMinions:GetChildren()) do
       table.insert(Live,v)
   end
  end
    for i,v in pairs(Live) do
      if v:FindFirstChild("HumanoidRootPart")  and game.Players.LocalPlayer:DistanceFromCharacter(v.HumanoidRootPart.Position) < 25 and  v.Name ~= game.Players.LocalPlayer.Character.Name then
if  v:FindFirstChild("Status")  and  v.Status:FindFirstChild("Hitting") or v.Status:FindFirstChild("UsingSkill")    then
wait(.1)
game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").RemoteEvent:FireServer("Block")
wait()
game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").RemoteEvent:FireServer("BlockEnd")
end
      end    
   end
      end)
        end
    end end)

end 

if game.GameId == 3772683742 and getgenv().PROJECTXXL == true then 



    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))


local ss = Window:Tab("MAIN")
local sss = Window:Tab("STATS")
local mc = Window:Tab("MISC AUTOMATION")



local Mobs_Table = {} 
for i,v in pairs(game:GetService("Workspace").Live:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and not table.find(Mobs_Table,v.Name) then 
        table.insert(Mobs_Table,v.Name)
    end 
end 

local Quest_Boards = {} 
for i,v in pairs(game:GetService("Workspace").QuestBoards:GetChildren()) do 
    if v:IsA("Model") then  
        table.insert(Quest_Boards,v.Name)
    end 
end 


local tool_table = {}
    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") then
            table.insert(tool_table, v.Name)
        end
    end
    SelectedWeapon = nil

    ss:Dropdown(
        "Select Tool",
        tool_table,
        function(SelectedOption)
            SelectedWeapon = SelectedOption
        end
    )

    ss:Toggle(
        "AutoEquip",
        function(t)
            Equip = t
            while Equip do wait() 
                pcall(function()
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v.Name == SelectedWeapon then
                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                        end
                    end
                end)
            end
        end)

ss:Dropdown("Quest Boards",Quest_Boards,function(t)
qt = t 
end)

ss:Toggle("Auto Quest",function(t) 
autoquest = t 
while autoquest do task.wait() 
pcall(function()
if game.Players.LocalPlayer.PlayerValues.CurrentQuest.Value == "" then 
for i,v in pairs(game:GetService("Workspace").QuestBoards:GetChildren()) do 
if v.Name == qt then 
    for i2,v2 in pairs(v:GetDescendants()) do
       if v2.Name == "ClickDetector" then 
           fireclickdetector(v2)
       end 
end 
end 
end 
end 
end) 
end 
end) 

ss:Dropdown("Mobs To Farm",Mobs_Table,function(t)
npc = t 
end) 

   ss:Toggle(
        "Autofarm Selected Mobs",
        function(state)
            farm = state
            game:GetService("RunService").Heartbeat:Connect(
                function()
                    if farm then
                        pcall(
                            function()
                                game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
                            end
                        )
                    end
                end
            )

            while farm do task.wait()
            pcall(function()
for i,v in pairs(game:GetService("Workspace").Live:GetChildren()) do 
                    if v.Name == npc and v:FindFirstChild("HumanoidRootPart") then
                        repeat
                            wait()
                            pcall(
                                function()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =CFrame.new(v.HumanoidRootPart.Position + Vector3.new(Distance, 0, 0),v.HumanoidRootPart.Position)
                                 end)
                             wait()
                until v.Humanoid.Health <= 0 or farm == false
             end
        end
        end) 
     end
end)

   
    Distance = -7
  
  ss:Slider("Mob Farm Distance",-10,10,10,function(t)
      Distance = t 
  end) 
  

ss:Toggle("Kill Aura",function(t)
killaura = t 
while killaura do task.wait()
    pcall(function()
local args = {
    [1] = "",
    [2] = Vector3.new(0,0,0),
    [3] = CFrame.new(0,0,0)
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("BladeCombatRemote"):FireServer(unpack(args))
end) 
end 
end) 

Stats_Table = {"Strength","Magic","Weapon","Defense"}

sss:Dropdown("Stat To Upgrade",Stats_Table,function(t)
stattoupg = t 
end) 

sss:Toggle("Start Upgrading Stat",function(t)
autoup = t 
while autoup do task.wait() 
pcall(function()
local args = {
    [1] = stattoupg,
    [2] = "1"
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("UpgradeStatsRemote"):FireServer(unpack(args))

end) 
end 
end) 

mc:Toggle("Chest Farm",function(t)
chestfarm = t 
while chestfarm do task.wait() 
pcall(function()
for i,v in pairs(game:GetService("Workspace").Chests:GetChildren()) do 
    if v:IsA("MeshPart") and v.SurfaceLight.Enabled == true then 
        repeat 
        wait() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
        until v.SurfaceLight.Enabled == false or chestfarm == false 
    end 
    end 
    end) 
    end 
end) 


mc:Toggle("Farm All Drops",function(t)
farmdrops = t 
while farmdrops do task.wait() 
pcall(function()
for i,v in pairs(game:GetService("Workspace").Drops:GetChildren()) do 
    if v:IsA("Tool") and v:FindFirstChild("Handle") then 
        v.Handle.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame 
    end 
    end 
end) 
end 
end) 

mc:Toggle("HideName",function(t)
hidename = t 
while hidename do task.wait() 
pcall(function()
game.Players.LocalPlayer.Character.Head.Overhead:Destroy() 
end) 
end 
end) 


end 

if game.GameId == 98929893 and getgenv().DRAGONBALLRAGE == true then 


    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))



local ss = Window:Tab("MAIN")
local s1 = Window:Tab("ENERGY")
local tps = Window:Tab("TELEPORTS")



pcall(function()
for i,v in pairs(game:GetService("ReplicatedStorage").Communication:GetDescendants()) do 
    v.Name = tostring(i)
end 
end) 

ss:Toggle("Auto Train Attack",function(t)
autoatk = t 
while autoatk do task.wait() 
pcall(function()
game:GetService("ReplicatedStorage"):WaitForChild("Communication"):WaitForChild("1"):WaitForChild("6"):FireServer()

end) 
end 
end) 

ss:Toggle("Auto Train Defense",function(t)
autodfs = t 
while autodfs do task.wait() 
pcall(function()
game:GetService("ReplicatedStorage"):WaitForChild("Communication"):WaitForChild("1"):WaitForChild("5"):FireServer()
end) 
end 
end) 

ss:Toggle("Auto Train Ki",function(t)
autoki = t 
while autoki do task.wait() 
pcall(function()
local args = {
    [1] = "Left",
    [2] = Vector3.new(-3020.8681640625, 558.6934814453125, 1176.91357421875)
}

game:GetService("ReplicatedStorage"):WaitForChild("Communication"):WaitForChild("1"):WaitForChild("9"):FireServer(unpack(args))

local args = {
    [1] = "Right",
    [2] = Vector3.new(-3020.8681640625, 558.6934814453125, 1176.91357421875)
}

game:GetService("ReplicatedStorage"):WaitForChild("Communication"):WaitForChild("1"):WaitForChild("9"):FireServer(unpack(args))


end) 
end 
end) 

Energy_Mode = {"Normal","Bypass"}

s1:Dropdown("Auto Charge Energy Mode",Energy_Mode,function(t)
engmode = t 
end) 

s1:Toggle("Auto Charge Energy",function(t)
autochargee = t 
while autochargee do task.wait() 
pcall(function()
if game.Players.LocalPlayer.Character.State.Energy.Value <= 30 and engmode == "Bypass" then 
game.Players.LocalPlayer.Character.Humanoid.Health = 0 
end 
if game.Players.LocalPlayer.Character.State.Energy.Value <= 10 and engmode == "Normal" then 
repeat 
wait() 
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.C, "", game)
until game.Players.LocalPlayer.Character.State.Energy.Value >= game.Players.LocalPlayer.Character.State.MaxEnergy.Value or autochargee == false 
end 

if game.Players.LocalPlayer.Character.State.Energy.Value >= game.Players.LocalPlayer.Character.State.MaxEnergy.Value then 
game:GetService("VirtualInputManager"):SendKeyEvent("", Enum.KeyCode.C, "", game)
end 


end) 
end 
end) 

Npc_Table = {} 
for i,v in pairs(game:GetService("Workspace").Map.Quests:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then 
        table.insert(Npc_Table,v.Name)
    end 
end 

Islands_Table = {} 
for i,v in pairs(game:GetService("Workspace").Map.Islands:GetChildren()) do 
    if v:IsA("Folder") or v:IsA("Model") then 
        table.insert(Islands_Table,v.Name)
    end 
end 

tps:Dropdown("Npc Teleports",Npc_Table,function(t)
npc1 = t 
end) 

tps:Button("Tp To Npc",function()
for i,v in pairs(game:GetService("Workspace").Map.Quests:GetChildren()) do 
    if v.Name == npc1 then 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame 
    end 
    end 

end)

tps:Dropdown("Island Teleports",Islands_Table,function(t)
isl = t 
end) 


tps:Button("Tp To Island",function()
for i,v in pairs(game:GetService("Workspace").Map.Islands:GetChildren()) do 
if v.Name == isl then 
    for i2,v2 in pairs(v:GetDescendants()) do 
        if v2:IsA("Part") then 
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v2.CFrame + Vector3.new(0,20,0) 
        end 
end 
end 
end 
end)  

end 

if game.GameId == 4686757867 and getgenv().ROADMANODYSSEY == true then 



    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))


local ss = Window:Tab("MAIN")
local train = Window:Tab("TRAININGS")
local food = Window:Tab("FOOD")
local tp = Window:Tab("TELEPORTS")



local baseplate = Instance.new("Part")

baseplate.Name = "baseplate Draco Hub1" 

baseplate.Parent = game:GetService("Workspace")

baseplate.CFrame = CFrame.new(-141.1986083984375, 480.3379211425781, -504.57501220703125)

baseplate.Anchored = true 

baseplate.CanCollide = true 

baseplate.Size = Vector3.new(100000000,.5,100000000)

local baseplate = Instance.new("Part")

baseplate.Name = "baseplate Draco Hub5" 

baseplate.Parent = game:GetService("Workspace")

baseplate.CFrame = CFrame.new(-818.465087890625, 480.8838806152344, -856.0936279296875)

baseplate.Anchored = true 

baseplate.CanCollide = true 

baseplate.Size = Vector3.new(100000000,.5,100000000)

local baseplate = Instance.new("Part")

baseplate.Name = "baseplate Draco Hub2" 

baseplate.Parent = game:GetService("Workspace")

baseplate.CFrame = CFrame.new(-241.597412109375, 482.1155700683594, 662.6658935546875)

baseplate.Anchored = true 

baseplate.CanCollide = true 

baseplate.Size = Vector3.new(15,.5,15)

local baseplate = Instance.new("Part")

baseplate.Name = "baseplate Draco Hub3" 

baseplate.Parent = game:GetService("Workspace")

baseplate.CFrame = CFrame.new(-703.918457, 479.605713, 564.271851)

baseplate.Anchored = true 

baseplate.CanCollide = true 

baseplate.Size = Vector3.new(15,.5,15)

ss:Button("TURN ON NO CLIP [USE WITH FARMS]",function(t)
_G.conn = game:GetService("RunService").Stepped:Connect(function()
   for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
       if v:IsA("BasePart") then
           v.CanCollide = false    
       end
   end
end)
end) 

ss:Button("TURN OFF NO CLIP",function()
_G.conn:Disconnect()
end) 


ss:Toggle("Autofarm SkillBooks",function(t)
autofarmskills = t 
while autofarmskills do task.wait() 
pcall(function()
for i,v in pairs(workspace:GetChildren()) do 
    if v.Name == "Book" and v:IsA("Model") and v:FindFirstChild("Prompt") and v:FindFirstChild("Handle") then 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Handle.CFrame 
        wait(.5)
        fireproximityprompt(v.Prompt)
    end 
end 

end) 
end 
end) 

ss:Toggle("Money Farm [UNDERGROUND]",function(t)
moneyfarmss = t
 while moneyfarmss do wait() 
     pcall(function()
if game.Players.LocalPlayer.PlayerGui:FindFirstChild("JobGui") == nil then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-241.7798614501953, 485.06072998046875, 658.880126953125)

for i,v in pairs(game:GetService("Workspace")["Job Board"].bord:GetChildren()) do 
    if v.Name == "BORD" then 
        repeat 
            wait()
        fireclickdetector(v.ClickDetector)
        until game.Players.LocalPlayer.PlayerGui:FindFirstChild("JobGui") ~= nil or moneyfarmss == false 
      end 
   end 
 end 

if game.Players.LocalPlayer.PlayerGui.JobGui.Frame.Desc.Text == "Get to sweeping." then 

repeat 
    wait() 

function click_button1(button)
    button = game.Players.LocalPlayer.PlayerGui.JobGui.Frame.End
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, "",button, 1)
end
click_button1()

until game.Players.LocalPlayer.PlayerGui.JobGui.Frame.Desc.Text == "Get the loot to the delivery point." or moneyfarm == false 

end 

if game.Players.LocalPlayer.PlayerGui.JobGui.Frame.Desc.Text == "Get the loot to the delivery point." then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-703.918457, 487.605713, 564.271851)
end
end) 
end 
    
end) 

ss:Toggle("Auto Jump",function(t)
autojump = t 
while autojump do wait() 
    pcall(function()
 local humanoid = game.Players.LocalPlayer.Character.Humanoid

humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
wait(5)   

    end) 
end 

end) 




ss:Toggle("Inf Running Stamina",function(t)
infrun = t 
while infrun do wait() 
    pcall(function()
game.Players.LocalPlayer.Backpack.Server:FindFirstChildOfClass("RemoteEvent"):FireServer("Running",false)
end) 
end 
end) 


ss:Toggle("Anti Staff",function(t)
antistaff = t
while antistaff do wait(3)
    pcall(function()
        for i,v in pairs(game.Players:GetPlayers()) do
        if v:GetRankInGroup(5911958) >= 2 then
        game.Players.LocalPlayer:Kick(v:GetRoleInGroup(5911958).." is here.")
        end
    end
    end)
end
end)

ss:Button("Reset Character",function(t)
game.Players.LocalPlayer.Character.Humanoid.Health = 0     
end) 



ss:Button("Print Stats",function()
print("Strength: "..game.Players.LocalPlayer.Character.Strength.Value)
print("Stamina: "..game.Players.LocalPlayer.Character.MaxStamina.Value)
print("Speed: "..game.Players.LocalPlayer.Character.Speed.Value)
print("---------------------------------")
end) 
 
fatigueset = 65 

train:Slider("Start Showering At Fatigue",1,100,100,function(t)
fatigueset = t 
end) 

train:Button("DONT MOVE WHILE SHOWER OR YOU WILL REJOIN",function()

end) 

train:Toggle("AutoShower",function(t)
autoshower = t 
while autoshower do task.wait() 
pcall(function()
if tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= fatigueset and game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored == false then 
for i = 1,30 do wait(.3)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-797.6771240234375, 488.3047790527344, -811.6201782226562)
end 
    wait(4)
local PathFindingService = game:GetService("PathfindingService")

local human = game.Players.LocalPlayer.Character:WaitForChild("Humanoid")
local torso = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

local path = PathFindingService:CreatePath()  
path:ComputeAsync(torso.Position, Vector3.new(-811.9473876953125, 487.8838806152344, -857.751953125)) 
local Waypoints = path:GetWaypoints()
path.Blocked:Connect(function()
    
end)

for i, Waypoint in pairs(Waypoints) do 
    if Waypoint.Action == Enum.PathWaypointAction.Jump then
        human.Jump = true
    end
    human:MoveTo(Waypoint.Position)
    
    human.MoveToFinished:Wait()
end
wait(2)
for i,v in pairs(workspace:GetChildren()) do 
    if v:IsA("Part") and v.Name == "Hospital" and v:FindFirstChild("ClickDetector") and v:FindFirstChild("BillboardGui") then 
        fireclickdetector(v.ClickDetector)
    end 
end 
repeat wait() until game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text == "0%" 

if game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text == "0%" then 
    wait(2)
for i,v in pairs(workspace:GetChildren()) do 
    if v:IsA("Part") and v.Name == "Hospital" and v:FindFirstChild("ClickDetector") and v:FindFirstChild("BillboardGui") then 
        fireclickdetector(v.ClickDetector)
    end 
end 
wait(1)
 local PathFindingService = game:GetService("PathfindingService")

local human = game.Players.LocalPlayer.Character:WaitForChild("Humanoid")
local torso = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

local path = PathFindingService:CreatePath()  
path:ComputeAsync(torso.Position, Vector3.new(-811.9473876953125, 487.8838806152344, -857.751953125)) 
local Waypoints = path:GetWaypoints()
path.Blocked:Connect(function()
    
end)

for i, Waypoint in pairs(Waypoints) do 
    if Waypoint.Action == Enum.PathWaypointAction.Jump then
        human.Jump = true
    end
    human:MoveTo(Waypoint.Position)
    
    human.MoveToFinished:Wait()
end
end 
end 
end) 
end 
end) 

train:Button("Get In Shower Once",function(t)

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =  CFrame.new(-820.67724609375, 487.8838806152344, -854.3734741210938)
wait(2)
for i,v in pairs(workspace:GetChildren()) do 
    if v:IsA("Part") and v.Name == "Hospital" and v:FindFirstChild("ClickDetector") and v:FindFirstChild("BillboardGui") then 
        fireclickdetector(v.ClickDetector)
    end 
end 

end) 



train:Seperator()

train:Toggle("Auto Bench",function(t)
autobench = t 
while autobench do task.wait() 
pcall(function()
if game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored == false and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset then 
for i,v in pairs(workspace.Map.BenchPressMachines:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("Selector") and v.Selector:FindFirstChild("ClickDetector") then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-106.25106811523438, 510.2650146484375, -448)
        repeat 
        wait() 
        fireclickdetector(v.Selector.ClickDetector)
        until tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= fatigueset or autobench == false 
    end 
end 
end 

if tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= fatigueset then 
    repeat wait() until game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text == "0%" or autobench == false 
end 

if game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text == "0%" then 
wait(15)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-106.25106811523438, 510.2650146484375, -448)
end 

end) 
end 
end) 

tread_tables = {"Stamina","Speed"}

train:Dropdown("Treadmill Training Type",tread_tables,function(t)
treadtype = t 
end) 

train:Toggle("Auto Select Stam/Speed",function(t)
autosel = t 
while autosel do task.wait() 
pcall(function()
if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Choices") ~= nil then 
repeat 
wait() 
 function click_button1(button)
    button = game:GetService("Players").LocalPlayer.PlayerGui.Choices.Background[treadtype]
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, "",button, 1)
end
click_button1()
until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Choices") == nil or autosel == false 
end 
end) 
end 
end) 

train:Toggle("Auto Treadmills",function(t)
autotread = t 
while autotread do task.wait() 
pcall(function()

for i,v in pairs(workspace.Map.Treadmills:GetChildren()) do 
    if game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored == false and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= 65 and v:IsA("Model") and v:FindFirstChild("Click") and v.Click:FindFirstChild("ClickDetector") then 
        repeat wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-166.4985809326172, 489.3820495605469, -543.8510131835938)
        wait(.1)
        fireclickdetector(v.Click.ClickDetector)
    until game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored == true or autotread == false 
    end 
end 


if tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= fatigueset then 
repeat wait() until game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text == "0%"
end 

if game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text == "0%" then 
wait(15)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-166.4985809326172, 489.3820495605469, -543.8510131835938)
end 
end) 
end 
end) 


player = game.Players.LocalPlayer

local key_table = {"W","A","S","D"}


train:Toggle("Auto Press Keys On Screen",function(t)
autoke = t 
while autoke do task.wait() 
pcall(function()
if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("EventKey") ~= nil and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset then 
    repeat 
    wait() 
toolname = game:GetService("Players").LocalPlayer.PlayerGui.EventKey.Button
if table.find(key_table,toolname.Text) then 
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode[toolname.Text], "", game)
wait(.2)
game:GetService("VirtualInputManager"):SendKeyEvent("", Enum.KeyCode[toolname.Text], true, game)
end 
until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("EventKey") == nil and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= fatigueset or autoke == false 
end 
end) 
end 
end) 

train:Seperator()


train:Toggle("Auto Res Training",function(t)
  autores = t 
    while autores do wait() 
        pcall(function()

if game.Players.LocalPlayer.Backpack:FindFirstChild("Res Training") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Res Training") == nil then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-141.28883361816406, 484.3379211425781, -504.77734375)

    for i,v in pairs(game:GetService("Workspace").Shops.testStore:GetChildren()) do 
        if string.match(v.Name,"Res Training") then 
            fireclickdetector(v.ClickDetector)
       end 
    end wait(1)
 game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack["Res Training"])
    wait(.1)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
     wait(.1)
     game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,game,1)

end 



if  game.Players.LocalPlayer.Character:FindFirstChild("Res Training") ~= nil  then 
    repeat 
        wait() 
game.Players.LocalPlayer.Backpack.Server:FindFirstChildOfClass("RemoteEvent"):FireServer("ToolFire","M1")    
until game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored == false or autores == false 
end 

if tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= fatigueset then
   
repeat 
wait() 
until game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text == "0%"
end 
end) 
end 
end) 

train:Seperator()

train:Toggle("Auto Pushups",function(t)
    pushupfarm = t 
    while pushupfarm do wait() 
        pcall(function()

if tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset and game.Players.LocalPlayer.Character:FindFirstChild("Pushup") == nil then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-141.28883361816406, 484.3379211425781, -504.77734375)
wait(1)   
    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.Pushup)
    wait(.1)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
     wait(.1)
     game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,game,1)
end 

if game.Players.LocalPlayer.Character.Stamina.Value >=  game.Players.LocalPlayer.Character.MaxStamina.Value and game.Players.LocalPlayer.Character:FindFirstChild("Pushup") ~= nil  then 
    repeat 
        wait() 
          game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
     wait(.1)
     game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,game,1)
        game:GetService("Players").LocalPlayer.PlayerGui.EventKey.LocalScript.RemoteEvent:FireServer()
        until tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= fatigueset or pushupfarm == false  
end

if game.Players.LocalPlayer.Character:FindFirstChild("Pushup") and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= fatigueset then 
game.Players.LocalPlayer.Character.Pushup.Parent = game.Players.LocalPlayer.Backpack
repeat 
wait() 
until tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= 0 or pushupfarm == false  
end 

end) 
end 
end) 

train:Seperator()

train:Toggle("Auto Impact [OP]",function(t)
autoimp = t 
while autoimp do task.wait() 
pcall(function()
if game.Players.LocalPlayer.Character:FindFirstChild("ForceField") and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset then 
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.W, "", game)
wait(.1)
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.W, "", game)
wait(2)
game:GetService("VirtualInputManager"):SendKeyEvent("", Enum.KeyCode.W, true, game)
wait(.1)
game:GetService("VirtualInputManager"):SendKeyEvent("", Enum.KeyCode.W, true, game)
wait(.1)
game:GetService("VirtualInputManager"):SendKeyEvent("", Enum.KeyCode.W, "", game)


    repeat 
    wait() 
    until game.Players.LocalPlayer.Character:FindFirstChild("ForceField") == nil or autoimp == false 
end 

if game.Players.LocalPlayer.Character:FindFirstChild("Durability") == nil and game.Players.LocalPlayer.Backpack:FindFirstChild("Durabilty") == nil and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-103.90271759033203, 510.0945739746094, -521.1182861328125)
wait(.5)
fireclickdetector(workspace.Shops.testStore.Durability.ClickDetector)
wait(.5)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-67.53633880615234, 487.8398132324219, -519.871337890625)
end 

if game.Players.LocalPlayer.Backpack:FindFirstChild("Durability") ~= nil and  tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset then 
game.Players.LocalPlayer.Backpack.Durability.Parent = game.Players.LocalPlayer.Character
end 

if game.Players.LocalPlayer.Character:FindFirstChild("Durability") ~= nil and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset then 
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(.1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,game,1)
wait(2)
game.Players.LocalPlayer.Character.Humanoid.Health = 0 
wait(.2)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(.1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,game,1)
wait(.5)
end 

if tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= fatigueset then 
repeat wait() until tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= 0 or autoimp == false 
end 


if tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= 7 and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= 1 then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-67.53633880615234, 487.8398132324219, -519.871337890625)
end 

end) 
end 
end) 


train:Seperator()


train:Toggle("Auto Squats",function(t)
    pushupfarm2 = t 
    while pushupfarm2 do wait() 
        pcall(function()

if tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset and game.Players.LocalPlayer.Character:FindFirstChild("Squat") == nil then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-141.28883361816406, 484.3379211425781, -504.77734375)
wait(1) 
repeat wait()   
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.Squat)
until game.Players.LocalPlayer.Character:FindFirstChild("Squat") ~= nil or pushupfarm2 == false 
end 

if tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset and game.Players.LocalPlayer.Character:FindFirstChild("Squat") ~= nil  then 
    repeat 
        wait() 
          game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
     wait(.1)
     game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,game,1)
        until tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= fatigueset or pushupfarm2 == false  
end

if game.Players.LocalPlayer.Character:FindFirstChild("Squat") and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= fatigueset then 
game.Players.LocalPlayer.Character.Squat.Parent = game.Players.LocalPlayer.Backpack

repeat 
wait() 
until game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text == "0%" or pushupfarm2 == false  
end 

if game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text == "0%" then 
wait(15)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-141.28883361816406, 484.3379211425781, -504.77734375)
wait(1)
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.Squat)

end 

end) 
end 
end) 

train:Seperator()

train:Button("TP To STRIKING FARM",function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(581.524169921875, 512.6235961914062, -729.303466796875)
end) 


train:Toggle("Auto Striking",function(t)
    autostriking = t 
    while autostriking do wait() 
        pcall(function()
if game.Players.LocalPlayer.Backpack:FindFirstChild("Striking Training") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Striking Training") == nil and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset then 
    for i,v in pairs(game:GetService("Workspace").Shops.testStore:GetChildren()) do 
        if string.match(v.Name,"Striking Training") then 
            fireclickdetector(v.ClickDetector)
       end 
    end 
end 

if game.Players.LocalPlayer.Backpack:FindFirstChild("Striking Training") ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Striking Training") == nil  and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset then 
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack["Striking Training"])
end 
    
if game.Players.LocalPlayer.Character:FindFirstChild("LeftGlove") == nil and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset then 
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(.1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,game,1)
else
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.Fist)
end 

if  game.Players.LocalPlayer.Character:FindFirstChild("Fist") and game.Players.LocalPlayer.Character.Stamina.Value >=  game.Players.LocalPlayer.Character.MaxStamina.Value  and game.Players.LocalPlayer.Character:FindFirstChild("LeftGlove") and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset then 
repeat 
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(.2)
until tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= fatigueset or  game.Players.LocalPlayer.Character:FindFirstChild("Fist") and game.Players.LocalPlayer.Character:FindFirstChild("LeftGlove") == nil or autostriking == false  
end 

if tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= fatigueset then
repeat 
wait() 
until game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text == "0%" or autostriking == false 
end 

if game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text == "0%" then 
wait(3.5)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(581.524169921875, 512.6235961914062, -729.303466796875)
end 

end) 
end 
end) 


train:Seperator()

food:Slider("Auto Eat At",10,100,99,function(t)
eatat = t 
end) 

food:Toggle("Auto Eat Ramen",function(t)
autoeatramen3 = t 
while autoeatramen3 do wait() 
    pcall(function()
if game.Players.LocalPlayer.Character.Hunger.Value <= eatat then 
repeat 
    wait(1) 
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack["Ramen Bowl"])
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(.1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,game,1)
wait(2)
until game.Players.LocalPlayer.Character.Hunger.Value >= eatat or autoeatramen3 == false 

end

    end) 
end 
end) 

waitsecss = 2 

food:Seperator()

food:Slider("Drink Too Much Macho Every ? Seconds",1,99,100,function(t)
waitsecss = t 
end) 


food:Toggle("Auto Drink TOO MUCH MACHO",function(t)
autoeatramen32 = t 
while autoeatramen32 do wait() 
    pcall(function()
if  tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset then 
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack["TOO MUCH MACHO"])
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(.1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,game,1)
wait(waitsecss)
end 
    end) 
end 
end) 

food:Seperator()


book_table = {"Muscle Book","Res Book","Speed Book","Stamina Book"}

food:Dropdown("Books",book_table,function(t)
bk = t     
end) 



food:Toggle("Auto Book",function(t)
autoeatramen1 = t 
while autoeatramen1 do wait() 
    pcall(function()
if game.Players.LocalPlayer.Character.Head:FindFirstChild("FX1") == nil and tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) <= fatigueset then 
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[bk])
repeat 
    wait() 
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(.1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,game,1)
wait(1)
until game.Players.LocalPlayer.Character.Head:FindFirstChild("FX1") ~= nil or autoeatramen1 == false 

end

if tonumber(game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text:match("%d+")) >= fatigueset then 
    repeat 
    wait() 
    until game.Players.LocalPlayer.PlayerGui.HUD.Fullsize.Fatigue.Text == "0%" or autoramen1 == false 
end 

    end) 
end 
end) 

local Npc_Table = {} 
for i,v in pairs(workspace["NPC's"]:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then 
        table.insert(Npc_Table,v.Name)
    end 
end 

local shop_table = {} 
for i,v in pairs(workspace.Shops.testStore:GetChildren()) do 
    if v:IsA("Part") and v:FindFirstChild("ClickDetector") then 
        table.insert(shop_table,v.Name)
    end 
end 

tp:Dropdown("ShopItem Teleports",shop_table,function(t)
npctotpto1 = t 
end) 

tp:Button("Tp To Item",function()
for i,v in pairs(workspace.Shops.testStore:GetChildren()) do 
if v.Name == npctotpto1 then 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
end 
end 
end) 

tp:Toggle("Buy Selected Item",function(t)
buys = t 
while buys do task.wait() 
pcall(function()
for i,v in pairs(workspace.Shops.testStore:GetChildren()) do 
if v.Name == npctotpto1 then 
    fireclickdetector(v.ClickDetector)
end 
end 
end) 
end 
end) 

tp:Seperator()

tp:Dropdown("Npc Teleports",Npc_Table,function(t)
npctotpto = t 
end) 

tp:Button("Tp To Npc",function()
for i,v in pairs(workspace["NPC's"]:GetChildren()) do 
if v.Name == npctotpto then 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame 
end 
end 

end) 

tp:Button("Tp To Stat Check",function(t)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-795.6502685546875, 524.853759765625, -945.7562255859375)

end) 



end 

if game.GameId == 4069560710 and getgenv().ONEFRUIT == true then 





local ss = Window:Tab("MAIN")

ss:Toggle("Autofarm Fruits",function(t)
_G.s.autofruits = t 
saveSettings()
while _G.s.autofruits do task.wait() 
    pcall(function()
for i,v in pairs(game:GetService("Workspace").Map:GetDescendants()) do 
if v.Name == "Fruit" and v:IsA("Part") then 
    repeat 
        wait() 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
    wait(.5)
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.E, "", game)
    wait(1)
    until _G.s.autofruits == false 
end 
end 
end) 
end 
end) 

end 

if game.GameId == 3481099993 and getgenv().RIDERWORLD == true then 


    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))


local ss = Window:Tab("MAIN")
local mc = Window:Tab("MISC")


local Mobs_Table = {} 
for i,v in pairs(workspace.Lives:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("AI_Controller") and v:FindFirstChild("HumanoidRootPart") and not table.find(Mobs_Table,v.Name) then 
        table.insert(Mobs_Table,v.Name)
    end 
end 


local tool_table = {}
    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") then
            table.insert(tool_table, v.Name)
        end
    end
    SelectedWeapon = nil

    ss:Dropdown(
        "Select Tool",
        tool_table,
        function(SelectedOption)
            SelectedWeapon = SelectedOption
        end
    )

    ss:Toggle(
        "AutoEquip",
        function(t)
            Equip = t
            while Equip do wait(2) 
                pcall(function()
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v.Name == SelectedWeapon then
                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                        end
                    end
                end)
            end
        end)

ss:Toggle("Auto Henshin",function(t)
_G.s.autohenshin = t 
saveSettings() 

while _G.s.autohenshin do task.wait() 
pcall(function()
if game.Players.LocalPlayer.Character:FindFirstChild("RiderBody") == nil then 
local args = {
    [1] = "Henshin"
}

game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("Function"):WaitForChild("Feedback"):InvokeServer(unpack(args))
wait(2)
end 

end) 
end 
end) 

ss:Toggle("Auto Hit",function(t)
_G.s.autohit = t
saveSettings() 
while _G.s.autohit do task.wait() 
pcall(function()
local args = {
    [1] = {
        ["Input"] = "Mouse1",
        ["LightAttack"] = true
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("Event"):WaitForChild("Action"):FireServer(unpack(args))

end) 
end 
end) 

ss:Dropdown("Mobs To Farm",Mobs_Table,function(t)
_G.s.npc = t 
saveSettings() 
end) 

ss:Toggle(
        "Autofarm Start Mobs",
        function(state)
            _G.s.farm = state
            saveSettings()
            game:GetService("RunService").Heartbeat:Connect(
                function()
                    if _G.s.farm then
                        pcall(
                            function()
                                game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
                            end
                        )
                    end
                end
            )

            while _G.s.farm do
                wait()

for i,v in pairs(workspace.Lives:GetChildren()) do 
                    if v.Name == _G.s.npc and v:FindFirstChild("HumanoidRootPart") then
                        repeat
                            wait()
                            pcall(
                                function()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(
                                        v.HumanoidRootPart.Position + Vector3.new(Distance, 0, 0),
                                        v.HumanoidRootPart.Position
                                   
                                    )
                                    if isnetworkowner(v.PrimaryPart) then
                                        v.Humanoid.Health = 0 
                                        v.Head:Destroy()
                                        end
                                end
                            )
                            wait()
                        until v.Humanoid.Health <= 0 or _G.s.farm == false
                    end
                end
            end
        end
    )

    Distance = 5

    ss:Slider(
        "Distance",
        -9,
        10,
        3,
        function(t)
            Distance = t
        end
    )

ss:Toggle("Hide Name",function(t)
_G.s.hidename = t 
saveSettings() 
while _G.s.hidename do task.wait() 
pcall(function()
workspace.Lives.alirauf05.NAME_GUI:Destroy() 
end) 
end 
end) 

Npc_Table = {} 
for i,v in pairs(workspace.NPC:GetDescendants()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then 
        table.insert(Npc_Table,v.Name)
    end 
    end 

mc:Dropdown("Npc Teleports",Npc_Table,function(t)
_G.s.npc2 = t 
saveSettings()
end) 

mc:Button("TP TO NPC",function()
for i,v in pairs(workspace.NPC:GetDescendants()) do 
if v:IsA("Model") and v.Name == _G.s.npc2 and v:FindFirstChild("HumanoidRootPart") then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame 
end 
end 
end) 

mc:Toggle("Auto V",function(t)
_G.s.autov = t 
saveSettings() 
while _G.s.autov do task.wait() 
pcall(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.V, "", game)
wait(.2)
game:GetService("VirtualInputManager"):SendKeyEvent("", Enum.KeyCode.V, true, game)
end) 
end 
end)

mc:Toggle("Auto C",function(t)
_G.s.autoc = t 
saveSettings() 
while _G.s.autoc do task.wait() 
pcall(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.C, "", game)
wait(.2)
game:GetService("VirtualInputManager"):SendKeyEvent("", Enum.KeyCode.C, true, game)
end) 
end 
end)  

mc:Toggle("Auto R",function(t)
_G.s.autor = t 
saveSettings() 
while _G.s.autor do task.wait() 
pcall(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.R, "", game)
wait(.2)
game:GetService("VirtualInputManager"):SendKeyEvent("", Enum.KeyCode.R, true, game)
end) 
end 
end) 

mc:Toggle("Auto E",function(t)
_G.s.autoe = t 
saveSettings()
while _G.s.autoe do task.wait() 
pcall(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.E, "", game)
wait(.2)
game:GetService("VirtualInputManager"):SendKeyEvent("", Enum.KeyCode.E, true, game)
end) 
end 
end) 

end 

if game.GameId == 3782853289 and getgenv().WEAKLEGACY == true then 


    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))



local ss = Window:Tab("MAIN")
local sss = Window:Tab("TELEPORTS")

local tool_table = {}
    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") then
            table.insert(tool_table, v.Name)
        end
    end

SelectedWeapon = nil

local Mobs_Table = {} 
for i,v in pairs(workspace.CharactersAndNPCs:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Air") and not table.find(Mobs_Table,v.Name) then 
    table.insert(Mobs_Table,v.Name)
    end 
end 

local Quest_Table = {} 
for i,v in pairs(workspace.TalkNPC:GetChildren()) do 
    if v:IsA("Model") and string.match(v.Name,"Quest") and not table.find(Quest_Table,v.Name) then 
        table.insert(Quest_Table,v.Name)
    end 
end 


    ss:Dropdown(
        "Select Tool",
        tool_table,
        function(SelectedOption)
            SelectedWeapon = SelectedOption
        end
    )

    ss:Toggle(
        "AutoEquip",
        function(t)
            Equip = t
            while Equip do wait() 
                pcall(function()
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v.Name == SelectedWeapon then
                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                        end
                    end
                end)
            end
        end)

ss:Dropdown("Quest To Do",Quest_Table,function(t)
quest = t 
end) 

ss:Toggle("Auto Quest",function(t)
autoquest = t 
while autoquest do task.wait() 
    pcall(function()
if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("QuestBar") == nil and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Dialogue") == nil then 
for i,v in pairs(workspace.TalkNPC:GetChildren()) do 
if v.Name == quest then   
repeat wait() 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame
fireproximityprompt(v.ProximityPrompt)
until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Dialogue") ~= nil and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("QuestBar") == nil or autoquest == false 
end 
if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Dialogue") ~= nil and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("QuestBar") == nil then 
repeat wait() 
function click_button1(button)
    button = game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.DialogueTest.Accept
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, "",button, 1)
end
click_button1()
until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Dialogue") == nil and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("QuestBar") ~= nil or autoquest == false 
end 
end 
end 
end)
end 
end) 



ss:Dropdown("Mobs To Farm",Mobs_Table,function(t)
npc = t 
end)

 ss:Toggle(
        "Autofarm Start Mobs",
        function(state)
            farm = state
            game:GetService("RunService").Heartbeat:Connect(
                function()
                    if farm then
                        pcall(
                            function()
                                game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
                            end
                        )
                    end
                end
            )

            while farm do
                wait()

for i,v in pairs(workspace.CharactersAndNPCs:GetChildren()) do 
                    if v.Name == npc and v:FindFirstChild("HumanoidRootPart") then
                        repeat
                            wait()
                            pcall(
                                function()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        CFrame.new(
                                        v.HumanoidRootPart.Position + Vector3.new(Distance, 0, 0),
                                        v.HumanoidRootPart.Position
                                   
                                    )
                                    if isnetworkowner(v.PrimaryPart) then
                                        v.Humanoid.Health = 0 
                                        v.Head:Destroy()
                                        end
                                end
                            )
                            wait()
                        until v.Humanoid.Health <= 0 or farm == false
                    end
                end
            end
        end
    )

    Distance = 5

    ss:Slider(
        "Distance",
        -9,
        10,
        3,
        function(t)
            Distance = t
        end
    )

ss:Toggle("Auto M1",function(t)
autom1 = t 
while autom1 do task.wait() 
pcall(function()
local args = {
    [1] = "M1",
    [2] = "Combat",
    [3] = false
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Attack"):FireServer(unpack(args))

end) 
end 
end) 

local Areas_Table = {} 
for i,v in pairs(workspace.Location:GetChildren()) do 
    if v:IsA("Part") then 
         table.insert(Areas_Table,v.Name) 
    end 
end 

sss:Dropdown("Areas To Tp To",Areas_Table,function(t)
loc = t 
end) 

sss:Button("Tp  To Area",function()
for i,v in pairs(workspace.Location:GetChildren()) do 
if v.Name == loc then 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
end 
end 
end) 

local Npcs_Table = {} 
for i,v in pairs(workspace.TalkNPC:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
        table.insert(Npcs_Table,v.Name)
    end 
end 

sss:Dropdown("Npc To Tp  To",Npcs_Table,function(t)
npctp = t 
end) 

sss:Button("Tp To Npc",function()
for i,v in pairs(workspace.TalkNPC:GetChildren()) do 
if v.Name == npctp then 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame 
end 
end 
end) 

end 

if game.GameId == 2893456990 and getgenv().AVATAR == true then 


    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))


local ss = Window:Tab("MAIN")
local sss = Window:Tab("TELEPORTS")

alp = {"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"}

ss:Button("Start Meditating Without Sitting",function(t)
local args = {
    [1] = "Start"
}

game:GetService("Players").LocalPlayer.Character.Scripts.Server.Meditation.Event:FireServer(unpack(args))

local args = {
    [1] = "Start"
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("Meditate"):FireServer(unpack(args))

end) 

ss:Button("Tp To Meditation Mat",function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3203.164794921875, 217.5565185546875, -1820.8502197265625)
end) 

ss:Toggle("Auto Meditation Keys",function(t)
automed = t 
while automed do task.wait() 
pcall(function()
for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui["Key Spam"]:GetChildren()) do 
    if v:FindFirstChildOfClass("ImageLabel") ~= nil then 
    repeat wait() 
    local args = {
    [1] = "Complete"
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("Create Key"):FireServer(unpack(args))
wait(2)
until v:FindFirstChildOfClass("ImageLabel") == nil or automed == false 
    end 
end 
end) 
end 
end) 

ss:Seperator()

ss:Toggle("Auto Crate Quest",function(t)
autohit23 = t 
while autohit23 do task.wait() 
pcall(function()

if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Enabled == false and game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.Mainframe.Visible == false then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3041.203369140625, 144.16058349609375, -924.064453125)
wait(.5)
fireclickdetector(workspace.NPC.Quests.Air["Air Transfer"].Click)
wait(2)
function click_button1(button)
    button = game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.Mainframe["Positive Choice"]
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, "",button, 1)
end
click_button1()
end 

if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Mainframe.Quest.Current.Text == "Deliver the crate. 0/1" and game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.Mainframe.Visible == false then 
for i,v in pairs(workspace.NPC:GetChildren()) do 
    if v.Name == "Crate" and v:FindFirstChild("Crate") then 
        repeat wait() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
        wait(.5)
       fireproximityprompt(v.Crate) 
       wait(.5)
       until game.Players.LocalPlayer.Character:FindFirstChild("Quest Item") ~= nil or autohit23 == false 
    end 
end 
end 


if game.Players.LocalPlayer.Character:FindFirstChild("Quest Item") ~= nil and game:GetService("Players").LocalPlayer.PlayerGui.Quest.Mainframe.Quest.Current.Text == "Deliver the crate. 0/1" and game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.Mainframe.Visible == false then 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-838.1109619140625, 55.69947814941406, -3539.30322265625)
       wait(.5)
       fireclickdetector(workspace.NPC.Quests.Air.Temzin.Click) 
       wait(.5)
    end 
end) 
end 
end) 

ss:Toggle("Auto Message Quest",function(t)
autohit2 = t 
while autohit2 do task.wait() 
pcall(function()

if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Enabled == false and game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.Mainframe.Visible == false then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3128.192138671875, 96.97107696533203, -3373.212890625)
wait(.5)
fireclickdetector(workspace.NPC.Quests.Fire["MessageQuest two"].Click)
wait(1.5)
function click_button1(button)
    button = game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.Mainframe["Positive Choice"]
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, "",button, 1)
end
click_button1()
end 

if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Mainframe.Quest.Current.Text == "Send a message to Flamiou's wife.. 0/1" and game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.Mainframe.Visible == false then 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2213.433837890625, 110.3484878540039, -3228.70849609375)
      fireclickdetector(workspace.NPC.Quests.Outside["Young Lady"].Click) 
       wait(.5)
    end 
end) 
end 
end) 

ss:Toggle("Auto Panda Lily Quest",function(t)
autohit = t 
while autohit do task.wait() 
pcall(function()

if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Enabled == false and game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.Mainframe.Visible == false then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2636.1787109375, 90.16978454589844, -4301.24560546875)
wait(.5)
fireclickdetector(workspace.NPC.Quests.Fire["Young Lady ( Panda Lily )"].Click)
wait(3)
function click_button1(button)
    button = game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.Mainframe["Positive Choice"]
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, "",button, 1)
end
click_button1()
end 

if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Mainframe.Quest.Current.Text == "Find the rare Panda Lily. 0/1" and game:GetService("Players").LocalPlayer.PlayerGui.Dialogue.Mainframe.Visible == false then 
for i,v in pairs(workspace.dev.Volcano["Panda Lily"]:GetChildren()) do 
    if v.Name == "Panda Lily Spawn" and v:FindFirstChild("Flower") then 
        repeat wait() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame 
        wait(.5)
       fireproximityprompt(v.Flower) 
       wait(1)
       until game:GetService("Players").LocalPlayer.PlayerGui.Quest.Mainframe.Quest.Current.Text == "Find the rare Panda Lily. 1/1" or autohit == false 
    end 
end 
end 

if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Mainframe.Quest.Current.Text == "Find the rare Panda Lily. 1/1" or game:GetService("Players").LocalPlayer.PlayerGui.Quest.Mainframe.Quest.Current.Text == "Find the rare Panda Lily. 2/1" then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2636.1787109375, 90.16978454589844, -4301.24560546875)
wait(.5)
fireclickdetector(workspace.NPC.Quests.Fire["Young Lady ( Panda Lily )"].Click)
wait(3)
end 

end) 
end 
end) 


local Npc_Table = {} 
for i,v in pairs(workspace.NPC:GetDescendants()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then 
        table.insert(Npc_Table,v.Name)
    end 
end 

sss:Dropdown("Npc Teleports",Npc_Table,function(t)
npctotp = t 
end) 

sss:Button("Tp To Npc",function()
for i,v in pairs(workspace.NPC:GetDescendants()) do 
if v.Name == npctotp then 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame 
end 
end 
end) 

end 

if game.GameId == 4413474174 and getgenv().HUNTERXUNLEASHED == true then 

    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))



local ss = Window:Tab("MAIN")
local sss = Window:Tab("MODES")
local tp = Window:Tab("TELEPORTS")


ss:Button("BYPASS AC [USE FIRST]",function()
hookfunction(debug.info, function()end)

function infWait(...) return task.wait(9e9); end

for _, f in ipairs(getgc()) do
    if not islclosure(f) then continue end

    for _, c in ipairs(debug.getconstants(f)) do
        if type(c) == "string" and c:lower():find("adonis anti cheat") then
            hookfunction(f, infWait);
        end
    end
end
end) 

ss:Button("Safe Spot Tp",function(t) 
 local baseplate = Instance.new("Part")

baseplate.Name = "baseplate Draco Hub" 

baseplate.Parent = game:GetService("Workspace")

baseplate.CFrame = CFrame.new(-1426.270751953125, 50000.4840087890625, 1828.6224365234375)

baseplate.Anchored = true 

baseplate.CanCollide = true 

baseplate.Size = Vector3.new(1000,1000,1000)
wait(.5)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = baseplate.CFrame + Vector3.new(0,5,0)


end) 



ss:Toggle("Auto Pushups",function(t)
    push = t 
    while push do wait() 
        pcall(function()
if game.Players.LocalPlayer.PlayerGui:FindFirstChild("PushupsGui") == nil and game.Players.LocalPlayer.Character.Humanoid.Info.Stamina.Value >= game.Players.LocalPlayer.Character.Humanoid.Info.MaxStam.Value then 
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.J, "", game)


elseif  game.Players.LocalPlayer.PlayerGui:FindFirstChild("PushupsGui") ~= nil then 
    repeat 
        wait(1) 
toolname = game.Players.LocalPlayer.PlayerGui.PushupsGui.Pushups.Button
local args = {
    [1] = Enum.KeyCode[toolname.Text]
}

game:GetService("Players").LocalPlayer.PlayerGui.PushupsGui.Pushups.RemoteEvent:FireServer(unpack(args))

         until game.Players.LocalPlayer.Character.Humanoid.Info.Stamina.Value <= 0 or push == false 
          end 
        end) 
    end 
    
end) 

ss:Toggle("Auto Meditate With Pushups/Others",function(t)
automed = t 
while automed do wait() 
    pcall(function()
if game.Players.LocalPlayer.Character.Humanoid.Info.Stamina.Value <= 0 and game.Players.LocalPlayer.Character.Humanoid.Info.Meditating.Value == false  then 
        
local args = {
    [1] = "M",
    [2] = function()end --[[spawn]]
}

game:GetService("Players").LocalPlayer.Character.Character.input:FireServer(unpack(args))

if game.Players.LocalPlayer.Character.Humanoid.Info.Stamina.Value >= game.Players.LocalPlayer.Character.Humanoid.Info.MaxStam.Value and  game.Players.LocalPlayer.Character.Humanoid.Info.Meditating.Value == true then 
repeat 
wait() 
local args = {
    [1] = "M",
    [2] = function()end --[[spawn]]
}

game:GetService("Players").LocalPlayer.Character.Character.input:FireServer(unpack(args))
wait(3)
until game.Players.LocalPlayer.Character.Humanoid.Info.Meditating.Value == false or automed == false 
         end 
      end 
    end) 
end 

end) 

ss:Toggle("Auto Meditate Normal",function(t)
automed = t 
while automed do wait() 
    pcall(function()
if game.Players.LocalPlayer.Character.Humanoid.Info.Meditating.Value == false  then 
        
local args = {
    [1] = "M",
    [2] = function()end --[[spawn]]
}

game:GetService("Players").LocalPlayer.Character.Character.input:FireServer(unpack(args))
     
      end 
    end) 
end 

end) 

ss:Toggle("Climb Training",function(t)
automed1 = t
while automed1 do wait()
    pcall(function()
if game.Players.LocalPlayer.Character.Humanoid.Info.Stamina.Value >=  game.Players.LocalPlayer.Character.Humanoid.Info.MaxStam.Value and game.Players.LocalPlayer.Character.Humanoid.Info.Climbing.Value == false then

local args = {
    [1] = "ClimbStart"
}

game:GetService("Players").LocalPlayer.Character.Character.input:FireServer(unpack(args))
repeat 
    wait() 
    until  game.Players.LocalPlayer.Character.Humanoid.Info.Stamina.Value <= 1  
if game.Players.LocalPlayer.Character.Humanoid.Info.Stamina.Value <= 1 then
repeat 
    wait() 
until game.Players.LocalPlayer.Character.Humanoid.Info.Stamina.Value >= game.Players.LocalPlayer.Character.Humanoid.Info.MaxStam.Value or automed1 == false 
end 
end 
end)
end
end)

ss:Toggle("Train Speed",function(t)
speed1 = t 
while speed1 do wait() 
    pcall(function()
if game.Players.LocalPlayer.Character.Humanoid.Info.Stamina.Value >= game.Players.LocalPlayer.Character.Humanoid.Info.MaxStam.Value then 

local args = {
    [1] = "FastSprintStart",
    [2] = true 
}

game:GetService("Players").LocalPlayer.Character.Character.input:FireServer(unpack(args))
    repeat 
    wait() 
until game.Players.LocalPlayer.Character.Humanoid.Info.Stamina.Value <= 0 or autosp == false 

if game.Players.LocalPlayer.Character.Humanoid.Info.Stamina.Value <= 0 then 
    
local args = {
    [1] = "FastSprintEnd",
    [2] = true 
}

game:GetService("Players").LocalPlayer.Character.Character.input:FireServer(unpack(args))
   repeat 
       wait() 
   until  game.Players.LocalPlayer.Character.Humanoid.Info.Stamina.Value >= game.Players.LocalPlayer.Character.Humanoid.Info.MaxStam.Value 
end 
end 
end) 
end 
end)

ss:Button("Print Speed,Stamina,Health",function()
print("Health: "..game.Players.LocalPlayer.Character.Humanoid.Health)    
print("Speed: "..game.Players.LocalPlayer.Character.Humanoid.WalkSpeed)    
print("Max Stamina: "..game.Players.LocalPlayer.Character.Humanoid.Info.MaxStam.Value)    
end) 

sss:Toggle("Auto Activate Nen",function(t)
    nent = t 
    while nent do wait(2) 
        pcall(function()
   if  game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value >= 100 then 
local args = {
    [1] = "N",
    [2] = function()end --[[spawn]]
}

game:GetService("Players").LocalPlayer.Character.Character.input:FireServer(unpack(args))

elseif  game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value <= 3 then 
    repeat 
        wait() 
    until game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value >= 100
            end 
        end) 
    end 
    
end) 


sss:Toggle("Auto Activate Ten",function(t)
    nent = t 
    while nent do wait(2) 
        pcall(function()
   if  game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value >= 100 then 
local args = {
    [1] = "B",
    [2] = function()end --[[spawn]]
}

game:GetService("Players").LocalPlayer.Character.Character.input:FireServer(unpack(args))


elseif  game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value <= 3 then 
    repeat 
        wait() 
    until game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value >= 100
            end 
        end) 
    end 
    
end) 


sss:Toggle("Auto Activate Ren",function(t)
    nent = t 
    while nent do wait(2) 
        pcall(function()
   if  game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value >= 100 then 
local args = {
    [1] = "V",
    [2] = function()end --[[spawn]]
}

game:GetService("Players").LocalPlayer.Character.Character.input:FireServer(unpack(args))


elseif  game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value <= 3 then 
    repeat 
        wait() 
    until game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value >= 100
            end 
        end) 
    end 
    
end) 

sss:Toggle("Auto Activate Zetsu",function(t)
    nent = t 
    while nent do wait(2) 
        pcall(function()
   if  game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value >= 100 then 
local args = {
    [1] = "C",
    [2] = function()end --[[spawn]]
}

game:GetService("Players").LocalPlayer.Character.Character.input:FireServer(unpack(args))


elseif  game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value <= 3 then 
    repeat 
        wait() 
    until game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value >= 100
            end 
        end) 
    end 
    
end) 

sss:Toggle("Auto Activate Ko",function(t)
    nent = t 
    while nent do wait(2) 
        pcall(function()
   if  game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value >= 100 then 
local args = {
    [1] = "X",
    [2] = function()end --[[spawn]]
}

game:GetService("Players").LocalPlayer.Character.Character.input:FireServer(unpack(args))


elseif  game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value <= 3 then 
    repeat 
        wait() 
    until game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value >= 100
            end 
        end) 
    end 
    
end) 

sss:Toggle("Auto Activate Ken",function(t)
    nent1 = t 
    while nent1 do wait(2) 
        pcall(function()
   if  game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value >= 100 then 
local args = {
    [1] = "H",
    [2] = function()end --[[spawn]]
}

game:GetService("Players").LocalPlayer.Character.Character.input:FireServer(unpack(args))


elseif  game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value <= 3 then 
    repeat 
        wait() 
    until game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value >= 100
            end 
        end) 
    end 
    
end) 

sss:Toggle("Auto Activate En",function(t)
    nentk = t 
    while nentk do wait(2) 
        pcall(function()
   if  game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value >= 100 then 
local args = {
    [1] = "K",
    [2] = function()end --[[spawn]]
}

game:GetService("Players").LocalPlayer.Character.Character.input:FireServer(unpack(args))


elseif  game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value <= 3 then 
    repeat 
        wait() 
    until game.Players.LocalPlayer.Character.Humanoid.Info.NenStam.Value >= 100
            end 
        end) 
    end 
    
end) 


local Npc_Table = {} 
for i,v in pairs(workspace.NPCs:GetChildren()) do 
    if v:IsA("Model") and not table.find(Npc_Table,v.Name) then
        table.insert(Npc_Table,v.Name)
    end 
end 


tp:Dropdown("NPC TO TP TO",Npc_Table,function(t)
npctotpto = t 
end) 

tp:Button("TP TO NPC",function()
for i = 1,4 do wait(.2)
for i,v in pairs(workspace.NPCs:GetChildren()) do 
if v.Name == npctotpto then 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.WorldPivot.Position)
end 
end 
end 
end) 

end 

if game.GameId == 4871329703 and getgenv().TYPESOUL == true then 

    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))

local s1 = Window:Tab("MAIN")
local ss = Window:Tab("ESP")
local Mobs_Table = {"Fishbone","Frisker","Lost Soul","Jackal","Shinigami"} 



s1:Toggle("Auto Zanpakuto",function(t)
autosheath = t 
while autosheath do task.wait() 
pcall(function()
if game.Players.LocalPlayer.Character:FindFirstChild("Zanpakuto") ~= nil then 
    repeat wait() 
game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes.Weapon:FireServer()
until game.Players.LocalPlayer.Character:FindFirstChild("Zanpakuto") == nil or autosheath == false 
end 
end) 
end 
end) 

s1:Dropdown(
            "Mobs To Farm",
            Mobs_Table,
            function(mb)
                getgenv().mobs = mb
            end
        )

local TweenService  = game:GetService("TweenService")
local noclipE       = true 
local antifall      = true 

local function noclip()
    for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("BasePart") and v.CanCollide == true then
            v.CanCollide = false
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
        end
    end
end
    
local function moveto(obj, speed)
    local info = TweenInfo.new(((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude)/ speed,Enum.EasingStyle.Linear)
    local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj + Vector3.new(0, 0, 5)})

    if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
        antifall = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
        antifall.Velocity = Vector3.new(0,0,0)
        noclipE = game:GetService("RunService").Stepped:Connect(noclip)
        tween:Play()
    end
        
    tween.Completed:Connect(function()
        antifall:Destroy()
        noclipE:Disconnect()
    end)
end


                        
      s1:Toggle("Autofarm Start Mobs",function(state)
            farm = state
            while farm do wait()
            pcall(function()
        for i, v in pairs(workspace.Entities:GetChildren()) do
                    if game.Players.LocalPlayer.Character.Humanoid.Health >= 50 and string.match(v.Name,mobs) and v:FindFirstChild("HumanoidRootPart") then
                        repeat wait()
                        moveto(CFrame.new(v.HumanoidRootPart.Position + Vector3.new(0, Distance, 0)),200)
                        local args = {
    [1] = "LightAttack"
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ServerCombatHandler"):FireServer(unpack(args))

                        until v.Humanoid.Health <= 0 or farm == false
                    if v.Humanoid.Health <= 0 then 
                    wait(1)
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0,10,0))
                    wait(2)
                    game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes.Execute:FireServer()
                    wait(3)
                    end 
                    end
                end
            end)
        end 
    end)

Distance = 5 

s1:Slider("Mob Distance ","MAKE SURE ITS UNDERGROUND OR YOU GET KICKED",-1,-35,-30,function(t)
Distance = t 
end) 



ss:Button("Show All Hollow Spawns",function()
for __,v in pairs(workspace.HollowSpawns:GetChildren()) do -- the path
 if v:IsA("Part") and v:FindFirstChild("MOB ESP {DRACO HUB}") == nil then -- the item
  
   local a = Instance.new("BillboardGui",v) -- pretty much explains everything
   a.Name = "MOB ESP {DRACO HUB}"
   a.Size = UDim2.new(2,0, 2,0)
   a.AlwaysOnTop = true
    
   local c = Instance.new('TextLabel',a)
   c.Size = UDim2.new(2,0,2,0)
   c.BorderSizePixel = 0
   c.TextSize = 10
   c.Text = "Hollow Spawn"
   c.TextColor = BrickColor.new(196, 40, 28)
   c.BackgroundTransparency = 1
   repeat wait() 
   until v:FindFirstChild("MOB ESP {DRACO HUB}") or esp == false 
 end
end
end) 

ss:Button("Delete All Hollow Spawns ESP",function()
for __,v in pairs(workspace.HollowSpawns:GetDescendants()) do -- the path
if v.Name == "MOB ESP {DRACO HUB}" then 
    v:Destroy() 
end 
end 
end) 

ss:Button("Show All Human Spawns",function()
for __,v in pairs(workspace.HumanSpawns:GetChildren()) do -- the path
 if v:IsA("Part") and v:FindFirstChild("MOB ESP {DRACO HUB}") == nil then -- the item
  
   local a = Instance.new("BillboardGui",v) -- pretty much explains everything
   a.Name = "MOB ESP {DRACO HUB}"
   a.Size = UDim2.new(2,0, 2,0)
   a.AlwaysOnTop = true
    
   local c = Instance.new('TextLabel',a)
   c.Size = UDim2.new(2,0,2,0)
   c.BorderSizePixel = 0
   c.TextSize = 10
   c.Text = "Human Spawn"
   c.TextColor = BrickColor.new(75, 151, 75)
   c.BackgroundTransparency = 1
   repeat wait() 
   until v:FindFirstChild("MOB ESP {DRACO HUB}") or esp == false 
 end
end
end) 

ss:Button("Delete All Human Spawns ESP",function()
for __,v in pairs(workspace.HumanSpawns:GetDescendants()) do -- the path
if v.Name == "MOB ESP {DRACO HUB}" then 
    v:Destroy() 
end 
end 
end) 

ss:Seperator() 


ss:Button("NPC ESP",function()
for __,v in pairs(workspace.NPCs:GetDescendants()) do -- the path
 if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("MOB ESP {DRACO HUB}") == nil then -- the item
  
   local a = Instance.new("BillboardGui",v) -- pretty much explains everything
   a.Name = "MOB ESP {DRACO HUB}"
   a.Size = UDim2.new(2,0, 2,0)
   a.AlwaysOnTop = true
    
   local c = Instance.new('TextLabel',a)
   c.Size = UDim2.new(2,0,2,0)
   c.BorderSizePixel = 0
   c.TextSize = 10
   c.Text = v.Name
   c.TextColor = BrickColor.new(75, 151, 75)
   c.BackgroundTransparency = 1
   repeat wait() 
   until v:FindFirstChild("MOB ESP {DRACO HUB}") or esp == false 
 end
end
end) 

ss:Button("Delete All NPCS ESP",function()
for __,v in pairs(workspace.NPCs:GetDescendants()) do -- the path
if v.Name == "MOB ESP {DRACO HUB}" then 
    v:Destroy() 
end 
end 
end) 

ss:Button("MOBS ESP",function()
for i,v in pairs(workspace.Entities:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("CharacterHandler") == nil then  
local plr = game:GetService("Workspace")
local target = v
local targett = target.Name
if target then
local a = Instance.new("BillboardGui",target)
a.Size = UDim2.new(3,0, 3,0)
a.Name = "A"
a.AlwaysOnTop = true
local b = Instance.new("Frame",a)
   b.Size = UDim2.new(1,0, 1,0)
   b.BackgroundTransparency = 0.4
b.BorderSizePixel = 0
local c = Instance.new("TextLabel",b)
c.Text = targett
c.Size = UDim2.new(1,0, 1,0)
c.BackgroundTransparency = 1
c.BorderSizePixel = 0
end
    end 
    end 
    
end) 

ss:Button("Delete Mobs Esp",function()
for __,v in pairs(workspace.Entities:GetDescendants()) do -- the path
if v.Name == "A" then 
    v:Destroy() 
end 
end 
end) 


end 
if game.GameId == 2880808628 and getgenv().FIREFORCE == true then 

    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))


local ss = Window:Tab("MAIN")
local sss = Window:Tab("MISC")
local s4 = Window:Tab("TRAINING")

local Character_Table = {
    "AdultCivilianNPC",
    "Amaterasu",
    "Backpacker",
    "BerserkerInfernal",
    "Brandon",
    "CarThief",
    "ChildCivilianNPC",
    "ChildNPC",
    "CrawlerInfernal",
    "Curt",
    "ExplodingInfernal",
    "FireForceScientist",
    "Girl",
    "Inca",
    "Infernal",
    "Infernal Demon",
    "Infernal Oni",
    "Infernal2",
    "LightningNPC",
    "OldLady",
    "OldMan",
    "Parry Block",
    "Parry No Block",
    "Pedro",
    "PurseNPC",
    "PurseNPC",
    "RealExaminer",
    "Shadow",
    "ShoNPC",
    "ShoTest",
    "SummoningInfernal",
    "Thug1",
    "ThugNPC",
    "UnknownExaminer",
    "WhiteCladDefender1",
    "WhiteCladScout",
    "WhiteCladTraitor1",
    "WhiteCladTraitor2"
}

  local Character_Table2 = {}
        for i, v in pairs(workspace.Alive:GetChildren()) do
            if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Target") and not table.find(Character_Table2,v.Name) then
                table.insert(Character_Table2, v.Name) 
            end
        end


local tool_table = {}
    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") then
            table.insert(tool_table, v.Name)
        end
    end
    SelectedWeapon = nil

local TweenService  = game:GetService("TweenService")
local noclipE       = true 
local antifall      = true 

local function noclip()
    for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("BasePart") and v.CanCollide == true then
            v.CanCollide = false
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
        end
    end
end
    
local function moveto(obj, speed)
    local info = TweenInfo.new(((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude)/ speed,Enum.EasingStyle.Linear)
    local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj + Vector3.new(0, 0, 5)})

    if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
        antifall = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
        antifall.Velocity = Vector3.new(0,0,0)
        noclipE = game:GetService("RunService").Stepped:Connect(noclip)
        tween:Play()
    end
        
    tween.Completed:Connect(function()
        antifall:Destroy()
        noclipE:Disconnect()
    end)
end


                        
    ss:Dropdown(
        "Select Tool",
        tool_table,
        function(SelectedOption)
            SelectedWeapon = SelectedOption
        end
    )

    ss:Toggle(
        "AutoEquip",
        function(t)
            Equip = t
            while Equip do wait() 
                pcall(function()
                    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v.Name == SelectedWeapon then
                            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                        end
                    end
                end)
            end
        end)




ss:Toggle("Auto Get Infernal Quest","Farm Infernal Demons with this",function(t)
      autoinfernal = t 
      while autoinfernal do task.wait() 
      pcall(function()
if game:GetService("Players").LocalPlayer.PlayerGui.Status.SideQuest.Visible == true and game:GetService("Players").LocalPlayer.PlayerGui.Status.SideQuest.QuestName.Text ~= "Defeat Infernals" then 
function click_button1(button)
    button = game:GetService("Players").LocalPlayer.PlayerGui.Status.SideQuest.Quit
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, "",button, 1)
end
click_button1()
end 

if game:GetService("Players").LocalPlayer.PlayerGui.Status.SideQuest.Visible == false then 
for i,v in pairs(workspace.IgnoreParts:GetChildren()) do 
    if v:IsA("Part") and v:FindFirstChild("ClickDetector") and v:FindFirstChild("MIssionName") and v.MIssionName.TextLabel.Text == "Defeat Infernals" then 
        fireclickdetector(v.ClickDetector)
    end 
end 

end 



      end) 
      end 
      end) 

       
       local mobdrop =  ss:Dropdown(
            "Mobs To Farm",
            Character_Table,
            function(mb)
                getgenv().mobs = mb
            end
        )

     
      ss:Toggle("Seperate Kill Aura","dont use with auto grip",function(t)
      killaura = t 
      while killaura do task.wait() 
      pcall(function()
                  local args = {
    [1] = 1,
    [2] = game:GetService("Players").LocalPlayer.Character.FistCombat,
    [3] = CFrame.new(-746.1505737304688, 554.1997680664062, 4668.6201171875, -0.9896926879882812, 0, 0.1432073414325714, 0, 1, 0, -0.1432073414325714, 0, -0.9896926879882812),
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CombatEvent"):FireServer(unpack(args))

local args = {
    [1] = 4,
    [2] = game:GetService("Players").LocalPlayer.Character.FistCombat,
    [3] = CFrame.new(-746.1505737304688, 554.1997680664062, 4668.6201171875, -0.9896926879882812, 0, 0.1432073414325714, 0, 1, 0, -0.1432073414325714, 0, -0.9896926879882812),
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CombatEvent"):FireServer(unpack(args))

      end) 
      end 
      end) 

      ss:Toggle(
        'Autofarm Start Mobs',"Start Autofarming Mobs",
        function(state)
     
       
            
            farm = state

            while farm do task.wait() 
            pcall(function()
        for i, v in pairs(workspace.Alive:GetChildren()) do
                    if v.Name == mobs and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Knocked") == nil then
                        repeat
                        wait()
                        moveto(CFrame.new(v.HumanoidRootPart.Position + Vector3.new(0, Distance, 0)),200)
                       local args = {
     [1] = 1,
    [2] = game:GetService("Players").LocalPlayer.Character.FistCombat,
    [3] = CFrame.new(-746.1505737304688, 554.1997680664062, 4668.6201171875, -0.9896926879882812, 0, 0.1432073414325714, 0, 1, 0, -0.1432073414325714, 0, -0.9896926879882812),
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CombatEvent"):FireServer(unpack(args))

local args = {
    [1] = 4,
    [2] = game:GetService("Players").LocalPlayer.Character.FistCombat,
    [3] = CFrame.new(-746.1505737304688, 554.1997680664062, 4668.6201171875, -0.9896926879882812, 0, 0.1432073414325714, 0, 1, 0, -0.1432073414325714, 0, -0.9896926879882812),
    [4] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CombatEvent"):FireServer(unpack(args))

                     until v:FindFirstChild("Knocked") or farm == false
                     
                       if v:FindFirstChild("Knocked") then 
                       wait(1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame 
wait(1)
local args = {
    [1] = true,
    [2] = workspace:WaitForChild("Alive"):WaitForChild(v.Name)
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("GripEvent"):FireServer(unpack(args))

local args = {
    [1] = false,
    [2] = workspace:WaitForChild("Alive"):WaitForChild(v.Name)
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("GripEvent"):FireServer(unpack(args))
wait(6)
                       
 end 
                    end 

                end
            end)
            end 
        end
    )

    Distance = 5

    ss:Slider(
        "Distance","Mob To Player Distance",
        -9,
        10,11,
        function(t)
            Distance = t
        end
    )
    


ss:Toggle("Auto Grip",function(t)
autogrip = t 
while autogrip do task.wait() 
pcall(function()

for i, v in pairs(workspace.Alive:GetChildren()) do
if v.Name == mobs  and v:FindFirstChild("Knocked") ~= nil then
wait(1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame 
wait(1)
local args = {
    [1] = true,
    [2] = workspace:WaitForChild("Alive"):WaitForChild(v.Name)
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("GripEvent"):FireServer(unpack(args))

local args = {
    [1] = false,
    [2] = workspace:WaitForChild("Alive"):WaitForChild(v.Name)
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("GripEvent"):FireServer(unpack(args))
wait(6)
end 
end 
end) 
end 
end) 

Npc_Table = {} 
for i,v in pairs(workspace.LiveNPCS:GetChildren()) do 
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then 
        table.insert(Npc_Table,v.Name)
    end 
end 


sss:Dropdown("Npcs To Tp To",Npc_Table,function(t)
npctotpto = t 
end) 

sss:Button("Tp To Npc",function()
for i,v in pairs(workspace.LiveNPCS:GetChildren()) do 
if v.Name == npctotpto then 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame 
end 
end 
end) 

sss:Toggle("Auto Reset On 1 Hp","Use with autofarm",function(t)
autores = t 
while autores do task.wait() 
pcall(function()
if game.Players.LocalPlayer.Character.Humanoid.Health <= 5 then 
    game.Players.LocalPlayer.Character.Humanoid.Health = 0 
end 
end) 
end 
end) 

sss:Toggle("Auto Skill 1",function(t)
autoout = t 
while autoout do task.wait() 
pcall(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.One, "false", game)

end) 
end 
end) 

sss:Toggle("Auto Skill 2",function(t)
autoout2 = t 
while autoout2 do task.wait() 
pcall(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Two, "false", game)

end) 
end 
end) 

sss:Toggle("Auto Skill 3",function(t)
autoout3 = t 
while autoout3 do task.wait() 
pcall(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Three, "false", game)

end) 
end 
end) 

sss:Toggle("Auto Skill 4",function(t)
autoout4 = t 
while autoout4 do task.wait() 
pcall(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Four, "false", game)

end) 
end 
end) 


s4:Toggle("Auto Buy Defence Training Mats",function(t)
autobuy = t 
while  autobuy do task.wait() 
pcall(function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Trainings.Defense:GetChildren()[6].ClickPart.CFrame
wait(.5)
fireclickdetector(workspace.Trainings.Defense:GetChildren()[6].ClickPart.ClickDetector)
wait(.5)
function click_button1(button)
    button = game:GetService("Players").LocalPlayer.PlayerGui.TextGUI.Frame.Accept
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, "",button, 1)
end
click_button1()
end )
end
end) 

s4:Toggle("Auto Press Defense Training Keys",function(t)
autotraindefence = t 
while autotraindefence do task.wait() 
pcall(function()

for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.TrainingGui.KeyOrder:GetDescendants()) do 
if v.Name == "Key" then 
 
local args = {
    [1] = "Defense",
    [2] = v.Text
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TrainingEvent"):FireServer(unpack(args))

end 
end 

end) 
end 
end) 

end

 if game.GameId == 4231436877  and getgenv().FIGHTERSERA2 == true  then -- FIGHTERS ERA 2 

--INBUILT ANTI AFK 
local VirtualUser=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
warn("anti-afk")
VirtualUser:CaptureController()
VirtualUser:ClickButton2(Vector2.new())
end)

    local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))

    
local ss = Window:Tab("MAIN")
local t2 = Window:Tab("TRAININGS")
local s33 = Window:Tab("FOOD")



Trainings_Table = {"Situps","Pushups","Squats"} 

ss:Dropdown("Training To Farm",Trainings_Table,function(t)
ttot = t 
end) 

ss:Slider("Rep Wait",0,10,9,function(t)
repsec = t 
end) 

ss:Toggle("Auto Train",function(t)
autotrain = t 
while autotrain do task.wait() 
pcall(function()

if game.Players.LocalPlayer.Character:FindFirstChild(ttot) == nil then 
game.Players.LocalPlayer.Backpack:FindFirstChild(ttot).Parent = game.Players.LocalPlayer.Character 
wait(.5)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(.1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,false,game,1)
wait(.5)
game.Players.LocalPlayer.Character:FindFirstChild(ttot).Parent = game.Players.LocalPlayer.Backpack
wait(.5)
game.Players.LocalPlayer.Backpack:FindFirstChild(ttot).Parent = game.Players.LocalPlayer.Character 
end 

if game.Players.LocalPlayer.Character:FindFirstChild(ttot) ~= nil then
repeat wait()
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(.1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,false,game,1)
wait(repsec)
until game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Frame.StaminaFront.AbsoluteSize.X <= 100 or game.Players.LocalPlayer.Character:FindFirstChild(ttot) == nil or  autotrain == false 
end 

if game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Frame.StaminaFront.AbsoluteSize.X <= 100 and game.Players.LocalPlayer.Character:FindFirstChild(ttot) ~= nil then 
game.Players.LocalPlayer.Character:FindFirstChild(ttot).Parent = game.Players.LocalPlayer.Backpack
repeat wait() 
until game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Frame.StaminaFront.AbsoluteSize.X >= 400 or autotrain == false 
end 

end) 
end 
end) 

local TweenService  = game:GetService("TweenService")
local noclipE       = true 
local antifall      = true 

local function noclip()
    for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("BasePart") and v.CanCollide == true then
            v.CanCollide = false
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
        end
    end
end
    
local function moveto(obj, speed)
    local info = TweenInfo.new(((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude)/ speed,Enum.EasingStyle.Linear)
    local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj + Vector3.new(0, 0, 5)})

    if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
        antifall = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
        antifall.Velocity = Vector3.new(0,0,0)
        noclipE = game:GetService("RunService").Stepped:Connect(noclip)
        tween:Play()
    end
        
    tween.Completed:Connect(function()
        antifall:Destroy()
        noclipE:Disconnect()
    end)
end


pcall(function()
local lp = game:GetService("Players").LocalPlayer
local Root = lp.Character:FindFirstChild("Torso")

for i,v in pairs(getconnections(Root:GetPropertyChangedSignal("CanCollide"))) do
  v:Disable()
end
local rs = game:GetService("RunService")
rs.Heartbeat:Connect(function()
    for i, v in pairs(lp.Character:GetChildren()) do
        if v:IsA("BasePart") and v.CanCollide == true then
            v.CanCollide = false
        end
    end
end)
end) 

ss:Button("MAKE MAP GO UNDERGROUND",function()
for i, v in pairs (game.Workspace:GetDescendants()) do
   if v:IsA("Part") then
       v.CFrame = v.CFrame * CFrame.new(0, -10, 0)
   end
   end
end) 

ss:Button("MAKE SURE YOU ARE NEAR POSTERS")

ss:Toggle("Legit Autoquest",function(t)
autoquest = t 
while autoquest do task.wait() 
pcall(function()

for i,v in pairs(workspace.Game.Questboards:GetDescendants()) do 
if v.Name == "Paper" and v:FindFirstChild("ClickDetector") and game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Frame.Visible == false  then 
fireclickdetector(v.ClickDetector) 
end 
end 


if game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Frame.Visible == true and game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Frame.QuestObjective.Text ~= "- Decorate the city with 5 posters" then 

function click_button1(button)
    button = game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Frame.wat
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, false,button, 1)
end
click_button1()

end 


if game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Frame.Visible == true and game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Frame.QuestObjective.Text == "- Decorate the city with 5 posters" then
for i2,v2 in pairs(workspace:GetDescendants()) do 
if v2.Parent:FindFirstChild("Poster_Marker") and v2:IsA("Decal") and v2.Transparency >= 1 and v2.Parent:FindFirstChildOfClass("ProximityPrompt") then 
local dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v2.Parent.Position).Magnitude
if dist <= 40 then 
repeat wait()
local serv = game:GetService("PathfindingService")
local human = game.Players.LocalPlayer.Character.Humanoid -- Change PlayerNameHere to your username.
local body = game.Players.LocalPlayer.Character.Torso or game.Players.LocalPlayer.Character.HumanoidRootPart
local path = serv:CreatePath()
path:ComputeAsync(body.Position,v2.Parent.Position)
if path.Status == Enum.PathStatus.Success then
   local wayPoints = path:GetWaypoints()
   for i = 1,#wayPoints do
       local point = wayPoints[i]
       human:MoveTo(point.Position)
       local success = human.MoveToFinished:Wait()
       if point.Action == Enum.PathWaypointAction.Jump then
           human.WalkSpeed = 0
           wait(0.2)
           human.WalkSpeed = 50
           human.Jump = true
       end
       if not success then
           print("trying again")
           human.Jump = true
           human:MoveTo(point.Position)
           if not human.MoveToFinished:Wait() then
               break
           end
       end
   end
end
fireproximityprompt(v2.Parent:FindFirstChildOfClass("ProximityPrompt"))
until v2.Transparency <= 0 or game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Frame.Visible == false or autoquest == false 
end 
end 
end 
 end 
end) 
end 
end) 


ss:Button("Go To MoneyFarm Position [TP]",function()
moveto(CFrame.new(-647.6832885742188, 1218.754638671875, -855.2093505859375),100)
end) 

ss:Toggle("AutoQuest [MAKE SURE NEAR POSTERS]",function(t)
autoquest = t 
while autoquest do task.wait() 
pcall(function()

for i,v in pairs(workspace.Game.Questboards:GetDescendants()) do 
if v.Name == "Paper" and v:FindFirstChild("ClickDetector") and game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Frame.Visible == false  then 
fireclickdetector(v.ClickDetector) 
end 
end 


if game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Frame.Visible == true and game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Frame.QuestObjective.Text ~= "- Decorate the city with 5 posters" then 

function click_button1(button)
    button = game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Frame.wat
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, false,button, 1)
end
click_button1()

end 


if game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Frame.Visible == true and game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Frame.QuestObjective.Text == "- Decorate the city with 5 posters" then
for i2,v2 in pairs(workspace:GetDescendants()) do 
if v2.Parent:FindFirstChild("Poster_Marker") and v2:IsA("Decal") and v2.Transparency >= 1 and v2.Parent:FindFirstChildOfClass("ProximityPrompt") then 
local dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v2.Parent.Position).Magnitude
if dist <= 40 then 
repeat wait()
moveto(v2.Parent.CFrame + Vector3.new(0,0,0),100)
fireproximityprompt(v2.Parent:FindFirstChildOfClass("ProximityPrompt"))
until v2.Transparency <= 0 or game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Frame.Visible == false or autoquest == false 
end 
end 
end 
 end 
end) 
end 
end) 

key_table = {"W","A","S","D"}



t2:Toggle("Auto Pullup",function(t)
autopull = t 
while autopull do task.wait() 
pcall(function()

if game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored == false and game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Frame.StaminaFront.AbsoluteSize.X >= 200 * 2 then 
game.Players.LocalPlayer.Character.Torso.Anchored = true 
fireproximityprompt(workspace.Game.Other_Equipment.Pullups.Model.Interact.ProximityPrompt)
end 

toolname = game:GetService("Players").LocalPlayer.PlayerGui.Pullup_Minigame.Frame.Frame.TextLabel
if table.find(key_table,toolname.Text) and game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Frame.StaminaFront.AbsoluteSize.X >= 200  then 
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode[toolname.Text],false, game)
game.Players.LocalPlayer.Character.Torso.Anchored = false
wait()
end 

end) 
end 
end) 

t2:Toggle("Auto Buy Shadow",function(t)
autobuys = t 
while autobuys do task.wait() 
pcall(function()
if game.Players.LocalPlayer.Character:FindFirstChild("Shadow Training") == nil and game.Players.LocalPlayer.Backpack:FindFirstChild("Shadow Training") == nil then 
for i,v in pairs(workspace.Game.Buyables:GetChildren()) do 
if v:IsA("Model") and v.Name == "Shadow Training" and v:FindFirstChild("Head") and v.Head:FindFirstChild("ClickDetector") then 
for i = 1,6 do wait(.7)
fireclickdetector(v.Head.ClickDetector)
end 
end 
end 
end 
end) 
end 
end) 


t2:Toggle("Auto Shadow",function(t)
autoshad = t 
while autoshad do task.wait() 
pcall(function()

if workspace.Live:FindFirstChild("Shadow.") == nil and game.Players.LocalPlayer.Backpack:FindFirstChild("Shadow Training") ~= nil then 
game.Players.LocalPlayer.Backpack:FindFirstChild("Shadow Training").Parent = game.Players.LocalPlayer.Character
wait(.1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(.1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,false,game,1)
end 

if workspace.Live:FindFirstChild("Shadow.") ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Fists") ~= nil then
game.Players.LocalPlayer.Character.Fists.Parent = game.Players.LocalPlayer.Backpack
end 

if workspace.Live:FindFirstChild("Shadow.") ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Fists") == nil then
game.Players.LocalPlayer.Backpack.Fists.Parent = game.Players.LocalPlayer.Character
end 

if workspace.Live:FindFirstChild("Shadow.") ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Fists") ~= nil then

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,workspace.Live["Shadow."].HumanoidRootPart.Position)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(.1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,false,game,1)
wait(.5)
end 

 
end) 
end 
end) 




t2:Toggle("Spam 1 [USE WITH SPAR]",function(t)
spam1 = t 
while spam1 do task.wait(.15) 
pcall(function()
game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.One,false, game)
end) 
end 
end) 


t2:Toggle("Auto Spar Training",function(t)
autospar = t 
while autospar do task.wait() 
pcall(function()
if game.Players.LocalPlayer.Backpack:FindFirstChild("Spar Training") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Spar Training") == nil and game.Players.LocalPlayer.Character:FindFirstChild("TRAINING_GLOVES [2372]") == nil  then 
    for i,v in pairs(workspace.Game.Buyables:GetChildren()) do 
        if string.match(v.Name,"Spar Training") then 

            fireclickdetector(v.Head.ClickDetector)
       end 
    end 
end 

if game.Players.LocalPlayer.Backpack:FindFirstChild("Spar Training") ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Spar Training") == nil   then 
wait(.5)
game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack["Spar Training"])
end 
    
if game.Players.LocalPlayer.Character:FindFirstChild("TRAINING_GLOVES [2372]") == nil  then 
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(.1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,game,1)
wait(1)

end 

if   game.Players.LocalPlayer.Character:FindFirstChild("TRAINING_GLOVES [2372]") then 
repeat 

game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(.10)
until   game.Players.LocalPlayer.Character:FindFirstChild("TRAINING_GLOVES [2372]") == nil or autospar == false  

end 

end) 
end 
end) 


t2:Button("Break All Apartment Doors",function()
for i,v in pairs(workspace.Game.Map.Doors:GetChildren()) do 
if v:IsA("Part") then 
v:Destroy()
end 
end 
end) 

ss:Toggle("Inf Running Stamina",function(t)
infrun = t 
while infrun do task.wait() 
pcall(function()
local args = {
    [1] = "Running",
    [2] = false
}

game:GetService("ReplicatedStorage"):WaitForChild("Twine"):WaitForChild("Dependencies"):WaitForChild("RemoteFunction"):InvokeServer(unpack(args))

end) 
end 
end) 


local Items_Table = {} 
for i,v in pairs(workspace.Game.Buyables:GetChildren()) do 
if v:IsA("Model") and v:FindFirstChild("Head") then 
table.insert(Items_Table,v.Name)
end 
end 


ss:Toggle("Anti Staff",function(t)
  getgenv().staff = t
    while getgenv().staff do task.wait(0.3)
        pcall(function()
            for i,v in pairs(game.Players:GetPlayers()) do
                if v:GetRankInGroup(15829836) >= 51 then --number 
                    game.Players.LocalPlayer:Kick(v:GetRoleInGroup(15829836).." Joined.\n\nGroupID:"..v:GetRankInGroup(15829836))
                end
            end 
         end)
        end 
    end)
 

 
 s33:Slider("Auto Eat At %",1,100,101,function(t)
 autoeatperc = t
 end) 
 
 Food_Table = {"Hotdog","Ramen","Yogurt","Sports Drink","Chips","Chocolate Donut","Cola","Strawberry Icecream","Vanilla Icecream","Strawberry Smoothie","Orange Smoothie","Pizza","Meatballs","Fried Rice","Rice Balls","Chocolate Glazed Donut","Protein Bar","Ice Pop"}
 
 s33:Dropdown("Auto Eat Item",Food_Table,function(t)
 fd = t 
 end) 
 
 s33:Toggle("Auto Eat Selected Item",function(t)
 autoeat = t 
 while autoeat do task.wait() 
 pcall(function()
  if game.Players.LocalPlayer.Character:FindFirstChild(fd) == nil and game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Frame.HungerFront.AbsoluteSize.X <= autoeatperc * 2 then 
  game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[fd])
  end 
  
  if game.Players.LocalPlayer.Character:FindFirstChild(fd) ~= nil and game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Frame.HungerFront.AbsoluteSize.X <= autoeatperc * 2 then  
  repeat wait() 
  game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
  until  game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Frame.HungerFront.AbsoluteSize.X >= autoeatperc * 2 or autoeat == false  
  end

  end) 
  end 
 end) 




s33:Slider("Auto Drink At %",1,101,100,function(t)
 autoeatperc2 = t
 end) 


s33:Toggle("Auto Drink Water [FREE]",function(t)
autodrinkwotah = t 
while autodrinkwotah do task.wait() 
pcall(function()

if game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Frame.WaterFront.AbsoluteSize.X <= autoeatperc2 * 2 then 
fireclickdetector(workspace.Game.Map.Folder:GetChildren()[2].Union.ClickDetector)
end 

end) 
end 
end) 

 Food_Table2 = {"Yogurt","Sports Drink","Cola","Strawberry Smoothie","Orange Smoothie","Ice Pop"}
 
 s33:Dropdown("Auto Drink Item",Food_Table2,function(t)
 fd2 = t 
 end) 
 
 s33:Toggle("Auto Drink Selected Item",function(t)
 autoeat2 = t 
 while autoeat2 do task.wait() 
 pcall(function()
  if game.Players.LocalPlayer.Character:FindFirstChild(fd2) == nil and game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Frame.WaterFront.AbsoluteSize.X <= autoeatperc2 * 2 then 
  game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[fd2])
  end 
  
  if game.Players.LocalPlayer.Character:FindFirstChild(fd2) ~= nil and game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Frame.WaterFront.AbsoluteSize.X <= autoeatperc2 * 2 then  
  repeat wait() 
  game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
  wait(.2)
  game.Players.LocalPlayer.Character[fd2].Parent = game.Players.LocalPlayer.Backpack
  until game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Frame.WaterFront.AbsoluteSize.X >= autoeatperc2 * 2 or autoeat2 == false  
  end

  end) 
  end 
 end) 
 
  Food_Table3 = {"Yogurt","Sports Drink","Cola","Strawberry Smoothie","Orange Smoothie","Ice Pop"}
 
 s33:Dropdown("Food To AutoBuy",Food_Table3,function(t)
 ittobuy = t 
 end) 
 
 s33:Toggle("Auto Buy Item",function(t)
 autobuy = t 
 while autobuy do task.wait() 
 pcall(function()
 if game.Players.LocalPlayer.Character:FindFirstChild(ittobuy) == nil and game.Players.LocalPlayer.Backpack:FindFirstChild(ittobuy) == nil then 
  for i = 1,20 do task.wait(.3)
  fireclickdetector(workspace.Game.Buyables[ittobuy].Head.ClickDetector)
  end 
 end 
 end) 
 end 
 end) 



end

if game.GameId == 4652005960 and getgenv().ASURA == true then 




    pcall(function()
        for i, v in next, getconnections(game.Players.LocalPlayer.Idled) do
            v:Disable()
        end
    end) 

local Window = Lib:Window(".gg/dracohub", Color3.fromRGB(98, 37, 209 ))

local ss = Window:Tab("MAIN")
local tr = Window:Tab("TRAININGS")
local fd = Window:Tab("FOOD")
local sss = Window:Tab("MISC")
local n1 = Window:Tab("NOTIFIER")

local PathfindingService = game:GetService("PathfindingService")
local function pathto(part)
    settings = {
        AgentRadius = 2, 
        AgentHeight = 5, 
        AgentCanJump = true,
        AgentJumpHeight = 10,
        AgentMaxSlope = 45,
    }
    local path = PathfindingService:CreatePath(settings)
    path:ComputeAsync(game.Players.LocalPlayer.Character.HumanoidRootPart.Position, part)
    local waypoints = path:GetWaypoints()
    for _, waypoint in pairs(waypoints) do
        local part = Instance.new("Part")
        part.Name = "Bruh"
        part.Shape = "Ball"
        part.Material = "Neon"
        part.Size = Vector3.new(0.6, 0.6, 0.6)
        part.Position = waypoint.Position
        part.Anchored = true
        part.CanCollide = false
        part.Parent = game.Workspace
        game.Players.LocalPlayer.Character.Humanoid:MoveTo(waypoint.Position)
        game.Players.LocalPlayer.Character.Humanoid.MoveToFinished:Wait()
        part:Destroy()
        end
    end

Roadwork_Table = {"Speed","Stamina"}

rdw = "Stamina"

ss:Dropdown("Roadwork Training Select",Roadwork_Table,function(t)
rdw = t 
end) 



ss:Toggle("Auto Roadwork MAKE SURE IN SENKAIMON",function(t)
autoroadwork = t 
while autoroadwork do task.wait() 
pcall(function()

if game.Players.LocalPlayer.Character:FindFirstChild("Roadwork Training") == nil and game.Players.LocalPlayer.PlayerGui:FindFirstChild("BillboardGui") == nil and game.Players.LocalPlayer.Backpack:FindFirstChild("Roadwork Training") == nil then 
pathto(Vector3.new(5830.044921875, -20.50000762939453, 2849.48974609375))
for i3,v3 in pairs(workspace.Purchases.GYM:GetChildren()) do 
    if v3.Name == "Roadwork Training" and v3:FindFirstChild("ClickDetector") then
       wait(.3)
       fireclickdetector(v3.ClickDetector)
    end 
end 

end 

if game.Players.LocalPlayer.Character:FindFirstChild("Roadwork Training") == nil and game.Players.LocalPlayer.Backpack:FindFirstChild("Roadwork Training") ~= nil then 
pathto(Vector3.new(5833.328125, -20.500003814697266, 2861.0009765625))
game.Players.LocalPlayer.Backpack["Roadwork Training"].Parent = game.Players.LocalPlayer.Character
end 

if game.Players.LocalPlayer.Character:FindFirstChild("Roadwork Training") ~= nil and game.Players.LocalPlayer.Backpack:FindFirstChild("Roadwork Training") == nil then 
game.Players.LocalPlayer.Character["Roadwork Training"]:Activate()
wait(.3)
function click_button1(button)
    button = game:GetService("Players").LocalPlayer.PlayerGui.RoadworkGain.Frame[rdw]
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, false,button, 1)
end
click_button1()
end 

for i,v in pairs(workspace.Roadworks.Senkaimon:GetChildren()) do 
    if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("BillboardGui") ~= nil and v.Name == tostring(game:GetService("Players").LocalPlayer.PlayerGui.BillboardGui.Adornee) then 
        pathto(v.Position)
    end 
end 


end) 
end 
end) 

ss:Toggle("Auto Jump [jumps when touches metal]",function(t)
autojump = t 
while autojump do wait() 
    pcall(function()
    if game.Players.LocalPlayer.Character.Humanoid.FloorMaterial == Enum.Material.Metal then 
    wait(1)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end 
    end) 
end 

end) 


local TweenService  = game:GetService("TweenService")
local noclipE       = true 
local antifall      = true 

local function noclip()
    for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("BasePart") and v.CanCollide == true then
            v.CanCollide = false
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
        end
    end
end
    
local function moveto(obj, speed)
    local info = TweenInfo.new(((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude)/ speed,Enum.EasingStyle.Linear)
    local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj + Vector3.new(0, 0, 5)})

    if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
        antifall = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
        antifall.Velocity = Vector3.new(0,0,0)
        noclipE = game:GetService("RunService").Stepped:Connect(noclip)
        tween:Play()
    end
        
    tween.Completed:Connect(function()
        antifall:Destroy()
        noclipE:Disconnect()
    end)
end

 
ss:Toggle("Autofarm Money [RISKY]",function(t)

    local TweenService  = game:GetService("TweenService")
    local noclipE       = true 
    local antifall      = true 
    
    local function noclip()
        for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide == true then
                v.CanCollide = false
                game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
            end
        end
    end
        
    local function moveto(obj, speed)
        local info = TweenInfo.new(((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude)/ speed,Enum.EasingStyle.Linear)
        local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj + Vector3.new(0, 0, 5)})
    
        if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
            antifall = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
            antifall.Velocity = Vector3.new(0,0,0)
            noclipE = game:GetService("RunService").Stepped:Connect(noclip)
            tween:Play()
        end
            
        tween.Completed:Connect(function()
            antifall:Destroy()
            noclipE:Disconnect()
        end)
    end
    
    automoney2 = t
    while automoney2 do task.wait() 
    pcall(function()
    if game:GetService("Players").LocalPlayer.PlayerGui.Main.LabelJob.Text == "" then 
    local args = {
        [1] = "Job"
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("EventCore"):FireServer(unpack(args))
    
    end 
    
    
    if game:GetService("Players").LocalPlayer.PlayerGui.Main.LabelJob.Text == "Clean the floors!" then 
    
    for i,v in pairs(workspace.CleaningParts:GetChildren()) do 
        if v.Name == game.Players.LocalPlayer.Name and v:FindFirstChildOfClass("Part") then 
            repeat wait() 
            moveto(v:FindFirstChildOfClass("Part").CFrame,50)
           fireclickdetector(v:FindFirstChildOfClass("Part").ClickDetector)
       until game:GetService("Players").LocalPlayer.PlayerGui.Main.LabelJob.Text == "" or automoney2 == false 
        end 
    end 
    end 
    
    if game:GetService("Players").LocalPlayer.PlayerGui.Main.LabelJob.Text == "Deliver the crate!" then 
    
    for i,v in pairs(workspace.Delivery:GetDescendants()) do 
        if  v.Name == tostring(game:GetService("Players").LocalPlayer.PlayerGui.BillboardGui.Adornee) and v:IsA("Part") then 
    
        moveto(CFrame.new(v.Position + Vector3.new(0,-6,0)),50)
    if  v.Parent.Name == "To" then 
        moveto(CFrame.new(v.Position + Vector3.new(0,-6,0)),50)
        end 
        end 
    end 
    end 
    end) 
    end 
end) 

ss:Toggle("Autofarm Money [LEGIT]",function(t)
automoney = t
while automoney do task.wait() 
pcall(function()
if game:GetService("Players").LocalPlayer.PlayerGui.Main.LabelJob.Text == "" then 
local args = {
    [1] = "Job"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("EventCore"):FireServer(unpack(args))

end 


if game:GetService("Players").LocalPlayer.PlayerGui.Main.LabelJob.Text == "Clean the floors!" then 

for i,v in pairs(workspace.CleaningParts:GetChildren()) do 
    if v.Name == game.Players.LocalPlayer.Name and v:FindFirstChildOfClass("Part") then 
        repeat wait() 
        pathto(v:FindFirstChildOfClass("Part").Position)
       fireclickdetector(v:FindFirstChildOfClass("Part").ClickDetector)
   until game:GetService("Players").LocalPlayer.PlayerGui.Main.LabelJob.Text == "" or automoney == false 
    end 
end 

end 

if game:GetService("Players").LocalPlayer.PlayerGui.Main.LabelJob.Text == "Deliver the crate!" then 

for i,v in pairs(workspace.Delivery:GetDescendants()) do 
    if  v.Name == tostring(game:GetService("Players").LocalPlayer.PlayerGui.BillboardGui.Adornee) and v:IsA("Part") then 

    pathto(v.Position)
if  v.Parent.Name == "To" then 
    pathto(v.Position)
    end 
    end 
end 
end 
end) 
end 

end) 

Trainings_Table = {"Sit Up","Push Up","Squat"} 

ss:Dropdown("Training To Farm",Trainings_Table,function(t)
ttot = t 
end) 

ss:Slider("Rep Wait",0,10,9,function(t)
repsec = t 
end) 

ss:Toggle("Auto Train",function(t)
autotrain = t 
while autotrain do task.wait() 
pcall(function()

if game.Players.LocalPlayer.Character:FindFirstChild(ttot) == nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X >= 300 then 
game.Players.LocalPlayer.Backpack:FindFirstChild(ttot).Parent = game.Players.LocalPlayer.Character 
end 

if game.Players.LocalPlayer.Character:FindFirstChild(ttot) ~= nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X >= 300 then
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(.1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,false,game,1)
wait(repsec)
end 

if game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X <= 200 and game.Players.LocalPlayer.Character:FindFirstChild(ttot) ~= nil then 
game.Players.LocalPlayer.Character:FindFirstChild(ttot).Parent = game.Players.LocalPlayer.Backpack
repeat wait() 
until game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X >= 300 or autotrain == false 
end 

end) 
end 
end) 


tr:Slider("Hit Every ? Seconds",0,5,4,function(t)
delay = t 
end) 


tr:Toggle("Auto Strike Power Training",function(t)
autosp = t 
while autosp do task.wait() 
pcall(function()
if game.Players.LocalPlayer.Character:FindFirstChild("Strike Power Training") == nil and game.Players.LocalPlayer.PlayerGui:FindFirstChild("BillboardGui") == nil and game.Players.LocalPlayer.Backpack:FindFirstChild("Strike Power Training") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil then 
for i,v in pairs(workspace.Purchases.GYM:GetChildren()) do 
    if v.Name == "Strike Power Training" and v:FindFirstChild("ClickDetector") then 
        fireclickdetector(v.ClickDetector)
        end 
    end 
end 

if game.Players.LocalPlayer.Character:FindFirstChild("Strike Power Training") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game.Players.LocalPlayer.Backpack:FindFirstChild("Strike Power Training") ~= nil then 
game.Players.LocalPlayer.Backpack["Strike Power Training"].Parent = game.Players.LocalPlayer.Character
end 

if game.Players.LocalPlayer.Character:FindFirstChild("Strike Power Training") ~= nil and game.Players.LocalPlayer.Backpack:FindFirstChild("Strike Power Training") == nil  and game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil then 
game.Players.LocalPlayer.Character["Strike Power Training"]:Activate()
end 

if game.Players.LocalPlayer.Character:FindFirstChild("Gloves") ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Combat") == nil  then 
game.Players.LocalPlayer.Backpack.Combat.Parent = game.Players.LocalPlayer.Character
end 

if game.Players.LocalPlayer.Character:FindFirstChild("Gloves") ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Combat") ~= nil and game.Players.LocalPlayer.PlayerGui:FindFirstChild("BillboardGui") ~= nil  then 
for i = 1,5 do wait() 
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(delay)
end 

end 

if game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Combat") ~= nil then 
game.Players.LocalPlayer.Character.Combat.Parent = game.Players.LocalPlayer.Backpack
end 

if game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X <= 30 then 
    repeat wait() 
    until game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X >= 330 or autosp == false 
end 

if game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game.Players.LocalPlayer.Character:FindFirstChuld("Combat") ~= nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc * 3 or game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc2 * 3 or game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc3 * 3 or game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc4 * 3 then 
    game.Players.LocalPlayer.Character.Combat.Parent = game.Players.LocalPlayer.Backpack
  end 

end) 
end 
end) 



tr:Toggle("Auto Strike Speed Training",function(t)
autosp2 = t 
while autosp2 do task.wait() 
pcall(function()
if game.Players.LocalPlayer.Character:FindFirstChild("Strike Speed Training") == nil and game.Players.LocalPlayer.PlayerGui:FindFirstChild("BillboardGui") == nil and game.Players.LocalPlayer.Backpack:FindFirstChild("Strike Speed Training") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil then 
for i,v in pairs(workspace.Purchases.GYM:GetChildren()) do 
    if v.Name == "Strike Speed Training" and v:FindFirstChild("ClickDetector") then 
        fireclickdetector(v.ClickDetector)
        end 
    end 
end 

if game.Players.LocalPlayer.Character:FindFirstChild("Strike Speed Training") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game.Players.LocalPlayer.Backpack:FindFirstChild("Strike Speed Training") ~= nil then 
game.Players.LocalPlayer.Backpack["Strike Speed Training"].Parent = game.Players.LocalPlayer.Character
end 

if game.Players.LocalPlayer.Character:FindFirstChild("Strike Speed Training") ~= nil and game.Players.LocalPlayer.Backpack:FindFirstChild("Strike Speed Training") == nil  and game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil then 
game.Players.LocalPlayer.Character["Strike Speed Training"]:Activate()
end 

if game.Players.LocalPlayer.Character:FindFirstChild("Gloves") ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Combat") == nil  then 
game.Players.LocalPlayer.Backpack.Combat.Parent = game.Players.LocalPlayer.Character
end 

if game.Players.LocalPlayer.Character:FindFirstChild("Gloves") ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Combat") ~= nil and game.Players.LocalPlayer.PlayerGui:FindFirstChild("BillboardGui") ~= nil  then 
for i = 1,5 do wait() 
game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
wait(delay)  
end 
end 

if game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Combat") ~= nil then 
game.Players.LocalPlayer.Character.Combat.Parent = game.Players.LocalPlayer.Backpack
end 

if game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X <= 30 then 
    repeat wait() 
    until game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X >= 330 or autosp2 == false 
end 

if game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game.Players.LocalPlayer.Character:FindFirstChuld("Combat") ~= nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc * 3 or game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc2 * 3 or game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc3 * 3 or game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc4 * 3 then 
  game.Players.LocalPlayer.Character.Combat.Parent = game.Players.LocalPlayer.Backpack
end 

end) 
end 
end) 


Tread_Table = {"Speed","Stamina","Fat"}

tr:Dropdown("TreadMill Training Type",Tread_Table,function(t)
treadtype = t 
end) 

tr:Toggle("Auto Select Training Type",function(t)
autosel = t 
while autosel do task.wait() 
pcall(function()
if game:GetService("Players").LocalPlayer.PlayerGui.TreadmillGain.Frame.Visible == true  then 
function click_button1(button)
    button = game:GetService("Players").LocalPlayer.PlayerGui.TreadmillGain.Frame[treadtype]
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, true,button, 1);
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(button.AbsolutePosition.X + button.AbsoluteSize.X / 2, button.AbsolutePosition.Y + 50, 0, false,button, 1)
end
click_button1()
end 

end) 
end 
end) 

tr:Toggle("Auto Treadmill",function(t)
getgenv().cool = t
while cool do task.wait() 
pcall(function()

if game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored == false and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X >= 330 then 
for i2,v2 in pairs(workspace.Treadmills:GetChildren()) do 
    if v2:IsA("Model") and  v2:FindFirstChild("ClickDetector") then  
    fireclickdetector(v2.ClickDetector)
end 
end 
end 

if game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored == true  and game:GetService("Players").LocalPlayer.PlayerGui.TreadmillGain.Frame2.Visible == true  then 
for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.TreadmillGain.Frame2.Keys:GetChildren()) do
    if v.Name ~= "Line" and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X >= 100 then
        game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode[v.Name],false, game)
end
end
end 

if game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X <= 30 then 

repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X >= 330 or cool == false 
end 

end)
end
end) 

tr:Slider("Kick When Hunger Below ?",1,115,100,function(t)
hungkick = t 
end) 

tr:Toggle("Auto Kick If Low Hunger",function(t)
autokickiflow = t 
while autokickiflow do task.wait() 
pcall(function()
if  game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= hungkick * 3 then 
game.Players.LocalPlayer:Kick("DRACOHUB: KICKED FOR LOW HUNGER")
end 
end) 
end 
end) 

fd:Slider("% To Eat At 1",1,110,100,function(t)
fdperc = t 
end) 

food_table = {"Chicken","Cheeseburger","Sushi","Protein Shake","Milkshake"}
food_table2 = {"Chicken","Cheeseburger","Sushi","Protein Shake","Milkshake"}
food_table3 = {"Chicken","Cheeseburger","Sushi","Protein Shake","Milkshake"}
food_table4 = {"Chicken","Cheeseburger","Sushi","Protein Shake","Milkshake"}

fd:Dropdown("Food To Auto Eat 1",food_table,function(t)
fd = t 
end) 

fd:Toggle("Auto Eat Selected Item 1",function(t)
 autoeat = t 
 while autoeat do task.wait() 
 pcall(function()
  if game.Players.LocalPlayer.Character:FindFirstChild(fd) == nil and game.Players.LocalPlayer.Character:FindFirstChild("Combat") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc * 3  then 
  game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[fd])
  end 
  
  if game.Players.LocalPlayer.Character:FindFirstChild(fd) ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Combat") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and  game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc * 3 then  
  game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
  end

  end) 
  end 
 end) 

fd:Slider("% To Eat At 2",1,113,100,function(t)
fdperc2 = t 
end) 

fd:Dropdown("Food To Auto Eat 2",food_table2,function(t)
fd2 = t 
end) 

fd:Toggle("Auto Eat Selected Item 2",function(t)
 autoeat2 = t 
 while autoeat2 do task.wait() 
 pcall(function()
  if game.Players.LocalPlayer.Character:FindFirstChild(fd2) == nil and game.Players.LocalPlayer.Character:FindFirstChild("Combat") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc2 * 3 then 
  game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[fd2])
  end 
  
  if game.Players.LocalPlayer.Character:FindFirstChild(fd2) ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Combat") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc2 * 3 then  
  game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
  end

  end) 
  end 
 end) 

 fd:Slider("% To Eat At 3",1,113,100,function(t)
fdperc3 = t 
end) 

fd:Dropdown("Food To Auto Eat 3",food_table3,function(t)
fd3 = t 
end) 

fd:Toggle("Auto Eat Selected Item 3",function(t)
 autoeat23 = t 
 while autoeat23 do task.wait() 
 pcall(function()
  if game.Players.LocalPlayer.Character:FindFirstChild(fd3) == nil and game.Players.LocalPlayer.Character:FindFirstChild("Combat") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc3 * 3 then 
  game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[fd3])
  end 
  
  if game.Players.LocalPlayer.Character:FindFirstChild(fd3) ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Combat") == nil and  game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil  and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc3 * 3 then  
  game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
  end

  end) 
  end 
 end) 

fd:Slider("% To Eat At 4",1,113,100,function(t)
fdperc4 = t 
end) 

fd:Dropdown("Food To Auto Eat 4",food_table4,function(t)
fd4 = t 
end) 

fd:Toggle("Auto Eat Selected Item 4",function(t)
 autoeat234 = t 
 while autoeat234 do task.wait() 
 pcall(function()
  if game.Players.LocalPlayer.Character:FindFirstChild(fd4) == nil and game.Players.LocalPlayer.Character:FindFirstChild("Combat") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc4 * 3 then 
  game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[fd4])
  end 
  
  if game.Players.LocalPlayer.Character:FindFirstChild(fd4) ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Combat") == nil and game.Players.LocalPlayer.Character:FindFirstChild("Gloves") == nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Hunger.Clipping.AbsoluteSize.X <= fdperc4 * 3 then  
  game:GetService("VirtualInputManager"):SendMouseButtonEvent(694,361,0,true,game,1)
  end

  end) 
  end 
 end) 




sss:Button("HOP TO LOWEST SERVER",function(t)
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport()
end) 


sss:Toggle("Auto Sprint [Without Speed]",function(t)
autosprint4 = t 
while autosprint4 do task.wait() 
pcall(function()
if game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X >= 290 then 
wait(1)

local args = {
    [1] = "Run",
    [2] = "Start",
    [3] = true,
    [4] = 1
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("EventCore"):FireServer(unpack(args))
wait(.4)
local args = {
    [1] = "Run",
    [2] = "Mode",
    [3] = 2
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("EventCore"):FireServer(unpack(args))

end 

if game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X <= 50 then 
local args = {
    [1] = "Run",
    [2] = "Start",
    [3] = false
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("EventCore"):FireServer(unpack(args))

end 
end) 
end 
end) 

sss:Toggle("Auto Jog [Without Speed]",function(t)
autosprint24 = t 
while autosprint24 do task.wait() 
pcall(function()
    if game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X >= 290 then 
        local args = {
    [1] = "Run",
    [2] = "Start",
    [3] = true,
    [4] = 1
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("EventCore"):FireServer(unpack(args))
wait(2)
end 

if game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X <= 50 then 
local args = {
    [1] = "Run",
    [2] = "Start",
    [3] = false
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("EventCore"):FireServer(unpack(args))
end 
end) 
end 
end) 

sss:Toggle("Auto Sprint [With Speed]",function(t)
autosprint = t 
while autosprint do task.wait() 
pcall(function()
    if game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X >= 290 then 
        local args = {
    [1] = "Run",
    [2] = "Start",
    [3] = true,
    [4] = 1
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("EventCore"):FireServer(unpack(args))

local args = {
    [1] = "Run",
    [2] = "Mode",
    [3] = 2
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("EventCore"):FireServer(unpack(args))


getgenv().WalkSpeedValue = 40; --set your desired walkspeed here
local Player = game:service'Players'.LocalPlayer;
Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
end)
Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
wait(2)
end 

if game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X <= 50 then 
local args = {
    [1] = "Run",
    [2] = "Start",
    [3] = false
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("EventCore"):FireServer(unpack(args))
getgenv().WalkSpeedValue = 16; --set your desired walkspeed here
local Player = game:service'Players'.LocalPlayer;
Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
end)
Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
end 
end) 
end 
end) 

sss:Toggle("Auto Jog [With Speed]",function(t)
autosprint2 = t 
while autosprint2 do task.wait() 
pcall(function()
    if game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X >= 290 then 
        local args = {
    [1] = "Run",
    [2] = "Start",
    [3] = true,
    [4] = 1
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("EventCore"):FireServer(unpack(args))


getgenv().WalkSpeedValue = 35; --set your desired walkspeed here
local Player = game:service'Players'.LocalPlayer;
Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
end)
Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
wait(2)
end 

if game:GetService("Players").LocalPlayer.PlayerGui.Main.HUD.Stamina.Clipping.AbsoluteSize.X <= 50 then 
local args = {
    [1] = "Run",
    [2] = "Start",
    [3] = false
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("EventCore"):FireServer(unpack(args))
getgenv().WalkSpeedValue = 16; --set your desired walkspeed here
local Player = game:service'Players'.LocalPlayer;
Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
end)
Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
end 
end) 
end 
end) 

sss:Slider("WalkSpeed Changer",0,50,50,function(t)
wschanger = t 
end) 


sss:Button("Change WalkSpeed",function()
getgenv().WalkSpeedValue = wschanger --set your desired walkspeed here
local Player = game:service'Players'.LocalPlayer;
Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
end)
Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
end) 

sss:Toggle("Anti Staff",function(t)
  getgenv().staff = t
    while getgenv().staff do task.wait(0.3)
        pcall(function()
            for i,v in pairs(game.Players:GetPlayers()) do
                if v:GetRankInGroup(32353519) >= 50 then --number 
                    game.Players.LocalPlayer:Kick(v:GetRoleInGroup(15829836).." Joined.\n\nGroupID:"..v:GetRankInGroup(15829836))
                end
            end 
         end)
        end 
    end)
    
n1:Slider("Radius To Get Kicked In",1,100,100,function(t)
rad = t 
end)

n1:Toggle("Get Kicked If Someone In Radius",function(t)
local MaxDistance = rad -- Studs

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
autokick = t 
while autokick do task.wait()
    for _, v in next, Players:GetPlayers() do
        if v ~= Player and v.Character and v.Character.PrimaryPart and Player:DistanceFromCharacter(v.Character.PrimaryPart.Position) <= MaxDistance then
            Player:Kick(v.Name .. " got within " .. MaxDistance .. " studs")
        end
    end
end
end) 


end 
